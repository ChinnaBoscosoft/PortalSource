using System;
using Bosco.Utility;
using Bosco.Utility.ConfigSetting;

namespace Bosco.Report.SQL
{
    public class ReportSQL
    {
        #region SQL Script

        public string GetReportSQL(ReportSQLCommand.Report queryId)
        {
            string query = string.Empty;
            switch (queryId)
            {
                #region Monthly Abstract
                case ReportSQLCommand.Report.AccountYear:
                    {
                        query = "SELECT ACC_YEAR_ID, YEAR_FROM, YEAR_TO FROM ACCOUNTING_YEAR " +
                                "WHERE ?DATE_FROM >= YEAR_FROM AND ?DATE_FROM <= YEAR_TO;";
                        break;
                    }
                case ReportSQLCommand.Report.MonthlyAbstract:
                    {
                        query = "SELECT MLG.PARENT_GROUP_ID, MLG.GROUP_ID, ML.LEDGER_ID, MLG.GROUP_CODE, " +
                                "ML.LEDGER_CODE, MLG.SORT_ORDER, PG.SORT_ORDER AS PARENT_SORT_ORDER, " +
                                "CASE " +
                                "WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN " +
                                "  MLG.LEDGER_GROUP " +
                                "ELSE " +
                                " PG.LEDGER_GROUP END AS PARENT_GROUP, " +
                                "IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,\n" +
                                "CASE\n" +
                                "WHEN MLG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                                " CONCAT(MLG.LEDGER_GROUP)\n" +
                                "ELSE\n" +
                                " CONCAT('   ',MLG.LEDGER_GROUP)\n" +
                                "END,MLG.LEDGER_GROUP) AS LEDGER_GROUP,\n" +
                                "IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,\n" +
                                "CASE\n" +
                                "WHEN MLG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                                " CONCAT('   ', ML.LEDGER_NAME)\n" +
                                "ELSE\n" +
                                " CONCAT('      ', ML.LEDGER_NAME)\n" +
                                " END,ML.LEDGER_NAME) AS LEDGER_NAME,\n" +
                                "TRANS.AMOUNT_PERIOD, TRANS.AMOUNT_PROGRESSIVE\n" +
                                " FROM (SELECT VT.LEDGER_ID,\n" +
                                "SUM(IF(VMT.VOUCHER_DATE >= ?DATE_FROM, IFNULL(VT.AMOUNT, 0), 0)) AS AMOUNT_PERIOD,\n" +
                                "SUM(IFNULL(VT.AMOUNT, 0)) AS AMOUNT_PROGRESSIVE\n" +
                                "FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, PROJECT_ID, VOUCHER_TYPE, VOUCHER_SUB_TYPE, VOUCHER_DATE, STATUS\n" +
                                "        FROM VOUCHER_MASTER_TRANS WHERE STATUS = 1 AND VOUCHER_DATE BETWEEN ?DATE_PROGRESS_FROM AND ?DATE_TO {AND PROJECT_ID IN (?PROJECT_ID)}\n" +
                                "        {AND BRANCH_ID IN (?BRANCH_ID)}) AS VMT\n" +
                                "INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID\n" +
                                "           AND VT.LOCATION_ID = VMT.LOCATION_ID { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                "INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }\n" +
                                "WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_PROGRESS_FROM AND ?DATE_TO AND VMT.STATUS=1 AND \n" +
                                "( (VMT.VOUCHER_TYPE IN ('RC','PY') AND VT.TRANS_MODE =?TRANS_MODE) OR (VMT.VOUCHER_TYPE IN ('JN','CN') AND VMT.VOUCHER_SUB_TYPE = 'FD' AND VT.TRANS_MODE =?TRANS_MODE) )\n" +
                                "AND VMT.PROJECT_ID IN (?PROJECT_ID) { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                "{ AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) } GROUP BY VT.LEDGER_ID) AS TRANS\n" +
                                "INNER JOIN MASTER_LEDGER AS ML ON ML.LEDGER_ID = TRANS.LEDGER_ID\n" +
                                "INNER JOIN MASTER_LEDGER_GROUP AS MLG ON ML.GROUP_ID = MLG.GROUP_ID AND MLG.GROUP_ID NOT IN (?GROUP_ID)\n" +
                                "INNER JOIN MASTER_LEDGER_GROUP PG ON MLG.PARENT_GROUP_ID=PG.GROUP_ID";
                        //"ORDER BY MLG.SORT_ORDER";

                        //On 03/11/2020
                        //query = "SELECT MLG.PARENT_GROUP_ID, MLG.GROUP_ID, ML.LEDGER_ID, MLG.GROUP_CODE, " +
                        //        "ML.LEDGER_CODE, MLG.SORT_ORDER, PG.SORT_ORDER AS PARENT_SORT_ORDER, " +
                        //        "CASE " +
                        //        "WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN " +
                        //        "  MLG.LEDGER_GROUP " +
                        //        "ELSE " +
                        //        " PG.LEDGER_GROUP END AS PARENT_GROUP, " +
                        //        "IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,\n" +
                        //        "CASE\n" +
                        //        "WHEN MLG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                        //        " CONCAT(MLG.LEDGER_GROUP)\n" +
                        //        "ELSE\n" +
                        //        " CONCAT('   ',MLG.LEDGER_GROUP)\n" +
                        //        "END,MLG.LEDGER_GROUP) AS LEDGER_GROUP,\n" +
                        //        "IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,\n" +
                        //        "CASE\n" +
                        //        "WHEN MLG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                        //        " CONCAT('   ', ML.LEDGER_NAME)\n" +
                        //        "ELSE\n" +
                        //        " CONCAT('      ', ML.LEDGER_NAME)\n" +
                        //        " END,ML.LEDGER_NAME) AS LEDGER_NAME,\n" +
                        //        "TRANS.AMOUNT_PERIOD, TRANS.AMOUNT_PROGRESSIVE\n" +
                        //        " FROM (SELECT VT.LEDGER_ID,\n" +
                        //        "SUM(IF(VMT.VOUCHER_DATE >= ?DATE_FROM,\n" +
                        //        "IF ((?VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') OR (?VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'),\n" +
                        //        "-IFNULL(VT.AMOUNT, 0), IFNULL(VT.AMOUNT, 0)), 0)) AS AMOUNT_PERIOD,\n" +
                        //        "SUM(IF ((?VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') OR (?VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'),\n" +
                        //        "-IFNULL(VT.AMOUNT, 0), IFNULL(VT.AMOUNT, 0))) AS AMOUNT_PROGRESSIVE\n" +
                        //        "FROM VOUCHER_MASTER_TRANS AS VMT\n" +
                        //        "INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID\n" +
                        //        "           AND VT.LOCATION_ID = VMT.LOCATION_ID { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //        "INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }\n" +
                        //        "WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_PROGRESS_FROM AND ?DATE_TO AND VMT.STATUS=1 AND \n" +
                        //        "( (VMT.VOUCHER_TYPE IN ('RC','PY') AND VT.TRANS_MODE =?TRANS_MODE) OR (VMT.VOUCHER_TYPE = 'JN' AND VMT.VOUCHER_SUB_TYPE = 'FD' AND VT.TRANS_MODE =?TRANS_MODE) )\n" +
                        //        "AND VMT.PROJECT_ID IN (?PROJECT_ID) { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //        "{ AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) } GROUP BY VT.LEDGER_ID) AS TRANS\n" +
                        //        "INNER JOIN MASTER_LEDGER AS ML ON ML.LEDGER_ID = TRANS.LEDGER_ID\n" +
                        //        "INNER JOIN MASTER_LEDGER_GROUP AS MLG ON ML.GROUP_ID = MLG.GROUP_ID AND MLG.GROUP_ID NOT IN (?GROUP_ID)\n" +
                        //        "INNER JOIN MASTER_LEDGER_GROUP PG ON MLG.PARENT_GROUP_ID=PG.GROUP_ID\n" +
                        //        "ORDER BY MLG.SORT_ORDER";

                        //On 19/11/2019
                        //query = "SELECT MLG.GROUP_ID, ML.LEDGER_ID, VMT.VOUCHER_DATE, MLG.GROUP_CODE, MLG.NATURE_ID, MLG.PARENT_GROUP_ID, " +
                        //       "ML.LEDGER_CODE, MLG.SORT_ORDER, PG.SORT_ORDER AS PARENT_SORT_ORDER, " +
                        //       "CASE " +
                        //       "WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN " +
                        //       "MLG.LEDGER_GROUP " +
                        //       "ELSE " +
                        //       "PG.LEDGER_GROUP " +
                        //       "END AS PARENT_GROUP, " +
                        //       "       IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,\n" +
                        //       "       CASE\n" +
                        //       "         WHEN MLG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                        //       "          CONCAT(MLG.LEDGER_GROUP)\n" +
                        //       "         ELSE\n" +
                        //       "        CONCAT('   ',MLG.LEDGER_GROUP)\n" +
                        //       "       END,MLG.LEDGER_GROUP) AS LEDGER_GROUP,\n" +
                        //       " --      CASE\n" +
                        //       "     --    WHEN ML.GROUP_ID = MLG.MAIN_GROUP_ID THEN\n" +
                        //       "    --     CONCAT('   ',ML.LEDGER_NAME)\n" +
                        //       "    --     ELSE\n" +
                        //       "     --     CONCAT('      ',ML.LEDGER_NAME)\n" +
                        //       "    --   END AS LEDGER_NAME,\n" +
                        //       "       IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,\n" +
                        //       "          CASE\n" +
                        //       "            WHEN MLG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                        //       "             CONCAT('   ', ML.LEDGER_NAME)\n" +
                        //       "            ELSE\n" +
                        //       "             CONCAT('      ', ML.LEDGER_NAME)\n" +
                        //       "          END,\n" +
                        //       "          ML.LEDGER_NAME) AS LEDGER_NAME,\n" +
                        //       "IF(VMT.VOUCHER_DATE >= ?DATE_FROM, " +
                        //       "   IF ((?VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') " +
                        //       "   OR (?VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'), " +
                        //       "   -IFNULL(VT.AMOUNT, 0), IFNULL(VT.AMOUNT, 0)), 0) AS AMOUNT_PERIOD, " +
                        //       "IF ((?VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') " +
                        //       "OR (?VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'), " +
                        //       "-IFNULL(VT.AMOUNT, 0), IFNULL(VT.AMOUNT, 0)) AS AMOUNT_PROGRESSIVE, " +
                        //       "IFNULL(VT.TRANS_MODE, '') AS TRANS_MODE, " +
                        //       "IF(ISNULL(VT.AMOUNT) = 0, 1,0) AS HAS_TRANS " +
                        //       "FROM MASTER_PROJECT AS MP INNER JOIN PROJECT_LEDGER AS PL ON MP.PROJECT_ID = PL.PROJECT_ID " +
                        //       "INNER JOIN MASTER_LEDGER AS ML " +
                        //       "ON PL.LEDGER_ID = ML.LEDGER_ID " +
                        //       "AND PL.PROJECT_ID IN (?PROJECT_ID) " +
                        //       "INNER JOIN MASTER_LEDGER_GROUP AS MLG " +
                        //       "ON ML.GROUP_ID = MLG.GROUP_ID " +
                        //       "AND MLG.GROUP_ID NOT IN (?GROUP_ID) " +
                        //       "INNER JOIN MASTER_LEDGER_GROUP PG " +
                        //       " ON MLG.PARENT_GROUP_ID=PG.GROUP_ID " +
                        //       "LEFT JOIN VOUCHER_TRANS AS VT " +
                        //       "INNER JOIN VOUCHER_MASTER_TRANS AS VMT " +
                        //       "ON VT.VOUCHER_ID = VMT.VOUCHER_ID " +
                        //       "AND VT.LOCATION_ID=VMT.LOCATION_ID " +
                        //       "AND VMT.BRANCH_ID=VT.BRANCH_ID " +
                        //       "AND VMT.VOUCHER_DATE BETWEEN ?DATE_PROGRESS_FROM AND ?DATE_TO " +
                        //    //"AND VMT.STATUS NOT IN (0) " +
                        //       "AND VMT.VOUCHER_TYPE IN ('RC','PY') AND VMT.STATUS = 1 " + //?VOUCHER_TYPE
                        //       "AND VT.TRANS_MODE =?TRANS_MODE " +
                        //    //"AND VMT.PROJECT_ID IN (?PROJECT_ID) " +
                        //       "ON ML.LEDGER_ID = VT.LEDGER_ID " +
                        //       "AND VMT.PROJECT_ID = PL.PROJECT_ID { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }" +
                        //      " { WHERE  MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) } ORDER BY MLG.SORT_ORDER";


                        //query = "SELECT MLG.GROUP_ID, ML.LEDGER_ID, VMT.VOUCHER_DATE, MLG.GROUP_CODE, MLG.LEDGER_GROUP, " +
                        //        "ML.LEDGER_CODE, ML.LEDGER_NAME,MP.PROJECT, " +
                        //        "IF(VMT.VOUCHER_DATE >= ?DATE_FROM, " +
                        //        "   IF ((?VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') " +
                        //        "   OR (?VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'), " +
                        //        "   -IFNULL(VT.AMOUNT, 0), IFNULL(VT.AMOUNT, 0)), 0) AS AMOUNT_PERIOD, " +
                        //        "IF ((?VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') " +
                        //        "OR (?VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'), " +
                        //        "-IFNULL(VT.AMOUNT, 0), IFNULL(VT.AMOUNT, 0)) AS AMOUNT_PROGRESSIVE, " +
                        //        "IFNULL(VT.TRANS_MODE, '') AS TRANS_MODE, " +
                        //        "IF(ISNULL(VT.AMOUNT) = 0, 1,0) AS HAS_TRANS " +
                        //        "FROM PROJECT_LEDGER AS PL " +
                        //        "INNER JOIN MASTER_PROJECT MP " +
                        //        "ON MP.PROJECT_ID=PL.PROJECT_ID " +
                        //        "INNER JOIN MASTER_LEDGER AS ML " +
                        //        "ON PL.LEDGER_ID = ML.LEDGER_ID " +
                        //        "AND PL.PROJECT_ID IN (?PROJECT_ID) " +
                        //        "INNER JOIN MASTER_LEDGER_GROUP AS MLG " +
                        //        "ON ML.GROUP_ID = MLG.GROUP_ID " +
                        //        "AND MLG.GROUP_ID NOT IN (?GROUP_ID) " +
                        //        "LEFT JOIN VOUCHER_TRANS AS VT " +
                        //        "INNER JOIN VOUCHER_MASTER_TRANS AS VMT " +
                        //        "ON VT.VOUCHER_ID = VMT.VOUCHER_ID " +
                        //        "AND VT.LOCATION_ID=VMT.LOCATION_ID " +
                        //        "AND VMT.BRANCH_ID=VT.BRANCH_ID " +
                        //        "AND VMT.VOUCHER_DATE BETWEEN ?DATE_PROGRESS_FROM AND ?DATE_TO " +
                        //    //"AND VMT.STATUS NOT IN (0) " +
                        //        "AND VMT.VOUCHER_TYPE IN ('RC','PY') AND VMT.STATUS = 1 " + //?VOUCHER_TYPE
                        //        "AND VT.TRANS_MODE =?TRANS_MODE " +
                        //    //"AND VMT.PROJECT_ID IN (?PROJECT_ID) " +
                        //        "ON ML.LEDGER_ID = VT.LEDGER_ID " +
                        //        "AND VMT.PROJECT_ID = PL.PROJECT_ID { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }" +
                        //        " { WHERE  MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) } ";
                        break;
                    }


                #endregion

                #region MultiAbstract
                case ReportSQLCommand.Report.MultiAbstract:
                    {
                        query = "SELECT MONTH_YEAR, YEAR(MONTH_YEAR) AS 'YEAR', MONTH(MONTH_YEAR) AS 'MONTH', IFNULL(ML.LEDGER_ID,0) AS LEDGER_ID, " +
                       "CONCAT(LEFT(MONTHNAME(MONTH_YEAR),3), '-', YEAR(MONTH_YEAR)) AS MONTH_NAME, " +
                       "VMT.VOUCHER_DATE, IFNULL(MLG.GROUP_CODE, '') AS GROUP_CODE, IFNULL(MLG.LEDGER_GROUP, '') AS LEDGER_GROUP, " +
                       "IFNULL(ML.LEDGER_CODE,'') AS LEDGER_CODE, IFNULL(ML.LEDGER_NAME,'') AS LEDGER_NAME, " +
                       "NULLIF(IF((?VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') " +
                       "OR (?VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'), " +
                       "-IFNULL(VT.AMOUNT, 0), IFNULL(VT.AMOUNT, 0)), 0) AS AMOUNT, " +
                       "IFNULL(VT.TRANS_MODE, '') AS TRANS_MODE, " +
                       "IF(ISNULL(VT.AMOUNT) = 0, 1, " +
                       "IF((?VOUCHER_TYPE = 'RC' AND MLG.NATURE_ID IN (1,4)) " +
                       "OR (?VOUCHER_TYPE = 'PY' AND MLG.NATURE_ID IN (2,3)), 1, 0)) AS HAS_TRANS " +
                       "FROM " +
                       " ( " +
                       "  SELECT (?DATE_FROM - INTERVAL DAYOFMONTH(?DATE_FROM) -1 DAY) " +
                       "     + INTERVAL NO_OF_MONTH MONTH AS MONTH_YEAR, NO_OF_MONTH " +
                       "  FROM " +
                       "  ( " +
                       "    SELECT @rownum := @rownum + 1 AS NO_OF_MONTH FROM " +
                       "      (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4) AS T1, " +
                       "      (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4) AS T2, " +
                       "      (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4) AS T3, " +
                       "      (SELECT @rownum := -1) AS T0 " + /* for 64 months */
                       "  ) D1 " +
                       " ) D2 " +
                       "LEFT JOIN MASTER_LEDGER AS ML " +
                       "INNER JOIN MASTER_LEDGER_GROUP AS MLG " +
                       "  ON ML.GROUP_ID = MLG.GROUP_ID AND MLG.GROUP_ID NOT IN (?GROUP_ID) " +
                       "INNER JOIN VOUCHER_MASTER_TRANS AS VMT ON VMT.PROJECT_ID IN (?PROJECT_ID) " +
                       "INNER JOIN VOUCHER_TRANS AS VT ON VMT.VOUCHER_ID = VT.VOUCHER_ID " +
                       " AND VMT.LOCATION_ID=VT.LOCATION_ID " +
                        "AND VMT.BRANCH_ID = VT.BRANCH_ID " +
                        "AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
                       "AND VMT.STATUS = 1 AND ( (VMT.VOUCHER_TYPE IN ('RC','PY') AND VT.TRANS_MODE =?TRANS_MODE) OR (VMT.VOUCHER_TYPE IN ('JN','CN') AND VMT.VOUCHER_SUB_TYPE ='FD' AND VT.TRANS_MODE =?TRANS_MODE) ) " +
                       "{ AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)} " +
                       "ON ML.LEDGER_ID = VT.LEDGER_ID AND YEAR(D2.MONTH_YEAR) = YEAR(VMT.VOUCHER_DATE) " +
                       "AND MONTH(D2.MONTH_YEAR) = MONTH(VMT.VOUCHER_DATE) " +
                        "LEFT JOIN MASTER_PROJECT MP" +
                        " ON MP.PROJECT_ID = VMT.PROJECT_ID " +
                        "{ AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) } " +
                       "WHERE D2.MONTH_YEAR <= ?DATE_TO";

                        //query = "SELECT CAST(MONTH_YEAR AS CHAR) AS MONTH_YEAR,CAST(YEAR(MONTH_YEAR) AS CHAR) AS 'YEAR',CAST(MONTH(MONTH_YEAR) AS CHAR) AS 'MONTH', " +
                        //    "CAST(CONCAT(LEFT(MONTHNAME(MONTH_YEAR),3), '-', YEAR(MONTH_YEAR)) AS CHAR) AS MONTH_NAME, PL.PROJECT_ID,MP.PROJECT, " +
                        //"VMT.VOUCHER_DATE, MLG.GROUP_CODE, MLG.LEDGER_GROUP, ML.LEDGER_CODE, ML.LEDGER_NAME, " +
                        //"NULLIF(IF((?VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') " +
                        //"OR (?VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'), " +
                        //"- IFNULL(VT.AMOUNT, 0),IFNULL(VT.AMOUNT, 0)), 0) AS AMOUNT,ML.LEDGER_ID, " +
                        //"IFNULL(VT.TRANS_MODE, '') AS TRANS_MODE, " +
                        //"IF(ISNULL(VT.AMOUNT) = 0, 1, " +
                        //"IF((?VOUCHER_TYPE = 'RC' AND MLG.NATURE_ID IN (1,4)) " +
                        //"OR (?VOUCHER_TYPE = 'PY' AND MLG.NATURE_ID IN (2,3)), 1, 0)) AS HAS_TRANS " +
                        //"FROM " +
                        //" ( " +
                        //"  SELECT (?DATE_FROM - INTERVAL DAYOFMONTH(?DATE_FROM) -1 DAY) " +
                        //"     + INTERVAL NO_OF_MONTH MONTH AS MONTH_YEAR, NO_OF_MONTH " +
                        //"  FROM " +
                        //"  ( " +
                        //"    SELECT @rownum := @rownum + 1 AS NO_OF_MONTH FROM " +
                        //"      (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4) AS T1, " +
                        //"      (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4) AS T2, " +
                        //"      (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4) AS T3, " +
                        //"      (SELECT @rownum := -1) AS T0 " + /* for 64 months */
                        //"  ) D1 " +
                        //" ) D2 " +
                        //"LEFT JOIN PROJECT_LEDGER AS PL " +
                        //"  INNER JOIN MASTER_LEDGER AS ML " +
                        //"        INNER JOIN MASTER_LEDGER_GROUP AS MLG " +
                        //"        ON ML.GROUP_ID = MLG.GROUP_ID AND MLG.GROUP_ID NOT IN (?GROUP_ID) " +
                        //"  ON PL.LEDGER_ID = ML.LEDGER_ID " +
                        //"  AND PL.PROJECT_ID IN (?PROJECT_ID) " +
                        //"LEFT JOIN VOUCHER_MASTER_TRANS AS VMT " +
                        //"INNER JOIN VOUCHER_TRANS AS VT " +
                        //"ON VMT.VOUCHER_ID = VT.VOUCHER_ID " +
                        //"AND VMT.LOCATION_ID=VT.LOCATION_ID " +
                        //"AND VMT.BRANCH_ID = VT.BRANCH_ID " +
                        //"AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
                        //"AND VMT.STATUS = 1 " +
                        //"AND VMT.VOUCHER_TYPE IN ('RC','PY') " +
                        //"{ AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)} " +
                        //"AND VT.TRANS_MODE =?TRANS_MODE " +
                        //"ON PL.PROJECT_ID = VMT.PROJECT_ID " +
                        //"AND PL.LEDGER_ID = VT.LEDGER_ID " +
                        //"AND YEAR(D2.MONTH_YEAR) = YEAR(VMT.VOUCHER_DATE) " +
                        //"AND MONTH(D2.MONTH_YEAR) = MONTH(VMT.VOUCHER_DATE) " +
                        //"INNER JOIN MASTER_PROJECT MP" +
                        //" ON MP.PROJECT_ID = PL.PROJECT_ID " +
                        //"{ AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) } " +
                        //"WHERE D2.MONTH_YEAR <= ?DATE_TO";

                        break;
                    }
                #endregion

                #region DrillDownReport
                //PARTICULAR_TYPE is used to find out ledger or a group to drill down.
                case ReportSQLCommand.Report.DrillDownReport:
                    {
                        query = "SELECT CASE WHEN ?VOUCHER_TYPE='RC' THEN " +
                                    " '" + DrillDownType.GROUP_SUMMARY_RECEIPTS + "' " +
                                        " ELSE CASE WHEN ?VOUCHER_TYPE='PY' THEN " +
                                        " '" + DrillDownType.GROUP_SUMMARY_RECEIPTS + "' " +
                                        " ELSE " +
                                       " '" + DrillDownType.GROUP_SUMMARY + "' END END as PARTICULAR_TYPE,\n" +
                        "       LG.GROUP_ID AS GROUP_ID,\n" +
                        "       LG.GROUP_ID AS PARTICULARS_ID,\n" +
                        "       LG.LEDGER_GROUP AS PARTICULARS,\n" +
                        "       CASE\n" +
                        "         WHEN MT.VOUCHER_TYPE = 'RC' THEN\n" +
                        "          IFNULL(SUM(VT.AMOUNT), 0)\n" +
                        "       END AS CREDIT,\n" +
                        "       CASE\n" +
                        "         WHEN MT.VOUCHER_TYPE = 'PY' THEN\n" +
                        "          IFNULL(SUM(VT.AMOUNT), 0)\n" +
                        "       END AS DEBIT\n" +
                        "\n" +
                        "  FROM MASTER_LEDGER_GROUP LG\n" +
                        "\n" +
                        " INNER JOIN MASTER_LEDGER ML\n" +
                        "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        " INNER JOIN VOUCHER_TRANS VT\n" +
                        "    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        " INNER JOIN VOUCHER_MASTER_TRANS MT\n" +
                        "    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        " LEFT JOIN VOUCHER_CC_TRANS VCT ON VT.VOUCHER_ID=VCT.VOUCHER_ID\n" +
                        " WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "   AND MT.VOUCHER_TYPE IN (?VOUCHER_TYPE)\n" +
                        "   AND LG.GROUP_ID IN (SELECT GROUP_ID FROM MASTER_LEDGER_GROUP WHERE PARENT_GROUP_ID  IN (?GROUP_ID)) \n" +
                        "   AND MT.STATUS = 1\n" +
                        "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        "   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        "  { AND VCT.COST_CENTER_ID =?COST_CENTER_ID}\n" +
                        " GROUP BY LG.GROUP_ID, MT.VOUCHER_TYPE\n" +
                        "UNION\n" +
                        "SELECT CASE WHEN ?VOUCHER_TYPE='RC' THEN " +
                                      " '" + DrillDownType.LEDGER_SUMMARY_RECEIPTS + " ' " +
                                        " ELSE CASE WHEN ?VOUCHER_TYPE='PY' THEN " +
                                     " '" + DrillDownType.LEDGER_SUMMARY_PAYMENTS + " ' " +
                                        " ELSE " +
                                      " '" + DrillDownType.LEDGER_SUMMARY + "'  END END as PARTICULAR_TYPE,\n" +
                        "       LG.GROUP_ID AS GROUP_ID,\n" +
                        "       ML.LEDGER_ID AS LEDGER_ID,\n" +
                        "       ML.LEDGER_NAME AS PARTICULARS,\n" +
                        "       CASE\n" +
                        "         WHEN MT.VOUCHER_TYPE = 'RC' THEN\n" +
                        "          IFNULL(SUM(VT.AMOUNT), 0)\n" +
                        "       END AS CREDIT,\n" +
                        "       CASE\n" +
                        "         WHEN MT.VOUCHER_TYPE = 'PY' THEN\n" +
                        "          IFNULL(SUM(VT.AMOUNT), 0)\n" +
                        "       END AS DEBIT\n" +
                        "\n" +
                        "  FROM MASTER_LEDGER_GROUP LG\n" +
                        "\n" +
                        " INNER JOIN MASTER_LEDGER ML\n" +
                        "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        " INNER JOIN VOUCHER_TRANS VT\n" +
                        "    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        " INNER JOIN VOUCHER_MASTER_TRANS MT\n" +
                        "    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        " LEFT JOIN VOUCHER_CC_TRANS VCT ON VT.VOUCHER_ID=VCT.VOUCHER_ID\n" +
                        " WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "   AND MT.VOUCHER_TYPE IN (?VOUCHER_TYPE)\n" +
                        "   AND LG.GROUP_ID = (SELECT GROUP_ID\n" +
                        "                        FROM MASTER_LEDGER_GROUP\n" +
                        "                       WHERE GROUP_ID IN (?GROUP_ID)\n" +
                        "                      UNION\n" +
                        "                      SELECT ?GROUP_ID) \n" +
                        "   AND MT.STATUS = 1\n" +
                        "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        "   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                         "  { AND VCT.COST_CENTER_ID =?COST_CENTER_ID}\n" +
                        " GROUP BY VT.LEDGER_ID, MT.VOUCHER_TYPE";

                        break;
                    }
                #endregion

                #region Ledger
                case ReportSQLCommand.Report.Ledger:
                    {
                        #region Old Query

                        //query = "SELECT '' AS VOUCHER_ID,BRANCH_ID,\n" +
                        //        "       LG.SORT_ORDER,\n" +
                        //        "       ML.LEDGER_ID AS LEDGER_ID,\n" +
                        //        "       '' AS VOUCHER_SUB_TYPE,\n" +
                        //        "       'LEDGER_OPENING_BALANCE' as PARTICULAR_TYPE,\n" +
                        //        "       '' as DATE,\n" +
                        //        "       '' AS VOUCHER_NO,\n" +
                        //        "       LG.LEDGER_GROUP AS 'GROUP',\n" +
                        //        "       ML.LEDGER_CODE,\n" +
                        //        "       IF(ML.LEDGER_CODE IS NULL OR ML.LEDGER_CODE = '',\n" +
                        //        "          ML.LEDGER_NAME,\n" +
                        //        "          CONCAT(ML.LEDGER_CODE, ' - ', ML.LEDGER_NAME)) AS LEDGER_NAME,\n" +
                        //        "       'Opening Balance' AS 'PARTICULARS',\n" +
                        //        "       SUM(CASE\n" +
                        //        "             WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        //        "              LB2.AMOUNT\n" +
                        //        "             ELSE\n" +
                        //        "              0\n" +
                        //        "           END) AS CREDIT,\n" +
                        //        "       SUM(CASE\n" +
                        //        "             WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //        "              LB2.AMOUNT\n" +
                        //        "             ELSE\n" +
                        //        "              0\n" +
                        //        "           END) AS DEBIT,\n" +
                        //        "       '' AS NARRATION,\n" +
                        //        "       ' ' AS VOUCHER_TYPE\n" +
                        //        "  FROM MASTER_LEDGER AS ML\n" +
                        //        " INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        //        "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        " INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                        //        "                    LB.BRANCH_ID,\n" +
                        //        "                    LB.PROJECT_ID,\n" +
                        //        "                    LB.LEDGER_ID,\n" +
                        //        "                    LB.AMOUNT,\n" +
                        //        "                    LB.TRANS_MODE\n" +
                        //        "               FROM LEDGER_BALANCE AS LB\n" +
                        //        "               LEFT JOIN (SELECT LBA.BRANCH_ID,\n" +
                        //        "                                LBA.PROJECT_ID,\n" +
                        //        "                                LBA.LEDGER_ID,\n" +
                        //        "                                MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //        "                           FROM LEDGER_BALANCE LBA\n" +
                        //        "                          WHERE 1 = 1\n" +
                        //        "                            AND LBA.BALANCE_DATE < ?DATE_FROM\n" +
                        //        "                          GROUP BY LBA.BRANCH_ID,\n" +
                        //        "                                   LBA.PROJECT_ID,\n" +
                        //        "                                   LBA.LEDGER_ID) AS LB1\n" +
                        //        "                 ON LB.BRANCH_ID = LB1.BRANCH_ID\n" +
                        //        "                AND LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        //        "                AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //        "              INNER JOIN MASTER_PROJECT MP\n" +
                        //        "                 ON LB.PROJECT_ID = MP.PROJECT_ID\n" +
                        //        "              INNER JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                 ON MP.CUSTOMERID = MIP.CUSTOMERID\n" +
                        //        "              WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "              {  AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "              {  AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "                AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                        //        "    ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        //        " WHERE 1 = 1\n" +
                        //        "   AND ML.LEDGER_ID IN (?LEDGER_ID)\n" +
                        //        "   AND LB2.AMOUNT > 0\n" +
                        //        " GROUP BY LG.GROUP_ID,\n" +
                        //        "          LG.GROUP_CODE,\n" +
                        //        "          LG.LEDGER_GROUP,\n" +
                        //        "          ML.LEDGER_ID,\n" +
                        //        "          ML.LEDGER_CODE,\n" +
                        //        "          ML.LEDGER_NAME\n" +
                        //        "UNION ALL\n" +
                        //        "SELECT TT.VOUCHER_ID,TT.BRANCH_ID,\n" +
                        //        "       TT.SORT_ORDER,\n" +
                        //        "       TT.LEDGER_ID,\n" +
                        //        "       TT.VOUCHER_SUB_TYPE,\n" +
                        //        "       TT.PARTICULAR_TYPE,\n" +
                        //        "       DATE_FORMAT(TT.DATE, '%d-%m-%Y') AS DATE,\n" +
                        //        "       TT.VOUCHER_NO,\n" +
                        //        "       TT.GROUP as 'Group',\n" +
                        //        "       TT.LEDGER_CODE,\n" +
                        //        "       --  TT.LEDGER_NAME,\n" +
                        //        "       IF(TT.LEDGER_CODE IS NULL OR TT.LEDGER_CODE = '',\n" +
                        //        "          TT.LEDGER_NAME,\n" +
                        //        "          CONCAT(TT.LEDGER_CODE, ' - ', TT.LEDGER_NAME)) AS LEDGER_NAME,\n" +
                        //        "       TT.PARTICULARS,\n" +
                        //        "       TT.CREDIT,\n" +
                        //        "       TT.DEBIT,\n" +
                        //        "       TT.NARRATION,\n" +
                        //        "       CASE\n" +
                        //        "         WHEN TT.VOUCHER_TYPE = 'RC' THEN\n" +
                        //        "          'Receipt'\n" +
                        //        "         WHEN TT.VOUCHER_TYPE = 'PY' THEN\n" +
                        //        "          'Payment'\n" +
                        //        "         WHEN TT.VOUCHER_TYPE = 'CN' THEN\n" +
                        //        "          'Contra'\n" +
                        //        "         WHEN TT.VOUCHER_TYPE = 'JN' THEN\n" +
                        //        "          'Journal'\n" +
                        //        "       END AS VOUCHER_TYPE\n" +
                        //        "  FROM (SELECT T.VOUCHER_ID,T.BRANCH_ID,\n" +
                        //        "               T.SORT_ORDER,\n" +
                        //        "               T.LEDGER_ID,\n" +
                        //        "               T.VOUCHER_SUB_TYPE,\n" +
                        //        "               T.PARTICULAR_TYPE,\n" +
                        //        "               T.VOUCHER_DATE as DATE,\n" +
                        //        "               T.VOUCHER_NO,\n" +
                        //        "               T.LEDGER_GROUP AS 'GROUP',\n" +
                        //        "               T.LEDGER_CODE,\n" +
                        //        "               T.LEDGER_NAME,\n" +
                        //        "               T.PARTICULRARS as PARTICULARS,\n" +
                        //        "               IFNULL(SUM(T.CREDIT), 0) AS CREDIT,\n" +
                        //        "               IFNULL(SUM(T.DEBIT), 0) AS DEBIT,\n" +
                        //        "               T.NARRATION,\n" +
                        //        "               T.VOUCHER_TYPE\n" +
                        //        "          FROM (SELECT VT.VOUCHER_ID,VT.BRANCH_ID,\n" +
                        //        "                       LG.SORT_ORDER,\n" +
                        //        "                       VT.LEDGER_ID,\n" +
                        //        "                       MT.VOUCHER_SUB_TYPE,\n" +
                        //        "                       'LEDGER_CASHBANK_VOUCHER' as PARTICULAR_TYPE,\n" +
                        //        "                       MT.VOUCHER_DATE,\n" +
                        //        "                       MT.VOUCHER_NO,\n" +
                        //        "                       LG.LEDGER_GROUP,\n" +
                        //        "                       ML.LEDGER_CODE,\n" +
                        //        "                       ML.LEDGER_NAME,\n" +
                        //        "                       TA.TRANS_MODE AS 'PARTICULRARS',\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                          IFNULL(SUM(AMOUNT), 0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          0.00\n" +
                        //        "                       END AS CREDIT,\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                          IFNULL(SUM(AMOUNT), 0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          0.00\n" +
                        //        "                       END AS DEBIT,\n" +
                        //        "                       MT.NARRATION,\n" +
                        //        "                       MT.VOUCHER_TYPE\n" +
                        //        "\n" +
                        //        "                  FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "\n" +
                        //        "                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                -- INNER JOIN MASTER_PROJECT MP ON MT.PROJECT_ID=MP.PROJECT_ID\n" +
                        //        "                -- INNER JOIN MASTER_INSTI_PERFERENCE MIP ON MP.CUSTOMERID=MIP.CUSTOMERID\n" +
                        //        "                  JOIN (SELECT T.VOUCHER_ID,T.BRANCH_ID,\n" +
                        //        "                              T.LEDGER_ID,\n" +
                        //        "                              T.VOUCHER_SUB_TYPE,\n" +
                        //        "                              T.TRANS_MODE\n" +
                        //        "\n" +
                        //        "                         FROM (SELECT VT.VOUCHER_ID,VT.BRANCH_ID,\n" +
                        //        "                                      VT.LEDGER_ID,\n" +
                        //        "                                      MT.VOUCHER_SUB_TYPE,\n" +
                        //        "                                      CASE\n" +
                        //        "                                        WHEN LG.GROUP_ID = 12 AND\n" +
                        //        "                                             VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                                         'TO BANK'\n" +
                        //        "                                        ELSE\n" +
                        //        "                                         CASE\n" +
                        //        "                                           WHEN LG.GROUP_ID = 12 AND\n" +
                        //        "                                                VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                                            'BY BANK'\n" +
                        //        "                                           ELSE\n" +
                        //        "                                            CASE\n" +
                        //        "                                              WHEN LG.GROUP_ID = 13 AND\n" +
                        //        "                                                   VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                                               'TO CASH'\n" +
                        //        "                                              ELSE\n" +
                        //        "                                               CASE\n" +
                        //        "                                                 WHEN LG.GROUP_ID = 13 AND\n" +
                        //        "                                                      VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                                                  'BY CASH'\n" +
                        //        "                                               END\n" +
                        //        "                                            END\n" +
                        //        "                                         END\n" +
                        //        "                                      END AS 'TRANS_MODE'\n" +
                        //        "\n" +
                        //        "                                 FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "\n" +
                        //        "                                 LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                                   ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                                 LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                                   ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                                 LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                                   ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                                  AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                                INNER JOIN MASTER_PROJECT MP\n" +
                        //        "                                   ON MT.PROJECT_ID = MP.PROJECT_ID\n" +
                        //        "                                INNER JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                                   ON MP.CUSTOMERID = MIP.CUSTOMERID\n" +
                        //        "                                 LEFT JOIN VOUCHER_CC_TRANS VCT\n" +
                        //        "                                   ON VT.VOUCHER_ID = VCT.VOUCHER_ID\n" +
                        //        "                                WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "                                  AND MT.VOUCHER_DATE BETWEEN\n" +
                        //        "                                      ?DATE_FROM AND ?DATE_TO\n" +
                        //        "\n" +
                        //        "                                  AND MT.STATUS = 1\n" +
                        //        "                                  AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                               {   AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "                               {   AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "\n" +
                        //        "                                  AND LG.GROUP_ID IN (12, 13)\n" +
                        //        "                                ORDER BY VT.SEQUENCE_NO ASC) AS T\n" +
                        //        "                        GROUP BY T.VOUCHER_ID) AS TA\n" +
                        //        "                    ON MT.VOUCHER_ID = TA.VOUCHER_ID -- AND VT.LEDGER_ID=TA.LEDGER_ID\n" +
                        //        "                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                {   AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "                   AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                        //        "                   AND MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "                   AND MT.STATUS = 1\n" +
                        //        "                   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "                   AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "\n" +
                        //        "                 GROUP BY MT.VOUCHER_DATE,\n" +
                        //        "                          VT.VOUCHER_ID,\n" +
                        //        "                          ML.LEDGER_ID,\n" +
                        //        "                          TA.TRANS_MODE\n" +
                        //        "                UNION\n" +
                        //        "\n" +
                        //        "                SELECT VT.VOUCHER_ID,VT.BRANCH_ID,\n" +
                        //        "                       LG.SORT_ORDER,\n" +
                        //        "                       VT.LEDGER_ID,\n" +
                        //        "                       MT.VOUCHER_SUB_TYPE,\n" +
                        //        "                       'LEDGER_CASHBANK_VOUCHER' as PARTICULAR_TYPE,\n" +
                        //        "                       DATE(MT.VOUCHER_DATE) AS VOUCHER_DATE,\n" +
                        //        "                       MT.VOUCHER_NO,\n" +
                        //        "                       LG.LEDGER_GROUP,\n" +
                        //        "                       ML.LEDGER_CODE,\n" +
                        //        "                       ML.LEDGER_NAME,\n" +
                        //        "                       TA.TRANS_MODE AS 'PARTICULRARS',\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                          IFNULL(AMOUNT, 0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          0.00\n" +
                        //        "                       END AS CREDIT,\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                          IFNULL(AMOUNT, 0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          0.00\n" +
                        //        "                       END AS DEBIT,\n" +
                        //        "                       MT.NARRATION,\n" +
                        //        "                       MT.VOUCHER_TYPE\n" +
                        //        "\n" +
                        //        "                  FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "\n" +
                        //        "                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                -- INNER JOIN MASTER_PROJECT MP ON MT.PROJECT_ID=MP.PROJECT_ID\n" +
                        //        "                -- INNER JOIN MASTER_INSTI_PERFERENCE MIP ON MP.CUSTOMERID=MIP.CUSTOMERID\n" +
                        //        "                  JOIN (SELECT T.VOUCHER_ID,T.BRANCH_ID,\n" +
                        //        "                               T.LEDGER_ID,\n" +
                        //        "                               T.VOUCHER_SUB_TYPE,\n" +
                        //        "                               T.TRANS_MODE\n" +
                        //        "\n" +
                        //        "                          FROM (SELECT VT.VOUCHER_ID,VT.BRANCH_ID,\n" +
                        //        "                                       VT.LEDGER_ID,\n" +
                        //        "                                       MT.VOUCHER_SUB_TYPE,\n" +
                        //        "                                       CASE\n" +
                        //        "                                         WHEN LG.GROUP_ID = 12 AND\n" +
                        //        "                                              VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                                          'BY BANK'\n" +
                        //        "                                         ELSE\n" +
                        //        "                                          CASE\n" +
                        //        "                                            WHEN LG.GROUP_ID = 12 AND\n" +
                        //        "                                                 VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                                             'TO BANK'\n" +
                        //        "                                            ELSE\n" +
                        //        "                                             CASE\n" +
                        //        "                                               WHEN LG.GROUP_ID = 13 AND\n" +
                        //        "                                                    VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                                                'BY CASH'\n" +
                        //        "                                               ELSE\n" +
                        //        "                                                CASE\n" +
                        //        "                                                  WHEN LG.GROUP_ID = 13 AND\n" +
                        //        "                                                       VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                                                   'TO CASH'\n" +
                        //        "                                                  ELSE\n" +
                        //        "                                                   CASE\n" +
                        //        "                                                     WHEN LG.GROUP_ID = 14 AND\n" +
                        //        "                                                          VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                                                      'BY BANK'\n" +
                        //        "                                                     ELSE\n" +
                        //        "                                                      CASE\n" +
                        //        "                                                        WHEN LG.GROUP_ID = 14 AND\n" +
                        //        "                                                             VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                                                         'TO BANK'\n" +
                        //        "                                                      END\n" +
                        //        "                                                   END\n" +
                        //        "                                                END\n" +
                        //        "                                             END\n" +
                        //        "                                          END\n" +
                        //        "                                       END AS 'TRANS_MODE'\n" +
                        //        "\n" +
                        //        "                                  FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "\n" +
                        //        "                                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                                 INNER JOIN MASTER_PROJECT MP\n" +
                        //        "                                    ON MT.PROJECT_ID = MP.PROJECT_ID\n" +
                        //        "                                 INNER JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                                    ON MP.CUSTOMERID = MIP.CUSTOMERID\n" +
                        //        "                                  LEFT JOIN VOUCHER_CC_TRANS VCT\n" +
                        //        "                                    ON VT.VOUCHER_ID = VCT.VOUCHER_ID\n" +
                        //        "                                 WHERE MT.VOUCHER_TYPE IN ('CN')\n" +
                        //        "                                   AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "\n" +
                        //        "                                   AND MT.STATUS = 1\n" +
                        //        "                                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                                {   AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "                                {   AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "                                   AND LG.GROUP_ID IN (12, 13, 14)\n" +
                        //        "                                 ORDER BY VT.SEQUENCE_NO ASC) AS T\n" +
                        //        "                         GROUP BY T.VOUCHER_ID, T.LEDGER_ID) AS TA\n" +
                        //        "                    ON MT.VOUCHER_ID = TA.VOUCHER_ID\n" +
                        //        "                   AND VT.LEDGER_ID = TA.LEDGER_ID\n" +
                        //        "                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                {   AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "                   AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                        //        "                   AND MT.VOUCHER_TYPE IN ('CN')\n" +
                        //        "                   AND MT.STATUS = 1\n" +
                        //        "                   AND LG.GROUP_ID IN (12, 13, 14)\n" +
                        //        "                   AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "\n" +
                        //        "                 GROUP BY MT.VOUCHER_DATE,\n" +
                        //        "                          VT.VOUCHER_ID,\n" +
                        //        "                          ML.LEDGER_ID,\n" +
                        //        "                          TA.TRANS_MODE\n" +
                        //        "                UNION\n" +
                        //        "                SELECT VT.VOUCHER_ID,VT.BRANCH_ID,\n" +
                        //        "                       LG.SORT_ORDER,\n" +
                        //        "                       VT.LEDGER_ID,\n" +
                        //        "                       MT.VOUCHER_SUB_TYPE,\n" +
                        //        "                       'LEDGER_JOURNAL_VOUCHER' as PARTICULAR_TYPE,\n" +
                        //        "                       DATE(MT.VOUCHER_DATE) AS VOUCHER_DATE,\n" +
                        //        "                       MT.VOUCHER_NO,\n" +
                        //        "                       T.LEDGER_GROUP,\n" +
                        //        "                       T.LEDGER_CODE,\n" +
                        //        "                       T.LEDGER_NAME,\n" +
                        //        "                       ML.LEDGER_NAME AS 'PARTICULARS',\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN T.TRANS_MODE = 'CR' THEN\n" +
                        //        "                          IFNULL(T.AMOUNT, 0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          0.00\n" +
                        //        "                       END AS CREDIT,\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN T.TRANS_MODE = 'DR' THEN\n" +
                        //        "                          IFNULL(T.AMOUNT, 0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          0.00\n" +
                        //        "                       END AS DEBIT,\n" +
                        //        "                       MT.NARRATION,\n" +
                        //        "                       MT.VOUCHER_TYPE\n" +
                        //        "\n" +
                        //        "                  FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "\n" +
                        //        "                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                 INNER JOIN (SELECT VT.VOUCHER_ID,VT.BRANCH_ID,\n" +
                        //        "                                    VT.TRANS_MODE,\n" +
                        //        "                                    ML.LEDGER_NAME,\n" +
                        //        "                                    ML.LEDGER_CODE,\n" +
                        //        "                                    ML.LEDGER_ID,\n" +
                        //        "                                    VT.AMOUNT,\n" +
                        //        "                                    VT.SEQUENCE_NO,\n" +
                        //        "                                    LG.LEDGER_GROUP\n" +
                        //        "                               FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "                               LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                               LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                                 ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                               LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                                 ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                                 AND VT.BRANCH_ID=MT.BRANCH_ID\n" +
                        //        "                              WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                                AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                        //        "                                AND MT.VOUCHER_TYPE IN ('JN')\n" +
                        //        "                                AND MT.STATUS = 1\n" +
                        //        "                                AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                              GROUP BY MT.VOUCHER_DATE,\n" +
                        //        "                                       VT.VOUCHER_ID,\n" +
                        //        "                                       ML.LEDGER_ID,\n" +
                        //        "                                       VT.SEQUENCE_NO) AS T\n" +
                        //        "                    ON T.VOUCHER_ID = VT.VOUCHER_ID\n" +
                        //        "                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                   AND VT.TRANS_MODE <> T.TRANS_MODE\n" +
                        //        "\n" +
                        //        "                   AND MT.VOUCHER_TYPE IN ('JN')\n" +
                        //        "                   AND MT.STATUS = 1\n" +
                        //        "                   AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "\n" +
                        //        "                   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "                 GROUP BY MT.VOUCHER_DATE,\n" +
                        //        "                          VT.VOUCHER_ID,\n" +
                        //        "                          ML.LEDGER_ID,\n" +
                        //        "                          VT.SEQUENCE_NO) AS T\n" +
                        //        "         GROUP BY T.VOUCHER_ID, T.LEDGER_ID, PARTICULARS\n" +
                        //        "\n" +
                        //        "        UNION ALL\n" +
                        //        "\n" +
                        //        "        SELECT VT.VOUCHER_ID,VT.BRANCH_ID,\n" +
                        //        "               LG.SORT_ORDER,\n" +
                        //        "               VT.LEDGER_ID,\n" +
                        //        "               MT.VOUCHER_SUB_TYPE,\n" +
                        //        "               'LEDGER_CASHBANK_VOUCHER' as PARTICULAR_TYPE,\n" +
                        //        "               DATE(MT.VOUCHER_DATE) as DATE,\n" +
                        //        "               MT.VOUCHER_NO,\n" +
                        //        "               LG.LEDGER_GROUP,\n" +
                        //        "               ML.LEDGER_CODE,\n" +
                        //        "               ML.LEDGER_NAME,\n" +
                        //        "               TR.LEDGER_NAME AS 'PARTICULARS',\n" +
                        //        "               TR.CREDIT,\n" +
                        //        "               TR.DEBIT,\n" +
                        //        "               MT.NARRATION,\n" +
                        //        "               MT.VOUCHER_TYPE\n" +
                        //        "\n" +
                        //        "          FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "\n" +
                        //        "          LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "          LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "          JOIN (SELECT VT.VOUCHER_ID,VT.BRANCH_ID,\n" +
                        //        "                       VT.LEDGER_ID,\n" +
                        //        "                       MT.VOUCHER_SUB_TYPE,\n" +
                        //        "                       ML.LEDGER_NAME,\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                          IFNULL(VT.AMOUNT, 0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          0.00\n" +
                        //        "                       END AS CREDIT,\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                          IFNULL(VT.AMOUNT, 0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          0.00\n" +
                        //        "                       END AS DEBIT\n" +
                        //        "\n" +
                        //        "                  FROM master_ledger_GROUP LG\n" +
                        //        "\n" +
                        //        "                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                 INNER JOIN MASTER_PROJECT MP\n" +
                        //        "                    ON MT.PROJECT_ID = MP.PROJECT_ID\n" +
                        //        "                 INNER JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                    ON MP.CUSTOMERID = MIP.CUSTOMERID\n" +
                        //        "                  LEFT JOIN VOUCHER_CC_TRANS VCT\n" +
                        //        "                    ON VT.VOUCHER_ID = VCT.VOUCHER_ID\n" +
                        //        "                 WHERE MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "\n" +
                        //        "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                {   AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "                {   AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "                   and LG.GROUP_ID in (13, 12, 14)\n" +
                        //        "                   and MT.VOUCHER_TYPE NOT in ('CN')\n" +
                        //        "                   AND MT.STATUS = 1\n" +
                        //        "                 GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID) AS TR\n" +
                        //        "            ON TR.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "           and tr.ledger_id = ml.ledger_id\n" +
                        //        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "         {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "           AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                        //        "           AND MT.STATUS = 1\n" +
                        //        "           AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "\n" +
                        //        "           AND LG.GROUP_ID IN (12, 13, 14)\n" +
                        //        "         GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, ML.LEDGER_ID) AS TT\n" +
                        //        " GROUP BY TT.DATE, TT.VOUCHER_ID, TT.LEDGER_ID\n" +
                        //        " ORDER BY DATE, LEDGER_CODE";

                        #endregion

                        query = "SELECT LG.NATURE_ID,\n" +
                                "       '' AS VOUCHER_ID, LB2.PROJECT_ID,\n" +
                                "       LG.SORT_ORDER,\n" +
                                "       ML.LEDGER_ID AS LEDGER_ID,\n" +
                                "       '' AS VOUCHER_SUB_TYPE,\n" +
                                "       'LEDGER_OPENING_BALANCE' as PARTICULAR_TYPE,\n" +
                                "       '' as DATE,\n" +
                                "       '' AS VOUCHER_NO,\n" +
                                "       LG.LEDGER_GROUP AS 'GROUP',\n" +
                                "       ML.LEDGER_CODE,\n" +
                                "       IF(ML.LEDGER_CODE IS NULL OR ML.LEDGER_CODE = '',\n" +
                                "          ML.LEDGER_NAME,\n" +
                                "          CONCAT(ML.LEDGER_CODE, ' - ', ML.LEDGER_NAME)) AS LEDGER_NAME,\n" +
                                "       'Opening Balance' AS 'PARTICULARS',\n" +
                                "       SUM(CASE\n" +
                                "             WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                                "              LB2.AMOUNT\n" +
                                "             ELSE\n" +
                                "              0\n" +
                                "           END) AS CREDIT,\n" +
                                "       SUM(CASE\n" +
                                "             WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                                "              LB2.AMOUNT\n" +
                                "             ELSE\n" +
                                "              0\n" +
                                "           END) AS DEBIT,\n" +
                                "       '' AS NARRATION,\n" +
                                "       ' ' AS VOUCHER_TYPE,\n" +
                                "       0 AS ACI_TYPE\n" +
                                "  FROM MASTER_LEDGER AS ML\n" +
                                " INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                                "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                " INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                                "                    LB.BRANCH_ID,\n" +
                                "                    LB.PROJECT_ID,\n" +
                                "                    LB.LEDGER_ID,\n" +
                                "                    LB.AMOUNT,\n" +
                                "                    LB.TRANS_MODE\n" +
                                "               FROM LEDGER_BALANCE AS LB\n" +
                                "               LEFT JOIN (SELECT LBA.BRANCH_ID,\n" +
                                "                                LBA.PROJECT_ID,\n" +
                                "                                LBA.LEDGER_ID,\n" +
                                "                                MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                                "                           FROM LEDGER_BALANCE LBA\n" +
                                "                          WHERE 1 = 1\n" +
                                "                            AND LBA.BALANCE_DATE < ?DATE_FROM\n" +
                                "                          GROUP BY LBA.BRANCH_ID,\n" +
                                "                                   LBA.PROJECT_ID,\n" +
                                "                                   LBA.LEDGER_ID) AS LB1\n" +
                                "                 ON LB.BRANCH_ID = LB1.BRANCH_ID\n" +
                                "                AND LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                                "                AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                                "              WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "               { AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                                "    ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                                "    LEFT JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = LB2.PROJECT_ID\n" +
                                " WHERE 1 = 1\n" +
                                "   AND ML.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "   AND LB2.AMOUNT > 0\n" +
                                " GROUP BY LG.GROUP_ID,\n" +
                                "          LG.GROUP_CODE,\n" +
                                "          LG.LEDGER_GROUP,\n" +
                                "          ML.LEDGER_ID,\n" +
                                "          ML.LEDGER_CODE,\n" +
                                "          ML.LEDGER_NAME\n" +
                                "UNION ALL\n" +
                                "SELECT TT.NATURE_ID,\n" +
                                "       TT.VOUCHER_ID, TT.PROJECT_ID,\n" +
                                "       TT.SORT_ORDER,\n" +
                                "       TT.LEDGER_ID,\n" +
                                "       TT.VOUCHER_SUB_TYPE,\n" +
                                "       TT.PARTICULAR_TYPE,\n" +
                                "       DATE_FORMAT(TT.DATE, '%d-%m-%Y') AS DATE,\n" +
                                "       TT.VOUCHER_NO,\n" +
                                "       TT.GROUP as 'Group',\n" +
                                "       TT.LEDGER_CODE,\n" +
                                "       --  TT.LEDGER_NAME,\n" +
                                "       IF(TT.LEDGER_CODE IS NULL OR TT.LEDGER_CODE = '',\n" +
                                "          TT.LEDGER_NAME,\n" +
                                "          CONCAT(TT.LEDGER_CODE, ' - ', TT.LEDGER_NAME)) AS LEDGER_NAME,\n" +
                                "       TT.PARTICULARS,\n" +
                                "       TT.CREDIT,\n" +
                                "       TT.DEBIT,\n" +
                                "       CONCAT(TT.NARRATION,  IF( ISNULL(TT.NARRATION) OR TT.NARRATION = '', '', '\n\r') ,  'Project : ', IFNULL(MP.PROJECT, '')) AS NARRATION,\n" +
                                "       CASE\n" +
                                "         WHEN TT.VOUCHER_TYPE = 'RC' THEN\n" +
                                "          'Receipt'\n" +
                                "         WHEN TT.VOUCHER_TYPE = 'PY' THEN\n" +
                                "          'Payment'\n" +
                                "         WHEN TT.VOUCHER_TYPE = 'CN' THEN\n" +
                                "          'Contra'\n" +
                                "         WHEN TT.VOUCHER_TYPE = 'JN' THEN\n" +
                                "          'Journal'\n" +
                                "       END AS VOUCHER_TYPE,\n" +
                                "       ACI_TYPE\n" +
                                "  FROM (SELECT T.NATURE_ID,\n" +
                                "               T.VOUCHER_ID, T.PROJECT_ID,\n" +
                                "               T.SORT_ORDER,\n" +
                                "               T.LEDGER_ID,\n" +
                                "               T.VOUCHER_SUB_TYPE,\n" +
                                "               T.PARTICULAR_TYPE,\n" +
                                "               T.VOUCHER_DATE as DATE,\n" +
                                "               T.VOUCHER_NO,\n" +
                                "               T.LEDGER_GROUP AS 'GROUP',\n" +
                                "               T.LEDGER_CODE,\n" +
                                "               T.LEDGER_NAME,\n" +
                                "               T.PARTICULRARS as PARTICULARS,\n" +
                                "               IFNULL(SUM(T.CREDIT), 0) AS CREDIT,\n" +
                                "               IFNULL(SUM(T.DEBIT), 0) AS DEBIT,\n" +
                                "               T.NARRATION,\n" +
                                "               T.VOUCHER_TYPE,\n" +
                                "               T.ACI_TYPE\n" +
                                "          FROM (SELECT LG.NATURE_ID,\n" +
                                "                       VT.VOUCHER_ID, MT.PROJECT_ID,\n" +
                                "                       LG.SORT_ORDER,\n" +
                                "                       VT.LEDGER_ID,\n" +
                                "                       MT.VOUCHER_SUB_TYPE,\n" +
                                "                       'LEDGER_CASHBANK_VOUCHER' as PARTICULAR_TYPE,\n" +
                                "                       MT.VOUCHER_DATE,\n" +
                                "                       MT.VOUCHER_NO,\n" +
                                "                       LG.LEDGER_GROUP,\n" +
                                "                       ML.LEDGER_CODE,\n" +
                                "                       ML.LEDGER_NAME,\n" +
                                "                       TA.TRANS_MODE AS 'PARTICULRARS',\n" +
                                "                       CASE\n" +
                                "                         WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                                "                          IFNULL(SUM(AMOUNT), 0)\n" +
                                "                         ELSE\n" +
                                "                          0.00\n" +
                                "                       END AS CREDIT,\n" +
                                "                       CASE\n" +
                                "                         WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                          IFNULL(SUM(AMOUNT), 0)\n" +
                                "                         ELSE\n" +
                                "                          0.00\n" +
                                "                       END AS DEBIT,\n" +
                                "                       MT.NARRATION,\n" +
                                "                       MT.VOUCHER_TYPE,\n" +
                                "                       0 AS ACI_TYPE\n" +
                                "                  FROM MASTER_LEDGER_GROUP LG\n" +
                                "                  LEFT JOIN MASTER_LEDGER ML\n" +
                                "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                  JOIN (SELECT T.NATURE_ID,\n" +
                                "                              T.VOUCHER_ID,\n" +
                                "                              T.LEDGER_ID,\n" +
                                "                              T.VOUCHER_SUB_TYPE,\n" +
                                "                              T.TRANS_MODE\n" +
                                "                         FROM (SELECT LG.NATURE_ID,\n" +
                                "                                      VT.VOUCHER_ID,\n" +
                                "                                      VT.LEDGER_ID,\n" +
                                "                                      MT.VOUCHER_SUB_TYPE,\n" +
                                "                                      CASE\n" +
                                "                                        WHEN LG.GROUP_ID = 12 AND\n" +
                                "                                             VT.TRANS_MODE = 'CR' THEN\n" +
                                "                                         'TO BANK'\n" +
                                "                                        ELSE\n" +
                                "                                         CASE\n" +
                                "                                           WHEN LG.GROUP_ID = 12 AND\n" +
                                "                                                VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                            'BY BANK'\n" +
                                "                                           ELSE\n" +
                                "                                            CASE\n" +
                                "                                              WHEN LG.GROUP_ID = 13 AND\n" +
                                "                                                   VT.TRANS_MODE = 'CR' THEN\n" +
                                "                                               'TO CASH'\n" +
                                "                                              ELSE\n" +
                                "                                               CASE\n" +
                                "                                                 WHEN LG.GROUP_ID = 13 AND\n" +
                                "                                                      VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                                  'BY CASH'\n" +
                                "                                               END\n" +
                                "                                            END\n" +
                                "                                         END\n" +
                                "                                      END AS 'TRANS_MODE'\n" +
                                "                                 FROM MASTER_LEDGER_GROUP LG\n" +
                                "                                 LEFT JOIN MASTER_LEDGER ML\n" +
                                "                                   ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                                 LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                                   ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                                 LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                                   ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                                  AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                                 LEFT JOIN VOUCHER_CC_TRANS VCT\n" +
                                "                                   ON VT.VOUCHER_ID = VCT.VOUCHER_ID\n" +
                                "                                WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                                "                                  AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                                  AND MT.STATUS = 1\n" +
                                "                                  AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                                {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                                  AND LG.GROUP_ID IN (12, 13)\n" +
                                "                                ORDER BY LG.NATURE_ID ASC) AS T\n" +
                                "                        GROUP BY T.VOUCHER_ID) AS TA\n" +
                                "                    ON MT.VOUCHER_ID = TA.VOUCHER_ID -- AND VT.LEDGER_ID=TA.LEDGER_ID\n" +
                                "                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                  {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                "                   AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "                   AND MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                                "                   AND MT.STATUS = 1\n" +
                                "                   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                                "                   AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                 GROUP BY MT.VOUCHER_DATE,\n" +
                                "                          VT.VOUCHER_ID,\n" +
                                "                          ML.LEDGER_ID,\n" +
                                "                          TA.TRANS_MODE\n" +
                                "                UNION\n" +
                                "                SELECT LG.NATURE_ID,\n" +
                                "                       VT.VOUCHER_ID, MT.PROJECT_ID, \n" +
                                "                       LG.SORT_ORDER,\n" +
                                "                       VT.LEDGER_ID,\n" +
                                "                       MT.VOUCHER_SUB_TYPE,\n" +
                                "                       'LEDGER_CASHBANK_VOUCHER' as PARTICULAR_TYPE,\n" +
                                "                       DATE(MT.VOUCHER_DATE) AS VOUCHER_DATE,\n" +
                                "                       MT.VOUCHER_NO,\n" +
                                "                       LG.LEDGER_GROUP,\n" +
                                "                       ML.LEDGER_CODE,\n" +
                                "                       ML.LEDGER_NAME,\n" +
                                "                       TA.TRANS_MODE AS 'PARTICULRARS',\n" +
                                "                       CASE\n" +
                                "                         WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                                "                          IFNULL(AMOUNT, 0)\n" +
                                "                         ELSE\n" +
                                "                          0.00\n" +
                                "                       END AS CREDIT,\n" +
                                "                       CASE\n" +
                                "                         WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                          IFNULL(AMOUNT, 0)\n" +
                                "                         ELSE\n" +
                                "                          0.00\n" +
                                "                       END AS DEBIT,\n" +
                                "                       MT.NARRATION,\n" +
                                "                       MT.VOUCHER_TYPE,\n" +
                                "                       0 AS ACI_TYPE\n" +
                                "                  FROM MASTER_LEDGER_GROUP LG\n" +
                                "                  LEFT JOIN MASTER_LEDGER ML\n" +
                                "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                  JOIN (SELECT T.NATURE_ID,\n" +
                                "                               T.VOUCHER_ID,\n" +
                                "                               T.LEDGER_ID,\n" +
                                "                               T.VOUCHER_SUB_TYPE,\n" +
                                "                               T.TRANS_MODE\n" +
                                "                          FROM (SELECT LG.NATURE_ID,\n" +
                                "                                       VT.VOUCHER_ID,\n" +
                                "                                       VT.LEDGER_ID,\n" +
                                "                                       MT.VOUCHER_SUB_TYPE,\n" +
                                "                                       CASE\n" +
                                "                                         WHEN LG.GROUP_ID = 12 AND\n" +
                                "                                              VT.TRANS_MODE = 'CR' THEN\n" +
                                "                                          'BY BANK'\n" +
                                "                                         ELSE\n" +
                                "                                          CASE\n" +
                                "                                            WHEN LG.GROUP_ID = 12 AND\n" +
                                "                                                 VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                             'TO BANK'\n" +
                                "                                            ELSE\n" +
                                "                                             CASE\n" +
                                "                                               WHEN LG.GROUP_ID = 13 AND\n" +
                                "                                                    VT.TRANS_MODE = 'CR' THEN\n" +
                                "                                                'BY CASH'\n" +
                                "                                               ELSE\n" +
                                "                                                CASE\n" +
                                "                                                  WHEN LG.GROUP_ID = 13 AND\n" +
                                "                                                       VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                                   'TO CASH'\n" +
                                "                                                  ELSE\n" +
                                "                                                   CASE\n" +
                                "                                                     WHEN LG.GROUP_ID = 14 AND\n" +
                                "                                                          VT.TRANS_MODE = 'CR' THEN\n" +
                                "                                                      'BY BANK'\n" +
                                "                                                     ELSE\n" +
                                "                                                      CASE\n" +
                                "                                                        WHEN ((LG.GROUP_ID = 14 AND VT.TRANS_MODE = 'DR') OR MT.VOUCHER_SUB_TYPE = 'FD') THEN\n" +
                                "                                                         'TO BANK'\n" +
                                "                                                      END\n" +
                                "                                                   END\n" +
                                "                                                END\n" +
                                "                                             END\n" +
                                "                                          END\n" +
                                "                                       END AS 'TRANS_MODE'\n" +
                                "                                  FROM MASTER_LEDGER_GROUP LG\n" +
                                "                                  LEFT JOIN MASTER_LEDGER ML\n" +
                                "                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                                  LEFT JOIN VOUCHER_CC_TRANS VCT\n" +
                                "                                    ON VT.VOUCHER_ID = VCT.VOUCHER_ID\n" +
                                "                                 WHERE MT.VOUCHER_TYPE IN ('CN')\n" +
                                "                                   AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                                   AND MT.STATUS = 1\n" +
                                "                                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                                 {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                "                                   AND (LG.GROUP_ID IN (12, 13, 14) OR MT.VOUCHER_SUB_TYPE = 'FD')\n" +
                                "                                 ORDER BY LG.NATURE_ID, VOUCHER_DATE ASC) AS T\n" +
                                "                         GROUP BY T.VOUCHER_ID, T.LEDGER_ID) AS TA\n" +
                                "                    ON MT.VOUCHER_ID = TA.VOUCHER_ID\n" +
                                "                   AND VT.LEDGER_ID = TA.LEDGER_ID\n" +
                                "                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                 {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                "                   AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "                   AND MT.VOUCHER_TYPE IN ('CN')\n" +
                                "                   AND MT.STATUS = 1\n" +
                                "                   AND (LG.GROUP_ID IN (12, 13, 14) OR MT.VOUCHER_SUB_TYPE = 'FD') \n" +
                                "                   AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                 GROUP BY MT.VOUCHER_DATE,\n" +
                                "                          VT.VOUCHER_ID,\n" +
                                "                          ML.LEDGER_ID,\n" +
                                "                          TA.TRANS_MODE\n" +
                                "                UNION\n" +
                                "                SELECT TS.NATURE_ID,\n" +
                                "                       ts.VOUCHER_ID, VMT.PROJECT_ID, \n" +
                                "                       ts.SORT_ORDER,\n" +
                                "                       ts.LEDGER_ID,\n" +
                                "                       ts.VOUCHER_SUB_TYPE,\n" +
                                "                       'LEDGER_JOURNAL_VOUCHER' as PARTICULAR_TYPE,\n" +
                                "                       DATE(ts.VOUCHER_DATE) AS VOUCHER_DATE,\n" +
                                "                       ts.VOUCHER_NO,\n" +
                                "                       Ts.LEDGER_GROUP,\n" +
                                "                       Ts.LEDGER_CODE,\n" +
                                "                       Ts.LEDGER_NAME,\n" +
                                "                       ML.LEDGER_NAME AS 'PARTICULARS',\n" +
                                "                       CASE\n" +
                                "                         WHEN Ts.TRANS_MODE = 'CR' THEN\n" +
                                "                          IFNULL(Ts.AMOUNT, 0)\n" +
                                "                         ELSE\n" +
                                "                          0.00\n" +
                                "                       END AS CREDIT,\n" +
                                "                       CASE\n" +
                                "                         WHEN Ts.TRANS_MODE = 'DR' THEN\n" +
                                "                          IFNULL(Ts.AMOUNT, 0)\n" +
                                "                         ELSE\n" +
                                "                          0.00\n" +
                                "                       END AS DEBIT,\n" +
                                "                       IF(VMT.NARRATION = NULL OR VMT.NARRATION = '',\n" +
                                "                          VMT.NARRATION,\n" +
                                "                          '') AS NARRATION,\n" +
                                "                       ts.VOUCHER_TYPE,\n" +
                                "                       ACI_TYPE\n" +
                                "                  FROM VOUCHER_MASTER_TRANS VMT\n" +
                                "                 INNER JOIN VOUCHER_TRANS VT\n" +
                                "                    ON VMT.VOUCHER_ID = VT.VOUCHER_ID\n" +
                                "                -- AND VMT.BRANCH_ID=VT.BRANCH_ID\n" +
                                "                 INNER JOIN MASTER_LEDGER ML\n" +
                                "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                  JOIN (SELECT LG.NATURE_ID,\n" +
                                "                               VT.VOUCHER_ID,\n" +
                                "                               LG.SORT_ORDER,\n" +
                                "                               MT.VOUCHER_SUB_TYPE,\n" +
                                "                               MT.VOUCHER_DATE,\n" +
                                "                               MT.VOUCHER_NO,\n" +
                                "                               MT.NARRATION,\n" +
                                "                               MT.VOUCHER_TYPE,\n" +
                                "                               VT.TRANS_MODE,\n" +
                                "                               ML.LEDGER_NAME,\n" +
                                "                               ML.LEDGER_CODE,\n" +
                                "                               ML.LEDGER_ID,\n" +
                                "                               SUM(VT.AMOUNT) AS AMOUNT,\n" +
                                "                               VT.SEQUENCE_NO,\n" +
                                "                               LG.LEDGER_GROUP,\n" +
                                "                               IF(MT.VOUCHER_ID = FDR.FD_INTEREST_VOUCHER_ID, 1,0) AS ACI_TYPE\n" +
                                "                          FROM MASTER_LEDGER_GROUP LG\n" +
                                "                          LEFT JOIN MASTER_LEDGER ML\n" +
                                "                            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                          LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                          LEFT JOIN FD_RENEWAL FDR\n" +
                                "                            ON MT.VOUCHER_ID = FDR.FD_INTEREST_VOUCHER_ID\n" +
                                "                         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                          { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                           AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "                           AND MT.VOUCHER_TYPE IN ('JN')\n" +
                                "                           AND MT.STATUS = 1\n" +
                                "                           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                         GROUP BY MT.VOUCHER_DATE,\n" +
                                "                                  VT.VOUCHER_ID,\n" +
                                "                                  ML.LEDGER_ID,\n" +
                                "                                  VT.SEQUENCE_NO AND\n" +
                                "                                  LG.GROUP_ID NOT IN (12, 13)) as ts\n" +
                                "                    ON VT.VOUCHER_ID = Ts.VOUCHER_ID\n" +
                                "                   AND VT.TRANS_MODE <> TS.TRANS_MODE\n" +
                                "                 GROUP BY ts.VOUCHER_DATE,\n" +
                                "                          ts.VOUCHER_ID,\n" +
                                "                          ts.LEDGER_ID,\n" +
                                "                          ts.SEQUENCE_NO) AS T\n" +
                                "         GROUP BY T.VOUCHER_ID, T.LEDGER_ID, PARTICULARS\n" +
                                "        UNION ALL\n" +
                                "        SELECT LG.NATURE_ID,\n" +
                                "               VT.VOUCHER_ID, MT.PROJECT_ID, \n" +
                                "               LG.SORT_ORDER,\n" +
                                "               VT.LEDGER_ID,\n" +
                                "               MT.VOUCHER_SUB_TYPE,\n" +
                                "               'LEDGER_CASHBANK_VOUCHER' as PARTICULAR_TYPE,\n" +
                                "               DATE(MT.VOUCHER_DATE) as DATE,\n" +
                                "               MT.VOUCHER_NO,\n" +
                                "               LG.LEDGER_GROUP,\n" +
                                "               ML.LEDGER_CODE,\n" +
                                "               ML.LEDGER_NAME,\n" +
                                "               TR.LEDGER_NAME AS 'PARTICULARS',\n" +
                                "               TR.CREDIT,\n" +
                                "               TR.DEBIT,\n" +
                                "               MT.NARRATION,\n" +
                                "               MT.VOUCHER_TYPE,\n" +
                                "               0 AS ACI_TYPE\n" +
                                "          FROM MASTER_LEDGER_GROUP LG\n" +
                                "          LEFT JOIN MASTER_LEDGER ML\n" +
                                "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "          LEFT JOIN VOUCHER_TRANS VT\n" +
                                "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "          JOIN (SELECT LG.NATURE_ID,\n" +
                                "                       VT.VOUCHER_ID,\n" +
                                "                       VT.LEDGER_ID,\n" +
                                "                       MT.VOUCHER_SUB_TYPE,\n" +
                                "                       ML.LEDGER_NAME,\n" +
                                "                       CASE\n" +
                                "                         WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                                "                          IFNULL(VT.AMOUNT, 0)\n" +
                                "                         ELSE\n" +
                                "                          0.00\n" +
                                "                       END AS CREDIT,\n" +
                                "                       CASE\n" +
                                "                         WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                          IFNULL(VT.AMOUNT, 0)\n" +
                                "                         ELSE\n" +
                                "                          0.00\n" +
                                "                       END AS DEBIT\n" +
                                "                  FROM master_ledger_GROUP LG\n" +
                                "                  LEFT JOIN MASTER_LEDGER ML\n" +
                                "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                  LEFT JOIN VOUCHER_CC_TRANS VCT\n" +
                                "                    ON VT.VOUCHER_ID = VCT.VOUCHER_ID\n" +
                                "                 WHERE MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                 {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                   and LG.GROUP_ID in (13, 12, 14)\n" +
                                "                   and MT.VOUCHER_TYPE NOT in ('CN')\n" +
                                "                   AND MT.STATUS = 1\n" +
                                "                 GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID) AS TR\n" +
                                "            ON TR.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "           and tr.ledger_id = ml.ledger_id\n" +
                                "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "         {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "           AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "           AND MT.STATUS = 1\n" +
                                "           AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "           AND LG.GROUP_ID IN (12, 13, 14)\n" +
                                "         GROUP BY MT.VOUCHER_DATE, MT.VOUCHER_ID, ML.LEDGER_ID) AS TT\n" +
                                "         LEFT JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = TT.PROJECT_ID\n" +
                                " GROUP BY TT.DATE, TT.VOUCHER_ID, TT.LEDGER_ID\n" +
                                " ORDER BY NATURE_ID";
                        break;
                    }
                #endregion

                #region ACI Balance
                case ReportSQLCommand.Report.FetchACIBalance:
                    {
                        query = "SELECT T.*\n" +
                        "  FROM (\n" +
                        "\n" +
                        "        SELECT FDA.LEDGER_ID,\n" +
                        "                IFNULL(FDR.MATURITY_DATE, FDA.MATURED_ON) AS MATURITY_DATE,\n" +
                        "                FDA.FD_ACCOUNT_NUMBER,\n" +
                        "                IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) AS INTEREST_AMOUNT,\n" +
                        "                IF(FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        "                   IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                        "                   IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        "                   IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) = 0,\n" +
                        "                   'Closed',\n" +
                        "                   'Active') AS CLOSING_STATUS\n" +
                        "          FROM FD_ACCOUNT AS FDA\n" +
                        "          LEFT JOIN (SELECT FD_ACCOUNT_ID,BRANCH_ID,\n" +
                        "                            MAX(MATURITY_DATE) AS MATURITY_DATE,\n" +
                        "                            MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                        "                            SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                        "                            SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                        "                            SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                        "                       FROM FD_RENEWAL\n" +
                        "                      WHERE STATUS = 1\n" +
                        "                       { AND RENEWAL_DATE <?DATE_FROM }\n" +
                        "                       { AND RENEWAL_DATE <?BALANCE_DATE }\n" +
                        "                      GROUP BY FD_ACCOUNT_ID) AS FDRO\n" +
                        "            ON FDA.FD_ACCOUNT_ID = FDRO.FD_ACCOUNT_ID\n" +
                        "          LEFT JOIN (SELECT FD_ACCOUNT_ID,BRANCH_ID,\n" +
                        "                            MAX(MATURITY_DATE) AS MATURITY_DATE,\n" +
                        "                            MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                        "                            INTEREST_RATE,\n" +
                        "                            IF(INTEREST_TYPE = 0, 'Simple', 'Compound') AS INTEREST_MODE,\n" +
                        "                            SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                        "                            SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                        "                            SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                        "                       FROM FD_RENEWAL AS F\n" +
                        "                      WHERE STATUS = 1\n" +
                        "                       { AND RENEWAL_DATE BETWEEN ?DATE_FROM AND ?DATE_TO}\n" +
                        "                       { AND RENEWAL_DATE <=?BALANCE_DATE }\n" +
                        "                      GROUP BY F.RENEWAL_DATE,FD_ACCOUNT_ID\n" +
                        "                      ORDER BY FD_ACCOUNT_ID DESC) AS FDR\n" +
                        "            ON FDA.FD_ACCOUNT_ID = FDR.FD_ACCOUNT_ID\n" +
                        "          LEFT JOIN MASTER_BANK AS MBK\n" +
                        "            ON FDA.BANK_ID = MBK.BANK_ID\n" +
                        "          LEFT JOIN MASTER_PROJECT MPR\n" +
                        "            ON FDA.PROJECT_ID = MPR.PROJECT_ID\n" +
                        "          LEFT JOIN MASTER_LEDGER MLG\n" +
                        "            ON FDA.LEDGER_ID = MLG.LEDGER_ID\n" +
                        "         WHERE FDA.STATUS = 1\n" +
                        "          { AND FDA.INVESTMENT_DATE <= ?DATE_TO}\n" +
                        "          { AND FDA.INVESTMENT_DATE <= ?BALANCE_DATE } \n" +
                        "         {  AND MPR.PROJECT_ID IN (?PROJECT_ID)} \n" +
                        "  { AND FDR.BRANCH_ID IN (?BRANCH_OFFICE_ID) } \n" +
                        "  { AND MPR.CUSTOMERID IN (?LEGAL_ENTITY_ID) } \n" +
                        "           AND FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        "               IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) <> 0) AS T\n" +
                         " WHERE T.CLOSING_STATUS = 'Active'";
                        break;
                    }
                #endregion

            }
            return query;
        }

        #endregion
    }

    public class ReportBankSQL
    {
        public string GetReportSQL(ReportSQLCommand.BankReport queryId)
        {
            string query = string.Empty;
            switch (queryId)
            {
                #region BankReport

                #region Cheque Cleared
                case ReportSQLCommand.BankReport.ChequeCleared:
                    {
                        query = "SELECT MT.VOUCHER_ID,\n" +
                                "       T.LEDGER_ID,\n" +
                                "       VMT.VOUCHER_SUB_TYPE,\n" +
                                "       VMT.VOUCHER_DATE,\n" +
                                "       MT.CHEQUE_NO,\n" +
                                "       T.LEDGER_CODE,\n" +
                                "       MATERIALIZED_ON,\n" +
                                "       T.LEDGER_NAME,\n" +
                                "       T.AMOUNT\n" +
                                "  FROM MASTER_PROJECT PL\n" +
                                " INNER JOIN VOUCHER_MASTER_TRANS VMT\n" +
                                "    ON PL.PROJECT_ID = VMT.PROJECT_ID\n" +
                                " INNER JOIN VOUCHER_TRANS MT\n" +
                                "    ON VMT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                " INNER JOIN MASTER_LEDGER ML\n" +
                                "    ON MT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "    ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                " INNER JOIN (SELECT MT.VOUCHER_ID,\n" +
                                "                    MT.LEDGER_ID,\n" +
                                "                    ML.LEDGER_CODE,\n" +
                                "                    ML.LEDGER_NAME,\n" +
                                "                    MT.AMOUNT\n" +
                                "               FROM MASTER_LEDGER AS ML\n" +
                                "              INNER JOIN VOUCHER_TRANS AS MT\n" +
                                "                 ON MT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "              WHERE ML.GROUP_ID NOT IN (12)) AS T\n" +
                                "    ON VMT.VOUCHER_ID = T.VOUCHER_ID\n" +
                                " WHERE VMT.VOUCHER_DATE <= ?DATE_AS_ON\n" +
                                "   AND ML.LEDGER_SUB_TYPE = 'BK'\n" +
                                "   AND VMT.STATUS = 1\n" +
                                "   AND VMT.VOUCHER_TYPE IN ('RC')\n" +
                                "   AND PL.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "   AND ML.LEDGER_ID IN\n" +
                                "       (?LEDGER_ID)\n" +
                                "   AND MT.MATERIALIZED_ON IS NOT NULL\n" +
                                "  { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                " ORDER BY VOUCHER_DATE ASC;";

                        break;
                    }
                #endregion

                #region Cheque Uncleared
                case ReportSQLCommand.BankReport.ChequeUncleared:
                    {
                        query = "SELECT MT.VOUCHER_ID,\n" +
                                "       T.LEDGER_ID,\n" +
                                "       VMT.VOUCHER_SUB_TYPE,\n" +
                                "       VMT.VOUCHER_DATE,\n" +
                                "       MT.CHEQUE_NO,\n" +
                                "       T.LEDGER_CODE,\n" +
                                "       MATERIALIZED_ON,\n" +
                                "       T.LEDGER_NAME,\n" +
                                "       T.AMOUNT\n" +
                                "  FROM MASTER_PROJECT PL\n" +
                                " INNER JOIN VOUCHER_MASTER_TRANS VMT\n" +
                                "    ON PL.PROJECT_ID = VMT.PROJECT_ID\n" +
                                " INNER JOIN VOUCHER_TRANS MT\n" +
                                "    ON VMT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                " INNER JOIN MASTER_LEDGER ML\n" +
                                "    ON MT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "    ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                " INNER JOIN (SELECT MT.VOUCHER_ID,\n" +
                                "                    MT.LEDGER_ID,\n" +
                                "                    ML.LEDGER_CODE,\n" +
                                "                    ML.LEDGER_NAME,\n" +
                                "                    MT.AMOUNT\n" +
                                "               FROM MASTER_LEDGER AS ML\n" +
                                "              INNER JOIN VOUCHER_TRANS AS MT\n" +
                                "                 ON MT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "              WHERE ML.GROUP_ID NOT IN (12)) AS T\n" +
                                "    ON VMT.VOUCHER_ID = T.VOUCHER_ID\n" +
                                " WHERE VMT.VOUCHER_DATE <= ?DATE_AS_ON\n" +
                                "   AND ML.LEDGER_SUB_TYPE = 'BK'\n" +
                                "   AND VMT.STATUS = 1\n" +
                                "   AND VMT.VOUCHER_TYPE IN ('RC')\n" +
                                "   AND PL.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "   AND ML.LEDGER_ID IN\n" +
                                "       (?LEDGER_ID)\n" +
                                "   AND MT.MATERIALIZED_ON IS NULL\n" +
                                "  { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                " ORDER BY VOUCHER_DATE ASC";

                        break;
                    }
                #endregion

                #region Cheque Realiszed
                case ReportSQLCommand.BankReport.ChequeRealiszed:
                    {
                        query = "SELECT MT.VOUCHER_ID,\n" +
                                "       T.LEDGER_ID,\n" +
                                "       VMT.VOUCHER_SUB_TYPE,\n" +
                                "       VMT.VOUCHER_DATE,\n" +
                                "       MT.CHEQUE_NO,\n" +
                                "       T.LEDGER_CODE,\n" +
                                "       MATERIALIZED_ON,\n" +
                                "       T.LEDGER_NAME,\n" +
                                "       T.AMOUNT\n" +
                                "  FROM MASTER_PROJECT PL\n" +
                                " INNER JOIN VOUCHER_MASTER_TRANS VMT\n" +
                                "    ON PL.PROJECT_ID = VMT.PROJECT_ID\n" +
                                " INNER JOIN VOUCHER_TRANS MT\n" +
                                "    ON VMT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                " INNER JOIN MASTER_LEDGER ML\n" +
                                "    ON MT.LEDGER_ID = ML.LEDGER_ID\n" +
                                " INNER JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                                " INNER JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "    ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                " INNER JOIN (SELECT MT.VOUCHER_ID,\n" +
                                "                    MT.LEDGER_ID,\n" +
                                "                    ML.LEDGER_CODE,\n" +
                                "                    ML.LEDGER_NAME,\n" +
                                "                    MT.AMOUNT\n" +
                                "               FROM MASTER_LEDGER AS ML\n" +
                                "              INNER JOIN VOUCHER_TRANS AS MT\n" +
                                "                 ON MT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "              WHERE ML.GROUP_ID NOT IN (12)) AS T\n" +
                                "    ON VMT.VOUCHER_ID = T.VOUCHER_ID\n" +
                                " WHERE VMT.VOUCHER_DATE <= ?DATE_AS_ON\n" +
                                "   AND ML.LEDGER_SUB_TYPE = 'BK'\n" +
                                "   AND VMT.STATUS = 1\n" +
                                "   AND VMT.VOUCHER_TYPE IN ('PY')\n" +
                                "   AND PL.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "   AND ML.LEDGER_ID IN\n" +
                                "       (?LEDGER_ID)\n" +
                                "   AND MT.MATERIALIZED_ON IS NOT NULL\n" +
                                "  { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                " ORDER BY VOUCHER_DATE ASC";

                        break;
                    }
                #endregion

                #region Cheque Unrealized
                case ReportSQLCommand.BankReport.ChequeUnrealized:
                    {
                        query = "SELECT MT.VOUCHER_ID,\n" +
                                "       T.LEDGER_ID,\n" +
                                "       VMT.VOUCHER_SUB_TYPE,\n" +
                                "       VMT.VOUCHER_DATE,\n" +
                                "       MT.CHEQUE_NO,\n" +
                                "       T.LEDGER_CODE,\n" +
                                "       MATERIALIZED_ON,\n" +
                                "       T.LEDGER_NAME,\n" +
                                "       T.AMOUNT\n" +
                                "  FROM MASTER_PROJECT PL\n" +
                                " INNER JOIN VOUCHER_MASTER_TRANS VMT\n" +
                                "    ON PL.PROJECT_ID = VMT.PROJECT_ID\n" +
                                " INNER JOIN VOUCHER_TRANS MT\n" +
                                "    ON VMT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                " INNER JOIN MASTER_LEDGER ML\n" +
                                "    ON MT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "    ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                " INNER JOIN (SELECT MT.VOUCHER_ID,\n" +
                                "                    MT.LEDGER_ID,\n" +
                                "                    ML.LEDGER_CODE,\n" +
                                "                    ML.LEDGER_NAME,\n" +
                                "                    MT.AMOUNT\n" +
                                "               FROM MASTER_LEDGER AS ML\n" +
                                "              INNER JOIN VOUCHER_TRANS AS MT\n" +
                                "                 ON MT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "              WHERE ML.GROUP_ID NOT IN (12)) AS T\n" +
                                "    ON VMT.VOUCHER_ID = T.VOUCHER_ID\n" +
                                " WHERE VMT.VOUCHER_DATE <= ?DATE_AS_ON\n" +
                                "   AND ML.LEDGER_SUB_TYPE = 'BK'\n" +
                                "   AND VMT.STATUS = 1\n" +
                                "   AND VMT.VOUCHER_TYPE IN ('PY')\n" +
                                "   AND PL.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "   AND ML.LEDGER_ID IN\n" +
                                "       (?LEDGER_ID)\n" +
                                "   AND MT.MATERIALIZED_ON IS NULL\n" +
                                "  { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                " ORDER BY VOUCHER_DATE ASC";


                        break;
                    }
                #endregion

                #region Bank Reconciliation Statement
                case ReportSQLCommand.BankReport.BankReconcilationStatement:
                    {
                        query = "SELECT MT.VOUCHER_ID,\n" +
                                "       T.LEDGER_ID,\n" +
                                "       VMT.VOUCHER_SUB_TYPE,\n" +
                                "       MT.CHEQUE_NO,\n" +
                                "       T.LEDGER_CODE,\n" +
                                "       MATERIALIZED_ON,\n" +
                                "       T.LEDGER_NAME,\n" +
                                "       CASE\n" +
                                "         WHEN VMT.VOUCHER_TYPE = 'PY' THEN\n" +
                                "          T.AMOUNT\n" +
                                "         ELSE\n" +
                                "          0.00\n" +
                                "       END AS 'Cleared',\n" +
                                "       CASE\n" +
                                "         WHEN VMT.VOUCHER_TYPE = 'RC' THEN\n" +
                                "          T.AMOUNT\n" +
                                "         ELSE\n" +
                                "          0.00\n" +
                                "       END AS 'realised'\n" +
                                "  FROM MASTER_PROJECT PL\n" +
                                " INNER JOIN VOUCHER_MASTER_TRANS VMT\n" +
                                "    ON PL.PROJECT_ID = VMT.PROJECT_ID\n" +
                                " INNER JOIN VOUCHER_TRANS MT\n" +
                                "    ON VMT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                " INNER JOIN MASTER_LEDGER ML\n" +
                                "    ON MT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "    ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                " INNER JOIN (SELECT MT.VOUCHER_ID,\n" +
                                "                    MT.LEDGER_ID,\n" +
                                "                    ML.LEDGER_CODE,\n" +
                                "                    ML.LEDGER_NAME,\n" +
                                "                    MT.AMOUNT\n" +
                                "               FROM MASTER_LEDGER AS ML\n" +
                                "              INNER JOIN VOUCHER_TRANS AS MT\n" +
                                "                 ON MT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "              WHERE ML.GROUP_ID NOT IN (12)) AS T\n" +
                                "    ON VMT.VOUCHER_ID = T.VOUCHER_ID\n" +
                                " WHERE VMT.VOUCHER_DATE <= ?DATE_AS_ON\n" +
                                "   AND ML.LEDGER_SUB_TYPE = 'BK'\n" +
                                "   AND VMT.STATUS = 1\n" +
                                "   AND PL.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "   AND ML.LEDGER_ID IN\n" +
                                "       (?LEDGER_ID)\n" +
                                "   AND VMT.VOUCHER_TYPE IN ('PY', 'RC')\n" +
                                "   AND MT.MATERIALIZED_ON IS NOT NULL\n" +
                                "  { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                " GROUP BY VMT.VOUCHER_ID\n" +
                                " ORDER BY CHEQUE_NO DESC";


                        break;
                    }
                #endregion

                #region Bank Reconciliation Statement Cleared/Reconciled
                case ReportSQLCommand.BankReport.BankReconcilationStatementCleared:
                    {
                        query = "SELECT MT.VOUCHER_ID,\n" +
                        "       T.LEDGER_ID,VMT.VOUCHER_SUB_TYPE,\n" +
                        "       MT.CHEQUE_NO,\n" +
                        "       T.LEDGER_CODE,\n" +
                        "       MATERIALIZED_ON,\n" +
                        "       T.LEDGER_NAME,\n" +
                        "       CASE\n" +
                        "         WHEN VMT.VOUCHER_TYPE = 'PY' THEN\n" +
                        "          T.AMOUNT\n" +
                        "         ELSE\n" +
                        "          0.00\n" +
                        "       END AS 'Cleared',\n" +
                        "       CASE\n" +
                        "         WHEN VMT.VOUCHER_TYPE = 'RC' THEN\n" +
                        "          T.AMOUNT\n" +
                        "         ELSE\n" +
                        "          0.00\n" +
                        "       END AS 'realised'\n" +
                        "  FROM MASTER_PROJECT PL\n" +
                        " INNER JOIN VOUCHER_MASTER_TRANS VMT\n" +
                        "    ON PL.PROJECT_ID = VMT.PROJECT_ID\n" +
                        " INNER JOIN VOUCHER_TRANS MT\n" +
                        "    ON VMT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        "\n" +
                        " INNER JOIN MASTER_LEDGER ML\n" +
                        "    ON MT.LEDGER_ID = ML.LEDGER_ID\n" +
                         " INNER JOIN\n" +
                        "(SELECT MT.VOUCHER_ID,MT.LEDGER_ID,ML.LEDGER_CODE,ML.LEDGER_NAME,MT.AMOUNT\n" +
                                  "FROM MASTER_LEDGER AS ML\n" +
                                  "INNER JOIN VOUCHER_TRANS AS MT\n" +
                                  "ON MT.LEDGER_ID=ML.LEDGER_ID\n" +
                                  "WHERE ML.GROUP_ID NOT IN(12))AS T\n" +
                        "ON VMT.VOUCHER_ID = T.VOUCHER_ID\n" +
                            //" INNER JOIN master_bank_ACCOUNT ba\n" +
                            //"    ON ML.BANK_ACCOUNT_ID = BA.BANK_ACCOUNT_ID\n" +
                            //" INNER JOIN MASTER_BANK MB\n" +
                            //"    ON BA.BANK_ID = MB.BANK_ID\n" +
                        " WHERE VMT.VOUCHER_DATE <= ?DATE_AS_ON\n" +
                        "   AND ML.LEDGER_SUB_TYPE = 'BK'\n" +
                        "   AND VMT.STATUS = 1\n" +
                        "   AND PL.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "   AND ML.LEDGER_ID IN (?LEDGER_ID)\n" +
                        "   AND VMT.VOUCHER_TYPE IN ('PY', 'RC')\n" +
                        "   AND MT.MATERIALIZED_ON IS NOT NULL\n" +
                        " GROUP BY VMT.VOUCHER_ID\n" +
                        " ORDER BY CHEQUE_NO DESC";

                        break;
                    }

                #endregion

                #region Cash Bank Book
                case ReportSQLCommand.BankReport.CashBankBook:
                    {
                        #region Old Query

                        //query = "SELECT TT.VOUCHER_ID,\n" +
                        //        "       TT.BRANCH_ID,\n" +
                        //        "       TT.VOUCHER_SUB_TYPE,\n" +
                        //        "       TT.PROJECT_ID,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.LEDGER_ID ORDER BY TT.sort_id DESC SEPARATOR '')) AS LEDGER_ID,\n" +
                        //        "       DATE(TT.VOUCHER_DATE) AS 'DATE',\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.VOUCHER_NO ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS RECEIPT_NO,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.LEDGER_CODE ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS LEDGER_CODE,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS 'RECEIPT',\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.REC_LEDGER_AMOUNT ORDER BY TT.sort_id DESC\n" +
                        //        "                         SEPARATOR ' ')) AS REC_LEDGER_AMOUNT,\n" +
                        //        "       SUM(TT.CASH) AS CASH,\n" +
                        //        "       SUM(TT.BANK) AS BANK,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.NARRATION ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS NARRATION,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.PAY_VOUCHER_ID ORDER BY TT.sort_id DESC\n" +
                        //        "                         SEPARATOR '')) AS PAY_VOUCHER_ID,\n" +
                        //        "       TT.VOUCHER_PAYMENT_SUB_TYPE,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.PAY_VID ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS PAY_VNO,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.PAY_LED_ID ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS PAY_LED_ID,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.PAY_CODE ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS PAY_CODE,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS 'PAYMENT',\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.PAY_LEDGER_AMOUNT ORDER BY TT.sort_id DESC\n" +
                        //        "                         SEPARATOR ' ')) AS PAY_LEDGER_AMOUNT,\n" +
                        //        "       SUM(TT.PAY_CASH) AS PAY_CASH,\n" +
                        //        "       SUM(TT.PAY_BANK) AS PAY_BANK,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.NAP ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS NARRATION_PAY\n" +
                        //        "  FROM (SELECT VT.VOUCHER_ID,\n" +
                        //        "               VT.BRANCH_ID,\n" +
                        //        "               MT.VOUCHER_SUB_TYPE,\n" +
                        //        "               MT.PROJECT_ID,\n" +
                        //        "               VT.LEDGER_ID,\n" +
                        //        "               GROUP_CONCAT(MT.VOUCHER_NO ORDER BY sort_id DESC SEPARATOR ' ') AS VOUCHER_NO,\n" +
                        //        "               GROUP_CONCAT(ML.LEDGER_CODE ORDER BY sort_id DESC SEPARATOR ' ') AS LEDGER_CODE,\n" +
                        //        "               @row_num := IF(@prev_value = T.voucher_date, @row_num + 1, 1) AS sort_id,\n" +
                        //        "               @prev_value := T.voucher_date as VOUCHER_DATE,\n" +
                        //        "               @rrow_num :=\n" +
                        //        "               IF(@rprev_value = MT.VOUCHER_ID, @rrow_num + 1, 1) AS sort_id1,\n" +
                        //        "               @rprev_value := MT.VOUCHER_ID as v1,\n" +
                        //        "               ML.LEDGER_NAME AS LEDGER_NAME,\n" +
                        //        "               CONCAT(CONCAT(VT.AMOUNT, ' '), VT.TRANS_MODE) AS REC_LEDGER_AMOUNT,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN (T.CASH) > 0 AND @rrow_num <> 1 THEN\n" +
                        //        "                  0\n" +
                        //        "                 ELSE\n" +
                        //        "                  CASE\n" +
                        //        "                    WHEN (T.CASH) > 0 AND @rrow_num = 1 THEN\n" +
                        //        "                     T.CASH\n" +
                        //        "                    ELSE\n" +
                        //        "                     0\n" +
                        //        "                  END\n" +
                        //        "               END AS CASH,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN (T.BANK > 0) AND @rrow_num <> 1 THEN\n" +
                        //        "                  0\n" +
                        //        "                 ELSE\n" +
                        //        "                  CASE\n" +
                        //        "                    WHEN (T.BANK > 0) AND @rrow_num = 1 THEN\n" +
                        //        "                     T.BANK\n" +
                        //        "                    ELSE\n" +
                        //        "                     0\n" +
                        //        "                  END\n" +
                        //        "               END AS BANK,\n" +
                        //        "               '' AS PAY_VOUCHER_ID,\n" +
                        //        "               MT.VOUCHER_SUB_TYPE AS VOUCHER_PAYMENT_SUB_TYPE,\n" +
                        //        "               '' AS PAY_VID,\n" +
                        //        "               '' as PAY_LED_ID,\n" +
                        //        "               '' AS PAY_CODE,\n" +
                        //        "               '' AS PAY_LEDGER,\n" +
                        //        "               '' AS PAY_LEDGER_AMOUNT,\n" +
                        //        "               0 AS PAY_CASH,\n" +
                        //        "               0 AS PAY_BANK,\n" +
                        //        "               MT.NARRATION,\n" +
                        //        "               '' AS NAP\n" +
                        //        "          FROM master_ledger_GROUP LG\n" +
                        //        "\n" +
                        //        "          LEFT JOIN master_ledger ML\n" +
                        //        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "          LEFT JOIN voucher_trans VT\n" +
                        //        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "          LEFT JOIN voucher_master_trans MT\n" +
                        //        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "\n" +
                        //        "           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "\n" +
                        //        "          JOIN (SELECT CASHBANK.VOUCHER_DATE,\n" +
                        //        "                      CASHBANK.VOUCHER_SUB_TYPE,\n" +
                        //        "                      IFNULL(MBA.ACCOUNT_NUMBER, ' ') AS ACCOUNT_NUMBER,\n" +
                        //        "                      CASHBANK.VOUCHER_ID,\n" +
                        //        "                      CASHBANK.BRANCH_ID,\n" +
                        //        "                      CASHBANK.VOUCHER_NO,\n" +
                        //        "                      CASHBANK.LEDGER_ID,\n" +
                        //        "                      SUM(CASHBANK.CASH) AS CASH,\n" +
                        //        "                      SUM(CASHBANK.BANK) AS BANK,\n" +
                        //        "                      CASHBANK.LEDGER_CODE,\n" +
                        //        "                      CASHBANK.PROJECT_ID\n" +
                        //        "                 FROM (SELECT MT.VOUCHER_DATE,\n" +
                        //        "                              MT.VOUCHER_SUB_TYPE,\n" +
                        //        "                              VT.VOUCHER_ID,\n" +
                        //        "                              VT.BRANCH_ID,\n" +
                        //        "                              MT.VOUCHER_NO,\n" +
                        //        "                              VT.LEDGER_ID,\n" +
                        //        "                              ML.LEDGER_CODE,\n" +
                        //        "                              CASE\n" +
                        //        "                                WHEN LG.GROUP_ID = 13 THEN\n" +
                        //        "                                 SUM(VT.AMOUNT)\n" +
                        //        "                                ELSE\n" +
                        //        "                                 0\n" +
                        //        "                              END AS CASH,\n" +
                        //        "                              CASE\n" +
                        //        "                                WHEN LG.GROUP_ID = 12 THEN\n" +
                        //        "                                 SUM(VT.AMOUNT)\n" +
                        //        "                                ELSE\n" +
                        //        "                                 0\n" +
                        //        "                              END AS BANK,\n" +
                        //        "                              MT.PROJECT_ID\n" +
                        //        "                         FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "                         LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                           ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                         LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                           ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                         LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                           ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "\n" +
                        //        "                          AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                          AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                         LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "                           ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "                         LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                           ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "\n" +
                        //        "                        WHERE MT.VOUCHER_TYPE in ('RC') -- ,'PY'\n" +
                        //        "                          AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +

                        //        "                          AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                      {    AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "                      {    AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "                          and lg.group_id in (12, 13)\n" +
                        //        "                          AND MT.STATUS = 1\n" +
                        //        "                        GROUP BY MT.PROJECT_ID, VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                        //        "                        ORDER BY MT.PROJECT_ID,\n" +
                        //        "                                 MT.VOUCHER_DATE,\n" +
                        //        "                                 MT.VOUCHER_NO,\n" +
                        //        "                                 VT.SEQUENCE_NO) AS CASHBANK\n" +
                        //        "                 LEFT JOIN MASTER_BANK_ACCOUNT MBA\n" +
                        //        "                   ON MBA.LEDGER_ID = CASHBANK.LEDGER_ID\n" +
                        //        "                 LEFT JOIN MASTER_BANK MB\n" +
                        //        "                   ON MB.BANK_ID = MBA.BANK_ID\n" +
                        //        "                GROUP BY CASHBANK.VOUCHER_ID\n" +
                        //        "                ORDER BY CASHBANK.PROJECT_ID,\n" +
                        //        "                         CASHBANK.VOUCHER_DATE,\n" +
                        //        "                         CASHBANK.VOUCHER_NO) AS T\n" +
                        //        "            ON MT.VOUCHER_ID = T.VOUCHER_ID, (SELECT @row_num := 1) x,\n" +
                        //        "         (SELECT @prev_value := null) y, (SELECT @rrow_num := 1) x1,\n" +
                        //        "         (SELECT @rprev_value := null) y1\n" +
                        //        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID) { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "           AND MT.VOUCHER_TYPE IN ('RC') -- ,'PY'\n" +
                        //        "           AND VT.TRANS_MODE IN ('DR', 'CR')\n" +
                        //        "           AND MT.STATUS = 1\n" +
                        //        "           AND T.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "           AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "         GROUP BY MT.PROJECT_ID,\n" +
                        //        "                  MT.VOUCHER_DATE,\n" +
                        //        "                  VT.VOUCHER_ID,\n" +
                        //        "                  VT.SEQUENCE_NO\n" +
                        //        "\n" +
                        //        "        UNION ALL\n" +
                        //        "\n" +
                        //        "        SELECT '' AS VOUCHER_ID,\n" +
                        //        "               VT.BRANCH_ID,\n" +
                        //        "               MT.VOUCHER_SUB_TYPE,\n" +
                        //        "               MT.PROJECT_ID,\n" +
                        //        "               '' AS LEDGER_ID,\n" +
                        //        "               '' AS VOUCHER_NO,\n" +
                        //        "               '' AS LEDGER_CODE,\n" +
                        //        "               @row_number :=\n" +
                        //        "               IF(@prev_val = T.voucher_date, @row_number + 1, 1) AS sort_id,\n" +
                        //        "               @prev_val := T.voucher_date as VOUCHER_DATE,\n" +
                        //        "               @prow_num :=\n" +
                        //        "               IF(@pprev_value = MT.VOUCHER_ID, @prow_num + 1, 1) AS sort_id1,\n" +
                        //        "               @pprev_value := MT.VOUCHER_ID as v1,\n" +
                        //        "               '' AS LEDGER_NAME,\n" +
                        //        "               '' AS REC_LEDGER_AMOUNT,\n" +
                        //        "               0 AS CASH,\n" +
                        //        "               0 AS BANK,\n" +
                        //        "               VT.VOUCHER_ID AS PAY_VOUCHER_ID,\n" +
                        //        "               MT.VOUCHER_SUB_TYPE AS VOUCHER_PAYMENT_SUB_TYPE,\n" +
                        //        "               GROUP_CONCAT(T.VOUCHER_NO ORDER BY sort_id DESC SEPARATOR '') AS PAY_VID,\n" +
                        //        "               VT.LEDGER_ID as PAY_LED_ID,\n" +
                        //        "               GROUP_CONCAT(ML.LEDGER_CODE ORDER BY sort_id DESC SEPARATOR '') AS PAY_CODE,\n" +
                        //        "               --  CONCAT(CONCAT(CONCAT(CONCAT(ML.LEDGER_NAME,'  '),VT.AMOUNT),' '),VT.TRANS_MODE) AS PAY_LEDGER,-- CONCAT(ML.LEDGER_NAME,T.ACCOUNT_NUMBER)\n" +
                        //        "               --   GROUP_CONCAT(CONCAT(ML.LEDGER_NAME,T.ACCOUNT_NUMBER) ORDER BY sort_id DESC SEPARATOR ' ') AS PAY_LEDGER,\n" +
                        //        "               GROUP_CONCAT(ML.LEDGER_NAME ORDER BY sort_id DESC SEPARATOR ' ') AS PAY_LEDGER,\n" +
                        //        "\n" +
                        //        "               CONCAT(CONCAT(VT.AMOUNT, ' '), VT.TRANS_MODE) AS PAY_LEDGER_AMOUNT,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN (T.CASH) > 0 AND @prow_num <> 1 THEN\n" +
                        //        "                  0\n" +
                        //        "                 ELSE\n" +
                        //        "                  CASE\n" +
                        //        "                    WHEN (T.CASH) > 0 AND @prow_num = 1 THEN\n" +
                        //        "                     T.CASH\n" +
                        //        "                    ELSE\n" +
                        //        "                     0\n" +
                        //        "                  END\n" +
                        //        "               END AS PAY_CASH,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN (T.BANK > 0) AND @prow_num <> 1 THEN\n" +
                        //        "                  0\n" +
                        //        "                 ELSE\n" +
                        //        "                  CASE\n" +
                        //        "                    WHEN (T.BANK > 0) AND @prow_num = 1 THEN\n" +
                        //        "                     T.BANK\n" +
                        //        "                    ELSE\n" +
                        //        "                     0\n" +
                        //        "                  END\n" +
                        //        "               END AS PAY_BANK,\n" +
                        //        "               '' AS NARRATION,\n" +
                        //        "               MT.NARRATION AS NAP\n" +
                        //        "          FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "\n" +
                        //        "          LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "          LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "\n" +
                        //        "           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "\n" +
                        //        "          JOIN (SELECT CASHBANK.VOUCHER_DATE,\n" +
                        //        "                       CASHBANK.VOUCHER_SUB_TYPE,\n" +
                        //        "                       --    IFNULL(CONCAT(' - ',MBA.ACCOUNT_NUMBER),' ') AS ACCOUNT_NUMBER,\n" +
                        //        "                       IFNULL(MBA.ACCOUNT_NUMBER, ' ') AS ACCOUNT_NUMBER,\n" +
                        //        "                       CASHBANK.VOUCHER_ID,\n" +
                        //        "                       CASHBANK.BRANCH_ID,\n" +
                        //        "                       CASHBANK.LEDGER_ID,\n" +
                        //        "                       --  CASHBANK.CASH_FLAG,\n" +
                        //        "                       --  CASHBANK.BANK_FLAG,\n" +
                        //        "                       SUM(CASHBANK.CASH) AS CASH,\n" +
                        //        "                       SUM(CASHBANK.BANK) AS BANK,\n" +
                        //        "                       CASHBANK.VOUCHER_NO,\n" +
                        //        "                       CASHBANK.LEDGER_CODE,\n" +
                        //        "                       CASHBANK.PROJECT_ID\n" +
                        //        "                  FROM (SELECT MT.VOUCHER_DATE,\n" +
                        //        "                               MT.VOUCHER_SUB_TYPE,\n" +
                        //        "                               VT.VOUCHER_ID,\n" +
                        //        "                               VT.BRANCH_ID,\n" +
                        //        "                               MT.VOUCHER_NO,\n" +
                        //        "                               ML.LEDGER_CODE,\n" +
                        //        "                               VT.LEDGER_ID,\n" +
                        //        "                               --            CASE\n" +
                        //        "                               --              WHEN LG.GROUP_ID = 13 THEN\n" +
                        //        "                               --               1\n" +
                        //        "                               --              ELSE\n" +
                        //        "                               --               0\n" +
                        //        "                               --            END AS CASH_FLAG,\n" +
                        //        "                               --           CASE\n" +
                        //        "                               --             WHEN LG.GROUP_ID = 12 THEN\n" +
                        //        "                               --              1\n" +
                        //        "                               --             ELSE\n" +
                        //        "                               --             0\n" +
                        //        "                               --          END AS BANK_FLAG\n" +
                        //        "                               CASE\n" +
                        //        "                                 WHEN LG.GROUP_ID = 13 THEN\n" +
                        //        "                                  SUM(VT.AMOUNT)\n" +
                        //        "                                 ELSE\n" +
                        //        "                                  0\n" +
                        //        "                               END AS CASH,\n" +
                        //        "                               CASE\n" +
                        //        "                                 WHEN LG.GROUP_ID = 12 THEN\n" +
                        //        "                                  SUM(VT.AMOUNT)\n" +
                        //        "                                 ELSE\n" +
                        //        "                                  0\n" +
                        //        "                               END AS BANK,\n" +
                        //        "                               MT.PROJECT_ID\n" +
                        //        "\n" +
                        //        "                          FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "\n" +
                        //        "                          LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "\n" +
                        //        "                            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                          LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "\n" +
                        //        "                           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "                            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "                          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "\n" +
                        //        "                         WHERE MT.VOUCHER_TYPE IN ('PY') -- 'RC',\n" +
                        //        "                              -- AND VT.voucher_id = 2\n" +
                        //        "                           AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +

                        //        "                           AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                        {   AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "                        {   AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "                           and lg.group_id in (12, 13)\n" +
                        //        "                           AND MT.STATUS = 1\n" +
                        //        "                         GROUP BY MT.PROJECT_ID, MT.VOUCHER_ID, VT.LEDGER_ID\n" +
                        //        "                         ORDER BY MT.PROJECT_ID,\n" +
                        //        "                                  MT.VOUCHER_DATE,\n" +
                        //        "                                  MT.VOUCHER_NO,\n" +
                        //        "                                  VT.SEQUENCE_NO) AS CASHBANK\n" +
                        //        "                  LEFT JOIN MASTER_BANK_ACCOUNT MBA\n" +
                        //        "                    ON MBA.LEDGER_ID = CASHBANK.LEDGER_ID\n" +
                        //        "                  LEFT JOIN MASTER_BANK MB\n" +
                        //        "                    ON MB.BANK_ID = MBA.BANK_ID\n" +
                        //        "                 GROUP BY CASHBANK.VOUCHER_ID\n" +
                        //        "                 ORDER BY CASHBANK.PROJECT_ID,\n" +
                        //        "                          CASHBANK.VOUCHER_DATE,\n" +
                        //        "                          CASHBANK.VOUCHER_NO) AS T\n" +
                        //        "            ON MT.VOUCHER_ID = T.VOUCHER_ID, (SELECT @row_number := 1) x,\n" +
                        //        "         (SELECT @prev_val := null) y, (SELECT @prow_num := 1) x1,\n" +
                        //        "         (SELECT @pprev_value := null) y1\n" +
                        //        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID) { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "           AND MT.VOUCHER_TYPE IN ('PY') -- 'RC',\n" +
                        //        "           AND VT.TRANS_MODE IN ('CR', 'DR')\n" +
                        //        "           AND MT.STATUS = 1\n" +
                        //        "           AND T.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +

                        //        "           AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "         GROUP BY MT.PROJECT_ID,\n" +
                        //        "                  MT.VOUCHER_DATE,\n" +
                        //        "                  VT.VOUCHER_ID,\n" +
                        //        "                  VT.SEQUENCE_NO,\n" +
                        //        "                  ML.LEDGER_ID\n" +
                        //        "        UNION ALL\n" +
                        //        "\n" +
                        //        "        SELECT TT.VOUCHER_ID,\n" +
                        //        "               TT.BRANCH_ID,\n" +
                        //        "               TT.VOUCHER_SUB_TYPE,\n" +
                        //        "               TT.PROJECT_ID,\n" +
                        //        "               GROUP_CONCAT(TT.LEDGER_ID ORDER BY TT.LEDGER_ID DESC\n" +
                        //        "                            SEPARATOR '') AS LEDGER_ID,\n" +
                        //        "               GROUP_CONCAT(TT.VOUCHER_NO ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                            SEPARATOR ' ') AS VOUCHER_NO,\n" +
                        //        "               GROUP_CONCAT(TT.LEDGER_CODE ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                            SEPARATOR ' ') AS LEDGER_CODE,\n" +
                        //        "               @row_numC :=\n" +
                        //        "               IF(@prev_valueC = TT.voucher_date, @row_numC + 1, 10000000) AS sort_id,\n" +
                        //        "               @prev_valueC := TT.voucher_date as VOUCHER_DATE,\n" +
                        //        "               @crow_num :=\n" +
                        //        "               IF(@cprev_value = TT.VOUCHER_ID, @row_num + 1, 1) AS sort_id1,\n" +
                        //        "               @cprev_value := TT.VOUCHER_ID as v1,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN IFNULL(SUM(TT.BANK), 0) > 0 AND\n" +
                        //        "                      IFNULL(SUM(TT.PAY_CASH), 0) > 0 THEN\n" +
                        //        "                  CONCAT(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                                      SEPARATOR ' '),\n" +
                        //        "                         '(CASH DEPOSIT)')\n" +
                        //        "                 WHEN IFNULL(SUM(TT.CASH), 0) > 0 AND\n" +
                        //        "                      IFNULL(SUM(TT.PAY_BANK), 0) > 0 THEN\n" +
                        //        "                  CONCAT(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                                      SEPARATOR ' '),\n" +
                        //        "                         '(CASH WITHDRAWAL)')\n" +
                        //        "                 WHEN IFNULL(SUM(TT.BANK), 0) > 0 AND\n" +
                        //        "                      IFNULL(SUM(TT.PAY_BANK), 0) > 0 THEN\n" +
                        //        "                  CONCAT(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                                      SEPARATOR ' '),\n" +
                        //        "                         '(BANK TRANSFER)')\n" +
                        //        "                 WHEN IFNULL(SUM(TT.CASH > 0), 0) AND\n" +
                        //        "                      IFNULL(SUM(TT.PAY_CASH), 0) > 0 THEN\n" +
                        //        "                  CONCAT(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                                      SEPARATOR ' '),\n" +
                        //        "                         '(CASH TRANSFER)')\n" +
                        //        "                 WHEN IFNULL(SUM(TT.BANK > 0), 0) AND\n" +
                        //        "                      IFNULL(SUM(TT.PAY_BANK), 0) = 0 THEN\n" +
                        //        "                  CONCAT(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                                      SEPARATOR ' '),\n" +
                        //        "                         '(FD WITHDRAWAL)')\n" +
                        //        "                 ELSE\n" +
                        //        "                  CONCAT(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                                      SEPARATOR ' '),\n" +
                        //        "                         ' ')\n" +
                        //        "               END AS LEDGER_NAME,\n" +
                        //        "               '' AS REC_LEDGER_AMOUNT,\n" +
                        //        "               SUM(TT.CASH) AS CASH,\n" +
                        //        "               SUM(TT.BANK) AS BANK,\n" +
                        //        "               GROUP_CONCAT(TT.PAY_VOUCHER_ID ORDER BY TT.PAY_VOUCHER_ID DESC\n" +
                        //        "                            SEPARATOR ' ') AS PAY_VOUCHER_ID,\n" +
                        //        "               TT.VOUCHER_SUB_TYPE AS VOUCHER_PAYMENT_SUB_TYPE,\n" +
                        //        "               GROUP_CONCAT(TT.PAY_VID ORDER BY TT.VOUCHER_ID DESC SEPARATOR ' ') AS PAY_VID,\n" +
                        //        "               GROUP_CONCAT(TT.PAY_LED_ID ORDER BY TT.PAY_LED_ID DESC\n" +
                        //        "                            SEPARATOR '') AS PAY_LED_ID,\n" +
                        //        "               GROUP_CONCAT(TT.PAY_CODE ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                            SEPARATOR ' ') AS PAY_CODE,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN IFNULL(SUM(TT.BANK), 0) > 0 AND\n" +
                        //        "                      IFNULL(SUM(TT.PAY_CASH), 0) > 0 THEN\n" +
                        //        "                  CONCAT(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                                      SEPARATOR ' '),\n" +
                        //        "                         '(CASH DEPOSIT)')\n" +
                        //        "                 WHEN IFNULL(SUM(TT.CASH), 0) > 0 AND\n" +
                        //        "                      IFNULL(SUM(TT.PAY_BANK), 0) > 0 THEN\n" +
                        //        "                  CONCAT(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                                      SEPARATOR ' '),\n" +
                        //        "                         '(CASH WITHDRAWAL)')\n" +
                        //        "                 WHEN IFNULL(SUM(TT.BANK), 0) > 0 AND\n" +
                        //        "                      IFNULL(SUM(TT.PAY_BANK), 0) > 0 THEN\n" +
                        //        "                  CONCAT(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                                      SEPARATOR ' '),\n" +
                        //        "                         '(BANK TRANSFER)')\n" +
                        //        "                 WHEN IFNULL(SUM(TT.CASH > 0), 0) AND\n" +
                        //        "                      IFNULL(SUM(TT.PAY_CASH), 0) > 0 THEN\n" +
                        //        "                  CONCAT(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                                      SEPARATOR ' '),\n" +
                        //        "                         '(CASH TRANSFER)')\n" +
                        //        "                 WHEN IFNULL(SUM(TT.PAY_BANK > 0), 0) AND\n" +
                        //        "                      IFNULL(SUM(TT.BANK), 0) = 0 THEN\n" +
                        //        "                  CONCAT(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                                      SEPARATOR ' '),\n" +
                        //        "                         ' (FD INVESTMENT)')\n" +
                        //        "                 ELSE\n" +
                        //        "                  CONCAT(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.VOUCHER_ID DESC\n" +
                        //        "                                      SEPARATOR ' '),\n" +
                        //        "                         ' ')\n" +
                        //        "               END AS PAY_LEDGER,\n" +
                        //        "               '' AS PAY_LEDGER_AMOUNT,\n" +
                        //        "               SUM(TT.PAY_CASH) AS PAY_CASH,\n" +
                        //        "               SUM(TT.PAY_BANK) AS PAY_BANK,\n" +
                        //        "               TT.NARRATION,\n" +
                        //        "               TT.NAP\n" +
                        //        "          FROM (SELECT T.VOUCHER_ID,\n" +
                        //        "                       T.BRANCH_ID,\n" +
                        //        "                       T.VOUCHER_SUB_TYPE,\n" +
                        //        "                       T.PROJECT_ID,\n" +
                        //        "                       T.LEDGER_ID,\n" +
                        //        "                       T.LEDGER_CODE,\n" +
                        //        "                       T.VOUCHER_NO,\n" +
                        //        "                       T.VOUCHER_DATE,\n" +
                        //        "                       T.LEDGER_NAME,\n" +
                        //        "                       IFNULL(T.CASH, 0) AS CASH,\n" +
                        //        "                       IFNULL(T.BANK, 0) AS BANK,\n" +
                        //        "                       '' AS PAY_VOUCHER_ID,\n" +
                        //        "                       T.VOUCHER_SUB_TYPE AS VOUCHER_PAYMENT_SUB_TYPE,\n" +
                        //        "                       T.SEQUENCE_NO,\n" +
                        //        "                       '' AS PAY_VID,\n" +
                        //        "                       '' AS PAY_LED_ID,\n" +
                        //        "                       '' AS PAY_CODE,\n" +
                        //        "                       '' AS PAY_LEDGER,\n" +
                        //        "                       0 AS PAY_CASH,\n" +
                        //        "                       0 AS PAY_BANK,\n" +
                        //        "                       T.NARRATION,\n" +
                        //        "                       '' AS NAP\n" +
                        //        "                  FROM (SELECT\n" +
                        //        "\n" +
                        //        "                         VT.VOUCHER_ID,\n" +
                        //        "                         VT.BRANCH_ID,\n" +
                        //        "                         MT.VOUCHER_SUB_TYPE,\n" +
                        //        "                         MT.VOUCHER_NO,\n" +
                        //        "                         ML.LEDGER_CODE,\n" +
                        //        "                         VT.TRANS_MODE,\n" +
                        //        "                         ML.LEDGER_NAME,\n" +
                        //        "                         VT.SEQUENCE_NO,\n" +
                        //        "                         MT.PROJECT_ID,\n" +
                        //        "                         VT.LEDGER_ID,\n" +
                        //        "                         MT.VOUCHER_DATE,\n" +
                        //        "                         LG.GROUP_ID,\n" +
                        //        "                         MT.VOUCHER_TYPE,\n" +
                        //        "                         CASE\n" +
                        //        "                           WHEN LG.GROUP_ID IN (12, 14) THEN\n" +
                        //        "                            IFNULL(VT.AMOUNT, 0)\n" +
                        //        "                         END AS BANK,\n" +
                        //        "                         CASE\n" +
                        //        "                           WHEN LG.GROUP_ID = 13 THEN\n" +
                        //        "                            IFNULL(VT.AMOUNT, 0)\n" +
                        //        "                         END AS CASH,\n" +
                        //        "                         MT.NARRATION\n" +
                        //        "\n" +
                        //        "                          FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "\n" +
                        //        "                          LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                          LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "\n" +
                        //        "                           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "                            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "                          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "\n" +
                        //        "                         WHERE VT.TRANS_MODE = 'DR'\n" +
                        //        "                           AND MT.VOUCHER_TYPE = 'CN'\n" +
                        //        "                           AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                        {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //         "                       {  AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "                           AND MT.STATUS = 1\n" +
                        //        "                           AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +

                        //        "                         ORDER BY VT.VOUCHER_ID ASC) AS T\n" +
                        //        "                 WHERE T.PROJECT_ID IN (?PROJECT_ID) { AND T.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "                   AND T.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +

                        //        "                   AND T.GROUP_ID IN (12, 13)\n" +
                        //        "                   AND T.VOUCHER_TYPE = 'CN'\n" +
                        //        "                 GROUP BY T.PROJECT_ID,\n" +
                        //        "                          T.VOUCHER_DATE,\n" +
                        //        "                          T.VOUCHER_ID,\n" +
                        //        "                          T.LEDGER_ID\n" +
                        //        "\n" +
                        //        "                UNION\n" +
                        //        "\n" +
                        //        "                SELECT T.VOUCHER_ID AS VOUCHER_ID,\n" +
                        //        "                       T.BRANCH_ID,\n" +
                        //        "                       T.VOUCHER_SUB_TYPE,\n" +
                        //        "                       T.PROJECT_ID,\n" +
                        //        "                       '' AS LEDGER_ID,\n" +
                        //        "                       '' AS LEDGER_CODE,\n" +
                        //        "                       '' AS VOUCHER_NO,\n" +
                        //        "                       T.VOUCHER_DATE,\n" +
                        //        "                       '' AS LEDGER_NAME,\n" +
                        //        "                       0 AS CASH,\n" +
                        //        "                       0 AS BANK,\n" +
                        //        "                       T.VOUCHER_ID AS PAY_VOUCHER_ID,\n" +
                        //        "                       T.VOUCHER_SUB_TYPE AS VOUCHER_PAYMENT_SUB_TYPE,\n" +
                        //        "                       T.SEQUENCE_NO,\n" +
                        //        "                       T.VOUCHER_NO AS PAY_VID,\n" +
                        //        "                       T.LEDGER_ID AS PAY_LED_ID,\n" +
                        //        "                       T.LEDGER_CODE AS PAY_CODE,\n" +
                        //        "                       T.LEDGER_NAME AS PAY_LEDGER,\n" +
                        //        "                       SUM(IFNULL(T.CASH, 0)) AS PAY_CASH,\n" +
                        //        "                       SUM(IFNULL(T.BANK, 0)) AS PAY_BANK,\n" +
                        //        "                       '' AS NARRATION,\n" +
                        //        "                       T.NARRATION AS NAP\n" +
                        //        "\n" +
                        //        "                  FROM (SELECT VT.VOUCHER_ID,\n" +
                        //        "                               VT.BRANCH_ID,\n" +
                        //        "                               MT.VOUCHER_SUB_TYPE,\n" +
                        //        "                               ML.LEDGER_CODE,\n" +
                        //        "                               MT.VOUCHER_NO,\n" +
                        //        "                               VT.TRANS_MODE,\n" +
                        //        "                               ML.LEDGER_NAME,\n" +
                        //        "                               VT.SEQUENCE_NO,\n" +
                        //        "                               MT.PROJECT_ID,\n" +
                        //        "                               VT.LEDGER_ID,\n" +
                        //        "                               MT.VOUCHER_DATE,\n" +
                        //        "                               LG.GROUP_ID,\n" +
                        //        "                               MT.VOUCHER_TYPE,\n" +
                        //        "                               CASE\n" +
                        //        "                                 WHEN LG.GROUP_ID IN (12, 14) THEN\n" +
                        //        "                                  IFNULL(VT.AMOUNT, 0)\n" +
                        //        "                               END AS BANK,\n" +
                        //        "                               CASE\n" +
                        //        "                                 WHEN LG.GROUP_ID = 13 THEN\n" +
                        //        "                                  IFNULL(VT.AMOUNT, 0)\n" +
                        //        "                               END AS CASH,\n" +
                        //        "                               MT.NARRATION\n" +
                        //        "\n" +
                        //        "                          FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "\n" +
                        //        "                          LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                          LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "\n" +
                        //        "                           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "                            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "                          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "\n" +
                        //        "                         WHERE VT.TRANS_MODE = 'CR'\n" +
                        //        "                           AND MT.VOUCHER_TYPE = 'CN'\n" +
                        //        "                           AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                       {    AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "                       {    AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "                           AND MT.STATUS = 1\n" +
                        //        "                           AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +

                        //        "                         ORDER BY VT.VOUCHER_ID ASC) AS T\n" +
                        //        "                 WHERE T.PROJECT_ID IN (?PROJECT_ID) { AND T.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "                   AND T.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +

                        //        "                   AND T.GROUP_ID IN (12, 13)\n" +
                        //        "                   AND T.VOUCHER_TYPE = 'CN'\n" +
                        //        "                 GROUP BY T.PROJECT_ID,\n" +
                        //        "                          T.VOUCHER_DATE,\n" +
                        //        "                          T.VOUCHER_ID,\n" +
                        //        "                          T.LEDGER_ID) AS TT,\n" +
                        //        "               (SELECT @row_numC := 1000000) x,\n" +
                        //        "               (SELECT @prev_valueC := null) y,\n" +
                        //        "               (SELECT @crow_num := 1) x1,\n" +
                        //        "               (SELECT @cprev_value := null) y1\n" +
                        //        "         GROUP BY TT.VOUCHER_DATE, tt.VOUCHER_ID\n" +
                        //        "\n" +
                        //        "        ) AS TT\n" +
                        //        " GROUP BY TT.PROJECT_ID,\n" +
                        //        "          TT.BRANCH_ID,\n" +
                        //        "          TT.VOUCHER_DATE,\n" +
                        //        "          tt.voucher_id,\n" +
                        //        "          tt.pay_voucher_id,\n" +
                        //        "          tt.SORT_ID\n" +
                        //        " ORDER BY TT.PROJECT_ID,\n" +
                        //        "          TT.VOUCHER_DATE,\n" +
                        //        "          LENGTH(TT.VOUCHER_NO),\n" +
                        //        "          TT.VOUCHER_NO,\n" +
                        //        "          LENGTH(TT.PAY_VID),\n" +
                        //        "          TT.PAY_VID";

                        #endregion

                        query = "SELECT TT.VOUCHER_ID,\n" +
                                "       TT.VOUCHER_SUB_TYPE,\n" +
                                "       TT.PROJECT_ID,\n" +
                                "       TRIM(GROUP_CONCAT(TT.LEDGER_ID ORDER BY TT.sort_id DESC SEPARATOR '')) AS LEDGER_ID,\n" +
                                "       DATE(TT.VOUCHER_DATE) AS 'DATE',\n" +
                                "       TRIM(GROUP_CONCAT(TT.VOUCHER_NO ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS RECEIPT_NO,\n" +
                                "       TRIM(GROUP_CONCAT(TT.LEDGER_CODE ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS LEDGER_CODE,\n" +
                                "       TRIM(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS 'RECEIPT',\n" +
                                "       TRIM(GROUP_CONCAT(TT.REC_LEDGER_AMOUNT ORDER BY TT.sort_id DESC\n" +
                                "                         SEPARATOR ' ')) AS REC_LEDGER_AMOUNT,\n" +
                                "       SUM(TT.CASH) AS CASH,\n" +
                                "       SUM(TT.BANK) AS BANK,\n" +
                                "       TRIM(GROUP_CONCAT(TT.NARRATION ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS NARRATION,\n" +
                                "       TRIM(GROUP_CONCAT(TT.PAY_VOUCHER_ID ORDER BY TT.sort_id DESC\n" +
                                "                         SEPARATOR '')) AS PAY_VOUCHER_ID,\n" +
                                "       TT.VOUCHER_PAYMENT_SUB_TYPE,\n" +
                                "       TRIM(GROUP_CONCAT(TT.PAY_VID ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS PAY_VNO,\n" +
                                "       TRIM(GROUP_CONCAT(TT.PAY_LED_ID ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS PAY_LED_ID,\n" +
                                "       TRIM(GROUP_CONCAT(TT.PAY_CODE ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS PAY_CODE,\n" +
                                "       TRIM(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS 'PAYMENT',\n" +
                                "       TRIM(GROUP_CONCAT(TT.PAY_LEDGER_AMOUNT ORDER BY TT.sort_id DESC\n" +
                                "                         SEPARATOR ' ')) AS PAY_LEDGER_AMOUNT,\n" +
                                "       SUM(TT.PAY_CASH) AS PAY_CASH,\n" +
                                "       SUM(TT.PAY_BANK) AS PAY_BANK,\n" +
                                "       TRIM(GROUP_CONCAT(TT.NAP ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS NARRATION_PAY\n" +
                                "  FROM (SELECT VT.VOUCHER_ID,\n" +
                                "               MT.VOUCHER_SUB_TYPE,\n" +
                                "               MT.PROJECT_ID,\n" +
                                "               VT.LEDGER_ID,\n" +
                                "               GROUP_CONCAT(MT.VOUCHER_NO ORDER BY sort_id DESC SEPARATOR ' ') AS VOUCHER_NO,\n" +
                                "               GROUP_CONCAT(ML.LEDGER_CODE ORDER BY sort_id DESC SEPARATOR ' ') AS LEDGER_CODE,\n" +
                                "               @row_num := IF(@prev_value = T.voucher_date, @row_num + 1, 1) AS sort_id,\n" +
                                "               @prev_value := T.voucher_date as VOUCHER_DATE,\n" +
                                "               @rrow_num :=\n" +
                                "               IF(@rprev_value = MT.VOUCHER_ID, @rrow_num + 1, 1) AS sort_id1,\n" +
                                "               @rprev_value := MT.VOUCHER_ID as v1,\n" +
                                "               ML.LEDGER_NAME AS LEDGER_NAME,\n" +
                                "               CONCAT(CONCAT(VT.AMOUNT, ' '), VT.TRANS_MODE) AS REC_LEDGER_AMOUNT,\n" +
                                "               CASE\n" +
                                "                 WHEN (T.CASH) > 0 AND @rrow_num <> 1 THEN\n" +
                                "                  0\n" +
                                "                 ELSE\n" +
                                "                  CASE\n" +
                                "                    WHEN (T.CASH) > 0 AND @rrow_num = 1 THEN\n" +
                                "                     T.CASH\n" +
                                "                    ELSE\n" +
                                "                     0\n" +
                                "                  END\n" +
                                "               END AS CASH,\n" +
                                "               CASE\n" +
                                "                 WHEN (T.BANK > 0) AND @rrow_num <> 1 THEN\n" +
                                "                  0\n" +
                                "                 ELSE\n" +
                                "                  CASE\n" +
                                "                    WHEN (T.BANK > 0) AND @rrow_num = 1 THEN\n" +
                                "                     T.BANK\n" +
                                "                    ELSE\n" +
                                "                     0\n" +
                                "                  END\n" +
                                "               END AS BANK,\n" +
                                "               '' AS PAY_VOUCHER_ID,\n" +
                                "               MT.VOUCHER_SUB_TYPE AS VOUCHER_PAYMENT_SUB_TYPE,\n" +
                                "               '' AS PAY_VID,\n" +
                                "               '' as PAY_LED_ID,\n" +
                                "               '' AS PAY_CODE,\n" +
                                "               '' AS PAY_LEDGER,\n" +
                                "               '' AS PAY_LEDGER_AMOUNT,\n" +
                                "               0 AS PAY_CASH,\n" +
                                "               0 AS PAY_BANK,\n" +
                                "               CONCAT(IFNULL(MT.NARRATION, ''),\n" +
                                "                      IF(1 = 0,\n" +
                                "                         IF(LENGTH(IFNULL(MT.NAME_ADDRESS, '')) > 0,\n" +
                                "                            CONCAT(' -- ', MT.NAME_ADDRESS),\n" +
                                "                            ''),\n" +
                                "                         ''),\n" +
                                "                      IF(1 = 0,\n" +
                                "                         IF(LENGTH(IFNULL(T.CHEQUE_NO, '')) > 0,\n" +
                                "                            CONCAT(' -- ', T.CHEQUE_NO),\n" +
                                "                            ''),\n" +
                                "                         '')) AS NARRATION,\n" +
                                "               '' AS NAP\n" +
                                "          FROM master_ledger_GROUP LG\n" +
                                "          LEFT JOIN master_ledger ML\n" +
                                "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "          LEFT JOIN voucher_trans VT\n" +
                                "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "          LEFT JOIN voucher_master_trans MT\n" +
                                "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "          LEFT JOIN MASTER_PROJECT MP\n" +
                                "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "          JOIN (SELECT CASHBANK.VOUCHER_DATE,\n" +
                                "                      CASHBANK.VOUCHER_SUB_TYPE,\n" +
                                "                      IFNULL(MBA.ACCOUNT_NUMBER, ' ') AS ACCOUNT_NUMBER,\n" +
                                "                      CASHBANK.VOUCHER_ID,\n" +
                                "                      CASHBANK.VOUCHER_NO,\n" +
                                "                      CASHBANK.LEDGER_ID,\n" +
                                "                      SUM(CASHBANK.CASH) AS CASH,\n" +
                                "                      SUM(CASHBANK.BANK) AS BANK,\n" +
                                "                      CASHBANK.CHEQUE_NO,\n" +
                                "                      CASHBANK.LEDGER_CODE,\n" +
                                "                      CASHBANK.PROJECT_ID\n" +
                                "                 FROM (SELECT MT.VOUCHER_DATE,\n" +
                                "                              MT.VOUCHER_SUB_TYPE,\n" +
                                "                              VT.VOUCHER_ID,\n" +
                                "                              MT.VOUCHER_NO,\n" +
                                "                              VT.LEDGER_ID,\n" +
                                "                              ML.LEDGER_CODE,\n" +
                                "                              VT.CHEQUE_NO,\n" +
                                "                              CASE\n" +
                                "                                WHEN LG.GROUP_ID = 13 THEN\n" +
                                "                                 SUM(VT.AMOUNT)\n" +
                                "                                ELSE\n" +
                                "                                 0\n" +
                                "                              END AS CASH,\n" +
                                "                              CASE\n" +
                                "                                WHEN LG.GROUP_ID = 12 THEN\n" +
                                "                                 SUM(VT.AMOUNT)\n" +
                                "                                ELSE\n" +
                                "                                 0\n" +
                                "                              END AS BANK,\n" +
                                "                              MT.PROJECT_ID\n" +
                                "                         FROM MASTER_LEDGER_GROUP LG\n" +
                                "                         LEFT JOIN MASTER_LEDGER ML\n" +
                                "                           ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                         LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                           ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                         LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                           ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                          AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                          AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                         LEFT JOIN MASTER_PROJECT MP\n" +
                                "                           ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "                         LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                           ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "                        WHERE MT.VOUCHER_TYPE in ('RC') -- ,'PY'\n" +
                                "                          AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                          AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                        {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                "                        {  AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "                          and lg.group_id in (12, 13)\n" +
                                "                          AND MT.STATUS = 1\n" +
                                "                        GROUP BY MT.PROJECT_ID, VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                                "                        ORDER BY MT.PROJECT_ID,\n" +
                                "                                 MT.VOUCHER_DATE,\n" +
                                "                                 MT.VOUCHER_NO,\n" +
                                "                                 VT.SEQUENCE_NO) AS CASHBANK\n" +
                                "                 LEFT JOIN MASTER_BANK_ACCOUNT MBA\n" +
                                "                   ON MBA.LEDGER_ID = CASHBANK.LEDGER_ID\n" +
                                "                 LEFT JOIN MASTER_BANK MB\n" +
                                "                   ON MB.BANK_ID = MBA.BANK_ID\n" +
                                "                GROUP BY CASHBANK.VOUCHER_ID\n" +
                                "                ORDER BY CASHBANK.PROJECT_ID,\n" +
                                "                         CASHBANK.VOUCHER_DATE,\n" +
                                "                         CASHBANK.VOUCHER_NO) AS T\n" +
                                "            ON MT.VOUCHER_ID = T.VOUCHER_ID, (SELECT @row_num := 1) x,\n" +
                                "         (SELECT @prev_value := null) y, (SELECT @rrow_num := 1) x1,\n" +
                                "         (SELECT @rprev_value := null) y1\n" +
                                "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "          { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "           AND MT.VOUCHER_TYPE IN ('RC') -- ,'PY'\n" +
                                "           AND VT.TRANS_MODE IN ('DR', 'CR')\n" +
                                "           AND MT.STATUS = 1\n" +
                                "           AND T.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "           AND LG.GROUP_ID NOT IN (12, 13)\n" +
                                "         GROUP BY MT.PROJECT_ID,\n" +
                                "                  MT.VOUCHER_DATE,\n" +
                                "                  VT.VOUCHER_ID,\n" +
                                "                  VT.SEQUENCE_NO\n" +
                                "        UNION ALL\n" +
                                "        SELECT '' AS VOUCHER_ID,\n" +
                                "               MT.VOUCHER_SUB_TYPE,\n" +
                                "               MT.PROJECT_ID,\n" +
                                "               '' AS LEDGER_ID,\n" +
                                "               '' AS VOUCHER_NO,\n" +
                                "               '' AS LEDGER_CODE,\n" +
                                "               @row_number :=\n" +
                                "               IF(@prev_val = T.voucher_date, @row_number + 1, 1) AS sort_id,\n" +
                                "               @prev_val := T.voucher_date as VOUCHER_DATE,\n" +
                                "               @prow_num :=\n" +
                                "               IF(@pprev_value = MT.VOUCHER_ID, @prow_num + 1, 1) AS sort_id1,\n" +
                                "               @pprev_value := MT.VOUCHER_ID as v1,\n" +
                                "               '' AS LEDGER_NAME,\n" +
                                "               '' AS REC_LEDGER_AMOUNT,\n" +
                                "               0 AS CASH,\n" +
                                "               0 AS BANK,\n" +
                                "               VT.VOUCHER_ID AS PAY_VOUCHER_ID,\n" +
                                "               MT.VOUCHER_SUB_TYPE AS VOUCHER_PAYMENT_SUB_TYPE,\n" +
                                "               GROUP_CONCAT(T.VOUCHER_NO ORDER BY sort_id DESC SEPARATOR '') AS PAY_VID,\n" +
                                "               VT.LEDGER_ID as PAY_LED_ID,\n" +
                                "               GROUP_CONCAT(ML.LEDGER_CODE ORDER BY sort_id DESC SEPARATOR '') AS PAY_CODE,\n" +
                                "               GROUP_CONCAT(ML.LEDGER_NAME ORDER BY sort_id DESC SEPARATOR ' ') AS PAY_LEDGER,\n" +
                                "               CONCAT(CONCAT(VT.AMOUNT, ' '), VT.TRANS_MODE) AS PAY_LEDGER_AMOUNT,\n" +
                                "               CASE\n" +
                                "                 WHEN (T.CASH) > 0 AND @prow_num <> 1 THEN\n" +
                                "                  0\n" +
                                "                 ELSE\n" +
                                "                  CASE\n" +
                                "                    WHEN (T.CASH) > 0 AND @prow_num = 1 THEN\n" +
                                "                     T.CASH\n" +
                                "                    ELSE\n" +
                                "                     0\n" +
                                "                  END\n" +
                                "               END AS PAY_CASH,\n" +
                                "               CASE\n" +
                                "                 WHEN (T.BANK > 0) AND @prow_num <> 1 THEN\n" +
                                "                  0\n" +
                                "                 ELSE\n" +
                                "                  CASE\n" +
                                "                    WHEN (T.BANK > 0) AND @prow_num = 1 THEN\n" +
                                "                     T.BANK\n" +
                                "                    ELSE\n" +
                                "                     0\n" +
                                "                  END\n" +
                                "               END AS PAY_BANK,\n" +
                                "               '' AS NARRATION,\n" +
                                "               CONCAT(IFNULL(MT.NARRATION, ''),\n" +
                                "                      IF(1 = 0,\n" +
                                "                         IF(LENGTH(IFNULL(MT.NAME_ADDRESS, '')) > 0,\n" +
                                "                            CONCAT(' -- ', MT.NAME_ADDRESS),\n" +
                                "                            ''),\n" +
                                "                         ''),\n" +
                                "                      IF(1 = 0,\n" +
                                "                         IF(LENGTH(IFNULL(T.CHEQUE_NO, '')) > 0,\n" +
                                "                            CONCAT(' -- ', T.CHEQUE_NO),\n" +
                                "                            ''),\n" +
                                "                         '')) AS NAP\n" +
                                "          FROM MASTER_LEDGER_GROUP LG\n" +
                                "          LEFT JOIN MASTER_LEDGER ML\n" +
                                "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "          LEFT JOIN VOUCHER_TRANS VT\n" +
                                "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "          LEFT JOIN MASTER_PROJECT MP\n" +
                                "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "          JOIN (SELECT CASHBANK.VOUCHER_DATE,\n" +
                                "                       CASHBANK.VOUCHER_SUB_TYPE,\n" +
                                "                       IFNULL(MBA.ACCOUNT_NUMBER, ' ') AS ACCOUNT_NUMBER,\n" +
                                "                       CASHBANK.VOUCHER_ID,\n" +
                                "                       CASHBANK.LEDGER_ID,\n" +
                                "                       SUM(CASHBANK.CASH) AS CASH,\n" +
                                "                       SUM(CASHBANK.BANK) AS BANK,\n" +
                                "                       CASHBANK.CHEQUE_NO,\n" +
                                "                       CASHBANK.VOUCHER_NO,\n" +
                                "                       CASHBANK.LEDGER_CODE,\n" +
                                "                       CASHBANK.PROJECT_ID\n" +
                                "                  FROM (SELECT MT.VOUCHER_DATE,\n" +
                                "                               MT.VOUCHER_SUB_TYPE,\n" +
                                "                               VT.VOUCHER_ID,\n" +
                                "                               MT.VOUCHER_NO,\n" +
                                "                               ML.LEDGER_CODE,\n" +
                                "                               VT.LEDGER_ID,\n" +
                                "                               VT.CHEQUE_NO,\n" +
                                "                               CASE\n" +
                                "                                 WHEN LG.GROUP_ID = 13 THEN\n" +
                                "                                  SUM(VT.AMOUNT)\n" +
                                "                                 ELSE\n" +
                                "                                  0\n" +
                                "                               END AS CASH,\n" +
                                "                               CASE\n" +
                                "                                 WHEN LG.GROUP_ID = 12 THEN\n" +
                                "                                  SUM(VT.AMOUNT)\n" +
                                "                                 ELSE\n" +
                                "                                  0\n" +
                                "                               END AS BANK,\n" +
                                "                               MT.PROJECT_ID\n" +
                                "                          FROM MASTER_LEDGER_GROUP LG\n" +
                                "                          LEFT JOIN MASTER_LEDGER ML\n" +
                                "                            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                          LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                          LEFT JOIN MASTER_PROJECT MP\n" +
                                "                            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "                          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "                         WHERE MT.VOUCHER_TYPE IN ('PY') -- 'RC',\n" +
                                "                           AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                           AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                         {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                         {  AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "                           and lg.group_id in (12, 13)\n" +
                                "                           AND MT.STATUS = 1\n" +
                                "                         GROUP BY MT.PROJECT_ID, MT.VOUCHER_ID, VT.LEDGER_ID\n" +
                                "                         ORDER BY MT.PROJECT_ID,\n" +
                                "                                  MT.VOUCHER_DATE,\n" +
                                "                                  MT.VOUCHER_NO,\n" +
                                "                                  VT.SEQUENCE_NO) AS CASHBANK\n" +
                                "                  LEFT JOIN MASTER_BANK_ACCOUNT MBA\n" +
                                "                    ON MBA.LEDGER_ID = CASHBANK.LEDGER_ID\n" +
                                "                  LEFT JOIN MASTER_BANK MB\n" +
                                "                    ON MB.BANK_ID = MBA.BANK_ID\n" +
                                "                 GROUP BY CASHBANK.VOUCHER_ID\n" +
                                "                 ORDER BY CASHBANK.PROJECT_ID,\n" +
                                "                          CASHBANK.VOUCHER_DATE,\n" +
                                "                          CASHBANK.VOUCHER_NO) AS T\n" +
                                "            ON MT.VOUCHER_ID = T.VOUCHER_ID, (SELECT @row_number := 1) x,\n" +
                                "         (SELECT @prev_val := null) y, (SELECT @prow_num := 1) x1,\n" +
                                "         (SELECT @pprev_value := null) y1\n" +
                                "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "          { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "           AND MT.VOUCHER_TYPE IN ('PY') -- 'RC',\n" +
                                "           AND VT.TRANS_MODE IN ('CR', 'DR')\n" +
                                "           AND MT.STATUS = 1\n" +
                                "           AND T.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "           AND LG.GROUP_ID NOT IN (12, 13)\n" +
                                "         GROUP BY MT.PROJECT_ID,\n" +
                                "                  MT.VOUCHER_DATE,\n" +
                                "                  VT.VOUCHER_ID,\n" +
                                "                  VT.SEQUENCE_NO,\n" +
                                "                  ML.LEDGER_ID\n" +
                                "        UNION ALL\n" +
                                "        SELECT TT.VOUCHER_ID,\n" +
                                "               TT.VOUCHER_SUB_TYPE,\n" +
                                "               TT.PROJECT_ID,\n" +
                                "               GROUP_CONCAT(TT.LEDGER_ID ORDER BY TT.LEDGER_ID DESC\n" +
                                "                            SEPARATOR '') AS LEDGER_ID,\n" +
                                "               GROUP_CONCAT(TT.VOUCHER_NO ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                            SEPARATOR ' ') AS VOUCHER_NO,\n" +
                                "               GROUP_CONCAT(TT.LEDGER_CODE ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                            SEPARATOR ' ') AS LEDGER_CODE,\n" +
                                "               @row_numC :=\n" +
                                "               IF(@prev_valueC = TT.voucher_date, @row_numC + 1, 10000000) AS sort_id,\n" +
                                "               @prev_valueC := TT.voucher_date as VOUCHER_DATE,\n" +
                                "               @crow_num :=\n" +
                                "               IF(@cprev_value = TT.VOUCHER_ID, @row_num + 1, 1) AS sort_id1,\n" +
                                "               @cprev_value := TT.VOUCHER_ID as v1,\n" +
                                "               CASE\n" +
                                "                 WHEN IFNULL(SUM(TT.BANK), 0) > 0 AND\n" +
                                "                      IFNULL(SUM(TT.PAY_CASH), 0) > 0 THEN\n" +
                                "                  CONCAT(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                                      SEPARATOR ' '),\n" +
                                "                         '(CASH DEPOSIT)')\n" +
                                "                 WHEN IFNULL(SUM(TT.CASH), 0) > 0 AND\n" +
                                "                      IFNULL(SUM(TT.PAY_BANK), 0) > 0 THEN\n" +
                                "                  CONCAT(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                                      SEPARATOR ' '),\n" +
                                "                         '(CASH WITHDRAWAL)')\n" +
                                "                 WHEN IFNULL(SUM(TT.BANK), 0) > 0 AND\n" +
                                "                      IFNULL(SUM(TT.PAY_BANK), 0) > 0 THEN\n" +
                                "                  CONCAT(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                                      SEPARATOR ' '),\n" +
                                "                         '(BANK TRANSFER)')\n" +
                                "                 WHEN IFNULL(SUM(TT.CASH > 0), 0) AND\n" +
                                "                      IFNULL(SUM(TT.PAY_CASH), 0) > 0 THEN\n" +
                                "                  CONCAT(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                                      SEPARATOR ' '),\n" +
                                "                         '(CASH TRANSFER)')\n" +
                                "                 WHEN IFNULL(SUM(TT.BANK > 0), 0) AND\n" +
                                "                      IFNULL(SUM(TT.PAY_BANK), 0) = 0 THEN\n" +
                                "                  CONCAT(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                                      SEPARATOR ' '),\n" +
                                "                         '(FD WITHDRAWAL)')\n" +
                                "                 ELSE\n" +
                                "                  CONCAT(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                                      SEPARATOR ' '),\n" +
                                "                         ' ')\n" +
                                "               END AS LEDGER_NAME,\n" +
                                "               '' AS REC_LEDGER_AMOUNT,\n" +
                                "               SUM(TT.CASH) AS CASH,\n" +
                                "               SUM(TT.BANK) AS BANK,\n" +
                                "               GROUP_CONCAT(TT.PAY_VOUCHER_ID ORDER BY TT.PAY_VOUCHER_ID DESC\n" +
                                "                            SEPARATOR ' ') AS PAY_VOUCHER_ID,\n" +
                                "               TT.VOUCHER_SUB_TYPE AS VOUCHER_PAYMENT_SUB_TYPE,\n" +
                                "               GROUP_CONCAT(TT.PAY_VID ORDER BY TT.VOUCHER_ID DESC SEPARATOR ' ') AS PAY_VID,\n" +
                                "               GROUP_CONCAT(TT.PAY_LED_ID ORDER BY TT.PAY_LED_ID DESC\n" +
                                "                            SEPARATOR '') AS PAY_LED_ID,\n" +
                                "               GROUP_CONCAT(TT.PAY_CODE ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                            SEPARATOR ' ') AS PAY_CODE,\n" +
                                "               CASE\n" +
                                "                 WHEN IFNULL(SUM(TT.BANK), 0) > 0 AND\n" +
                                "                      IFNULL(SUM(TT.PAY_CASH), 0) > 0 THEN\n" +
                                "                  CONCAT(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                                      SEPARATOR ' '),\n" +
                                "                         '(CASH DEPOSIT)')\n" +
                                "                 WHEN IFNULL(SUM(TT.CASH), 0) > 0 AND\n" +
                                "                      IFNULL(SUM(TT.PAY_BANK), 0) > 0 THEN\n" +
                                "                  CONCAT(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                                      SEPARATOR ' '),\n" +
                                "                         '(CASH WITHDRAWAL)')\n" +
                                "                 WHEN IFNULL(SUM(TT.BANK), 0) > 0 AND\n" +
                                "                      IFNULL(SUM(TT.PAY_BANK), 0) > 0 THEN\n" +
                                "                  CONCAT(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                                      SEPARATOR ' '),\n" +
                                "                         '(BANK TRANSFER)')\n" +
                                "                 WHEN IFNULL(SUM(TT.CASH > 0), 0) AND\n" +
                                "                      IFNULL(SUM(TT.PAY_CASH), 0) > 0 THEN\n" +
                                "                  CONCAT(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                                      SEPARATOR ' '),\n" +
                                "                         '(CASH TRANSFER)')\n" +
                                "                 WHEN IFNULL(SUM(TT.PAY_BANK > 0), 0) AND\n" +
                                "                      IFNULL(SUM(TT.BANK), 0) = 0 THEN\n" +
                                "                  CONCAT(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                                      SEPARATOR ' '),\n" +
                                "                         ' (FD INVESTMENT)')\n" +
                                "                 ELSE\n" +
                                "                  CONCAT(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.VOUCHER_ID DESC\n" +
                                "                                      SEPARATOR ' '),\n" +
                                "                         ' ')\n" +
                                "               END AS PAY_LEDGER,\n" +
                                "               '' AS PAY_LEDGER_AMOUNT,\n" +
                                "               SUM(TT.PAY_CASH) AS PAY_CASH,\n" +
                                "               SUM(TT.PAY_BANK) AS PAY_BANK,\n" +
                                "               TT.NARRATION,\n" +
                                "               TT.NAP\n" +
                                "          FROM (SELECT T.VOUCHER_ID,\n" +
                                "                       T.VOUCHER_SUB_TYPE,\n" +
                                "                       T.PROJECT_ID,\n" +
                                "                       T.LEDGER_ID,\n" +
                                "                       T.LEDGER_CODE,\n" +
                                "                       T.VOUCHER_NO,\n" +
                                "                       T.VOUCHER_DATE,\n" +
                                "                       T.LEDGER_NAME,\n" +
                                "                       IFNULL(T.CASH, 0) AS CASH,\n" +
                                "                       IFNULL(T.BANK, 0) AS BANK,\n" +
                                "                       '' AS PAY_VOUCHER_ID,\n" +
                                "                       T.VOUCHER_SUB_TYPE AS VOUCHER_PAYMENT_SUB_TYPE,\n" +
                                "                       T.SEQUENCE_NO,\n" +
                                "                       '' AS PAY_VID,\n" +
                                "                       '' AS PAY_LED_ID,\n" +
                                "                       '' AS PAY_CODE,\n" +
                                "                       '' AS PAY_LEDGER,\n" +
                                "                       0 AS PAY_CASH,\n" +
                                "                       0 AS PAY_BANK,\n" +
                                "                       CONCAT(IFNULL(T.NARRATION, ''),\n" +
                                "                              IF(1 = 0,\n" +
                                "                                 IF(LENGTH(IFNULL(T.NAME_ADDRESS, '')) > 0,\n" +
                                "                                    CONCAT(' -- ', T.NAME_ADDRESS),\n" +
                                "                                    ''),\n" +
                                "                                 ''),\n" +
                                "                              IF(1 = 0,\n" +
                                "                                 IF(LENGTH(IFNULL(T.CHEQUE_NO, '')) > 0,\n" +
                                "                                    CONCAT(' -- ', T.CHEQUE_NO),\n" +
                                "                                    ''),\n" +
                                "                                 '')) AS NARRATION,\n" +
                                "                       '' AS NAP\n" +
                                "                  FROM (SELECT\n" +
                                "                         VT.VOUCHER_ID,\n" +
                                "                         MT.VOUCHER_SUB_TYPE,\n" +
                                "                         VT.BRANCH_ID,\n" +
                                "                         MT.VOUCHER_NO,\n" +
                                "                         ML.LEDGER_CODE,\n" +
                                "                         VT.TRANS_MODE,\n" +
                                "                         ML.LEDGER_NAME,\n" +
                                "                         VT.SEQUENCE_NO,\n" +
                                "                         MT.PROJECT_ID,\n" +
                                "                         VT.LEDGER_ID,\n" +
                                "                         MT.VOUCHER_DATE,\n" +
                                "                         LG.GROUP_ID,\n" +
                                "                         MT.VOUCHER_TYPE,\n" +
                                "                         CASE\n" +
                                "                           WHEN LG.GROUP_ID IN (12, 14) THEN\n" +
                                "                            IFNULL(VT.AMOUNT, 0)\n" +
                                "                         END AS BANK,\n" +
                                "                         CASE\n" +
                                "                           WHEN LG.GROUP_ID = 13 THEN\n" +
                                "                            IFNULL(VT.AMOUNT, 0)\n" +
                                "                         END AS CASH,\n" +
                                "                         MT.NARRATION,\n" +
                                "                         MT.NAME_ADDRESS,\n" +
                                "                         VT.CHEQUE_NO\n" +
                                "                          FROM MASTER_LEDGER_GROUP LG\n" +
                                "                          LEFT JOIN MASTER_LEDGER ML\n" +
                                "                            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                          LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                          LEFT JOIN MASTER_PROJECT MP\n" +
                                "                            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "                          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "                         WHERE VT.TRANS_MODE = 'DR'\n" +
                                "                           AND MT.VOUCHER_TYPE = 'CN'\n" +
                                "                           AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                         {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                         {  AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "                           AND MT.STATUS = 1\n" +
                                "                           AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                         ORDER BY VT.VOUCHER_ID ASC) AS T\n" +
                                "                 WHERE T.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                 {  AND T.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                   AND T.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                   AND T.GROUP_ID IN (12, 13)\n" +
                                "                   AND T.VOUCHER_TYPE = 'CN'\n" +
                                "                 GROUP BY T.PROJECT_ID,\n" +
                                "                          T.VOUCHER_DATE,\n" +
                                "                          T.VOUCHER_ID,\n" +
                                "                          T.LEDGER_ID\n" +
                                "                UNION\n" +
                                "                SELECT T.VOUCHER_ID AS VOUCHER_ID,\n" +
                                "                       T.VOUCHER_SUB_TYPE,\n" +
                                "                       T.PROJECT_ID,\n" +
                                "                       '' AS LEDGER_ID,\n" +
                                "                       '' AS LEDGER_CODE,\n" +
                                "                       '' AS VOUCHER_NO,\n" +
                                "                       T.VOUCHER_DATE,\n" +
                                "                       '' AS LEDGER_NAME,\n" +
                                "                       0 AS CASH,\n" +
                                "                       0 AS BANK,\n" +
                                "                       T.VOUCHER_ID AS PAY_VOUCHER_ID,\n" +
                                "                       T.VOUCHER_SUB_TYPE AS VOUCHER_PAYMENT_SUB_TYPE,\n" +
                                "                       T.SEQUENCE_NO,\n" +
                                "                       T.VOUCHER_NO AS PAY_VID,\n" +
                                "                       T.LEDGER_ID AS PAY_LED_ID,\n" +
                                "                       T.LEDGER_CODE AS PAY_CODE,\n" +
                                "                       T.LEDGER_NAME AS PAY_LEDGER,\n" +
                                "                       SUM(IFNULL(T.CASH, 0)) AS PAY_CASH,\n" +
                                "                       SUM(IFNULL(T.BANK, 0)) AS PAY_BANK,\n" +
                                "                       '' AS NARRATION,\n" +
                                "                       CONCAT(IFNULL(T.NARRATION, ''),\n" +
                                "                              IF(1 = 0,\n" +
                                "                                 IF(LENGTH(IFNULL(T.NAME_ADDRESS, '')) > 0,\n" +
                                "                                    CONCAT(' -- ', T.NAME_ADDRESS),\n" +
                                "                                    ''),\n" +
                                "                                 ''),\n" +
                                "                              IF(1 = 0,\n" +
                                "                                 IF(LENGTH(IFNULL(T.CHEQUE_NO, '')) > 0,\n" +
                                "                                    CONCAT(' -- ', T.CHEQUE_NO),\n" +
                                "                                    ''),\n" +
                                "                                 '')) AS NAP\n" +
                                "                  FROM (SELECT VT.VOUCHER_ID,\n" +
                                "                               MT.VOUCHER_SUB_TYPE,\n" +
                                "                               VT.BRANCH_ID,\n" +
                                "                               ML.LEDGER_CODE,\n" +
                                "                               MT.VOUCHER_NO,\n" +
                                "                               VT.TRANS_MODE,\n" +
                                "                               ML.LEDGER_NAME,\n" +
                                "                               VT.SEQUENCE_NO,\n" +
                                "                               MT.PROJECT_ID,\n" +
                                "                               VT.LEDGER_ID,\n" +
                                "                               MT.VOUCHER_DATE,\n" +
                                "                               LG.GROUP_ID,\n" +
                                "                               MT.VOUCHER_TYPE,\n" +
                                "                               CASE\n" +
                                "                                 WHEN LG.GROUP_ID IN (12, 14) THEN\n" +
                                "                                  IFNULL(VT.AMOUNT, 0)\n" +
                                "                               END AS BANK,\n" +
                                "                               CASE\n" +
                                "                                 WHEN LG.GROUP_ID = 13 THEN\n" +
                                "                                  IFNULL(VT.AMOUNT, 0)\n" +
                                "                               END AS CASH,\n" +
                                "                               MT.NARRATION,\n" +
                                "                               MT.NAME_ADDRESS,\n" +
                                "                               VT.CHEQUE_NO\n" +
                                "                          FROM MASTER_LEDGER_GROUP LG\n" +
                                "                          LEFT JOIN MASTER_LEDGER ML\n" +
                                "                            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                          LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                          LEFT JOIN MASTER_PROJECT MP\n" +
                                "                            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "                          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "                         WHERE VT.TRANS_MODE = 'CR'\n" +
                                "                           AND MT.VOUCHER_TYPE = 'CN'\n" +
                                "                           AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                         {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                         {  AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "                           AND MT.STATUS = 1\n" +
                                "                           AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                         ORDER BY VT.VOUCHER_ID ASC) AS T\n" +
                                "                 WHERE T.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                  { AND T.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                   AND T.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                   AND T.GROUP_ID IN (12, 13)\n" +
                                "                   AND T.VOUCHER_TYPE = 'CN'\n" +
                                "                 GROUP BY T.PROJECT_ID,\n" +
                                "                          T.VOUCHER_DATE,\n" +
                                "                          T.VOUCHER_ID,\n" +
                                "                          T.LEDGER_ID) AS TT,\n" +
                                "               (SELECT @row_numC := 1000000) x,\n" +
                                "               (SELECT @prev_valueC := null) y,\n" +
                                "               (SELECT @crow_num := 1) x1,\n" +
                                "               (SELECT @cprev_value := null) y1\n" +
                                "         GROUP BY TT.VOUCHER_DATE, tt.VOUCHER_ID -- , tt.sequence_no\n" +
                                "        ) AS TT\n" +
                                " GROUP BY TT.PROJECT_ID,\n" +
                                "          TT.VOUCHER_DATE,\n" +
                                "          tt.voucher_id,\n" +
                                "          tt.pay_voucher_id,\n" +
                                "          tt.SORT_ID\n" +
                                " ORDER BY TT.PROJECT_ID,\n" +
                                "          TT.VOUCHER_DATE,\n" +
                                "          LENGTH(TT.VOUCHER_NO),\n" +
                                "          TT.VOUCHER_NO,\n" +
                                "          LENGTH(TT.PAY_VID),\n" +
                                "          TT.PAY_VID";
                        break;
                    }
                #endregion

                #region Cash Journal
                case ReportSQLCommand.BankReport.CashJournal:
                    {
                        // Updated on 31-7-2015 
                        query = "SELECT MT.VOUCHER_ID,\n" +
                                "       MT.BRANCH_ID,\n" +
                                "       MT.VOUCHER_SUB_TYPE,\n" +
                                "       MT.VOUCHER_DATE AS DATE,\n" +
                                "       MT.VOUCHER_NO,\n" +
                                "       ML.LEDGER_CODE,\n" +
                                "       CHEQUE_NO,\n" +
                                "       ML.LEDGER_NAME AS LEDGER,\n" +
                                "       @rrow_num := IF(@rprev_value = MT.VOUCHER_ID, @rrow_num + 1, 1) AS sort_id1,\n" +
                                "       @rprev_value := MT.VOUCHER_ID as v1,\n" +
                                "       CASE\n" +
                                "         WHEN (T.CASH) > 0 AND @rrow_num <> 1 OR MT.VOUCHER_TYPE = 'PY' THEN\n" +
                                "          0\n" +
                                "         ELSE\n" +
                                "          CASE\n" +
                                "            WHEN (T.CASH) > 0 AND @rrow_num = 1 THEN\n" +
                                "             T.CASH\n" +
                                "            ELSE\n" +
                                "             0\n" +
                                "          END\n" +
                                "       END AS RECEIPT,\n" +
                                "       0 AS PAYMENT,\n" +
                                "       MT.NARRATION\n" +
                                "\n" +
                                "  FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "  LEFT JOIN MASTER_LEDGER ML\n" +
                                "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "\n" +
                                "   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "\n" +
                                "  JOIN (SELECT CASHBANK.VOUCHER_ID,\n" +
                                "               CASHBANK.BRANCH_ID,\n" +
                                "               CASHBANK.VOUCHER_SUB_TYPE,\n" +
                                "               CASHBANK.LEDGER_ID,\n" +
                                "               CASHBANK.CASH,\n" +
                                "               CASHBANK.LEDGER_CODE\n" +
                                "          FROM (SELECT VT.VOUCHER_ID,\n" +
                                "                       VT.BRANCH_ID,\n" +
                                "                       MT.VOUCHER_SUB_TYPE,\n" +
                                "                       VT.LEDGER_ID,\n" +
                                "                       ML.LEDGER_CODE,\n" +
                                "                       CASE\n" +
                                "                         WHEN LG.GROUP_ID = 13 THEN\n" +
                                "                          SUM(VT.AMOUNT)\n" +
                                "                         ELSE\n" +
                                "                          0\n" +
                                "                       END AS CASH\n" +
                                "\n" +
                                "                  FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "                  LEFT JOIN MASTER_LEDGER ML\n" +
                                "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "\n" +
                                "                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                  LEFT JOIN MASTER_PROJECT MP\n" +
                                "                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "\n" +
                                "                 WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                                "                   AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "\n" +
                                "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                {   AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                {   AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "                   and lg.group_id in (13)\n" +
                                "                   AND MT.STATUS = 1\n" +
                                "                 GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                                "                 ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                                "         GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                                "    ON MT.VOUCHER_ID = T.VOUCHER_ID, (SELECT @rrow_num := 1) x1,\n" +
                                " (SELECT @rprev_value := null) y1\n" +
                                " WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "   AND MT.VOUCHER_TYPE IN ('RC')\n" +
                                "   AND VT.TRANS_MODE IN ('CR', 'DR')\n" +
                                "   AND MT.STATUS = 1\n" +
                                "\n" +
                                "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "   AND LG.GROUP_ID NOT IN (13, 12, 14)\n" +
                                " GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID\n" +
                                "\n" +
                                "UNION ALL\n" +
                                "\n" +
                                "SELECT MT.VOUCHER_ID,\n" +
                                "       MT.BRANCH_ID,\n" +
                                "       MT.VOUCHER_SUB_TYPE,\n" +
                                "       MT.VOUCHER_DATE AS DATE,\n" +
                                "       MT.VOUCHER_NO,\n" +
                                "       ML.LEDGER_CODE,\n" +
                                "       CHEQUE_NO,\n" +
                                "       ML.LEDGER_NAME,\n" +
                                "\n" +
                                "       @prow_num := IF(@pprev_value = MT.VOUCHER_NO, @prow_num + 1, 1) AS sort_id1,\n" +
                                "       @pprev_value := MT.VOUCHER_ID as v1,\n" +
                                "       0 AS RECEIPT,\n" +
                                "       CASE\n" +
                                "         WHEN (T.CASH) > 0 AND @prow_num <> 1 OR MT.VOUCHER_TYPE = 'RC' THEN\n" +
                                "          0\n" +
                                "         ELSE\n" +
                                "          CASE\n" +
                                "            WHEN (T.CASH) > 0 AND @prow_num = 1 THEN\n" +
                                "             T.CASH\n" +
                                "            ELSE\n" +
                                "             0\n" +
                                "          END\n" +
                                "       END AS PAYMENT,\n" +
                                "       MT.NARRATION\n" +
                                "\n" +
                                "  FROM master_ledger_GROUP LG\n" +
                                "\n" +
                                "  LEFT JOIN master_ledger ML\n" +
                                "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "  LEFT JOIN voucher_trans VT\n" +
                                "    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "  LEFT JOIN voucher_master_trans MT\n" +
                                "    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "\n" +
                                "   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "\n" +
                                "  JOIN (SELECT CASHBANK.VOUCHER_ID,\n" +
                                "               CASHBANK.BRANCH_ID,\n" +
                                "               CASHBANK.VOUCHER_SUB_TYPE,\n" +
                                "               CASHBANK.LEDGER_ID,\n" +
                                "               CASHBANK.CASH AS CASH,\n" +
                                "\n" +
                                "               CASHBANK.LEDGER_CODE\n" +
                                "          FROM (SELECT VT.VOUCHER_ID,\n" +
                                "                       VT.BRANCH_ID,\n" +
                                "                       MT.VOUCHER_SUB_TYPE,\n" +
                                "                       VT.LEDGER_ID,\n" +
                                "                       ML.LEDGER_CODE,\n" +
                                "                       CASE\n" +
                                "                         WHEN LG.GROUP_ID = 13 THEN\n" +
                                "                          SUM(VT.AMOUNT)\n" +
                                "                         ELSE\n" +
                                "                          0\n" +
                                "                       END AS CASH\n" +
                                "\n" +
                                "                  FROM master_ledger_GROUP LG\n" +
                                "\n" +
                                "                  LEFT JOIN master_ledger ML\n" +
                                "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                  LEFT JOIN voucher_trans VT\n" +
                                "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                  LEFT JOIN voucher_master_trans MT\n" +
                                "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "\n" +
                                "                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                  LEFT JOIN MASTER_PROJECT MP\n" +
                                "                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "\n" +
                                "                 WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                                "                   AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "\n" +
                                "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                 {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                 {  AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "                   and lg.group_id in (13)\n" +
                                "                   AND MT.STATUS = 1\n" +
                                "                 GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                                "                 ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                                "         GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                                "    ON MT.VOUCHER_ID = T.VOUCHER_ID, (SELECT @prow_num := 1) x1,\n" +
                                " (SELECT @pprev_value := null) y1\n" +
                                "\n" +
                                " WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "   AND MT.VOUCHER_TYPE IN ('PY')\n" +
                                "   AND VT.TRANS_MODE IN ('CR', 'DR')\n" +
                                "   AND MT.STATUS = 1\n" +
                                "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "   AND LG.GROUP_ID NOT IN (13, 12, 14)\n" +
                                " GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID\n" +
                                "UNION\n" +
                                "SELECT MT.VOUCHER_ID,\n" +
                                "       MT.BRANCH_ID,\n" +
                                "       MT.VOUCHER_SUB_TYPE,\n" +
                                "       MT.VOUCHER_DATE AS DATE,\n" +
                                "       MT.VOUCHER_NO,\n" +
                                "       ML.LEDGER_CODE,\n" +
                                "       CHEQUE_NO,\n" +
                                "       CASE\n" +
                                "         WHEN IFNULL(SUM(VT.AMOUNT), 0) > 0 THEN\n" +
                                "          CONCAT(GROUP_CONCAT(ML.LEDGER_NAME ORDER BY VT.VOUCHER_ID DESC\n" +
                                "                              SEPARATOR ' '),\n" +
                                "                 ' (CASH DEPOSIT) ')\n" +
                                "         ELSE\n" +
                                "          ML.LEDGER_NAME\n" +
                                "       END AS LEDGER,\n" +
                                "       0 AS sort_id1,\n" +
                                "       0 AS V1,\n" +
                                "       0 AS RECEIPT,\n" +
                                "       IFNULL(SUM(VT.AMOUNT), 0) AS PAYMENT,\n" +
                                "       MT.NARRATION\n" +
                                "\n" +
                                "  FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "  LEFT JOIN MASTER_LEDGER ML\n" +
                                "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "\n" +
                                "  JOIN (SELECT CASHBANK.VOUCHER_ID,\n" +
                                "               CASHBANK.BRANCH_ID,\n" +
                                "               CASHBANK.VOUCHER_SUB_TYPE,\n" +
                                "               CASHBANK.LEDGER_ID,\n" +
                                "               CASHBANK.CASH_FLAG,\n" +
                                "               CASHBANK.BANK_FLAG,\n" +
                                "               CASHBANK.LEDGER_CODE\n" +
                                "          FROM (SELECT VT.VOUCHER_ID,\n" +
                                "                       VT.BRANCH_ID,\n" +
                                "                       MT.VOUCHER_SUB_TYPE,\n" +
                                "                       VT.LEDGER_ID,\n" +
                                "                       ML.LEDGER_CODE,\n" +
                                "                       CASE\n" +
                                "                         WHEN LG.GROUP_ID = 13 THEN\n" +
                                "                          1\n" +
                                "                         ELSE\n" +
                                "                          0\n" +
                                "                       END AS CASH_FLAG,\n" +
                                "                       CASE\n" +
                                "                         WHEN LG.GROUP_ID IN (12) THEN\n" +
                                "                          1\n" +
                                "                         ELSE\n" +
                                "                          0\n" +
                                "                       END AS BANK_FLAG\n" +
                                "\n" +
                                "                  FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "                  LEFT JOIN MASTER_LEDGER ML\n" +
                                "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "\n" +
                                "                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                  LEFT JOIN MASTER_PROJECT MP\n" +
                                "                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "                 WHERE MT.VOUCHER_TYPE IN ('CN')\n" +
                                "                   AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "\n" +
                                "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                {   AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                {   AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "                   and lg.group_id in (13)\n" +
                                "                   AND MT.STATUS = 1\n" +
                                "                 GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                                "                 ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                                "         GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                                "    ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                                " WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "   AND MT.VOUCHER_TYPE IN ('CN')\n" +
                                "   AND VT.TRANS_MODE = 'CR'\n" +
                                "   AND MT.STATUS = 1\n" +
                                "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "   AND LG.GROUP_ID NOT IN (12, 14)\n" +
                                " GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID\n" +
                                "UNION\n" +
                                "SELECT MT.VOUCHER_ID,\n" +
                                "       VT.BRANCH_ID,\n" +
                                "       MT.VOUCHER_SUB_TYPE,\n" +
                                "       MT.VOUCHER_DATE AS DATE,\n" +
                                "       MT.VOUCHER_NO,\n" +
                                "       ML.LEDGER_CODE,\n" +
                                "       CHEQUE_NO,\n" +
                                "       CASE\n" +
                                "         WHEN IFNULL(SUM(VT.AMOUNT), 0) > 0 THEN\n" +
                                "          CONCAT(GROUP_CONCAT(ML.LEDGER_NAME ORDER BY VT.VOUCHER_ID DESC\n" +
                                "                              SEPARATOR ' '),\n" +
                                "                 ' (CASH WITHDRAWAL) ')\n" +
                                "         ELSE\n" +
                                "          ML.LEDGER_NAME\n" +
                                "       END AS LEDGER,\n" +
                                "       0 AS sort_id1,\n" +
                                "       0 AS V1,\n" +
                                "       IFNULL(SUM(VT.AMOUNT), 0) AS RECEIPT,\n" +
                                "       0 AS PAYMENT,\n" +
                                "       MT.NARRATION\n" +
                                "\n" +
                                "  FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "  LEFT JOIN MASTER_LEDGER ML\n" +
                                "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "\n" +
                                "  JOIN (SELECT CASHBANK.VOUCHER_ID,\n" +
                                "               CASHBANK.BRANCH_ID,\n" +
                                "               CASHBANK.VOUCHER_SUB_TYPE,\n" +
                                "               CASHBANK.LEDGER_ID,\n" +
                                "               CASHBANK.CASH_FLAG,\n" +
                                "               CASHBANK.BANK_FLAG,\n" +
                                "               CASHBANK.LEDGER_CODE\n" +
                                "          FROM (SELECT VT.VOUCHER_ID,\n" +
                                "                       VT.BRANCH_ID,\n" +
                                "                       MT.VOUCHER_SUB_TYPE,\n" +
                                "                       VT.LEDGER_ID,\n" +
                                "                       ML.LEDGER_CODE,\n" +
                                "                       CASE\n" +
                                "                         WHEN LG.GROUP_ID = 13 THEN\n" +
                                "                          1\n" +
                                "                         ELSE\n" +
                                "                          0\n" +
                                "                       END AS CASH_FLAG,\n" +
                                "                       CASE\n" +
                                "                         WHEN LG.GROUP_ID IN (12) THEN\n" +
                                "                          1\n" +
                                "                         ELSE\n" +
                                "                          0\n" +
                                "                       END AS BANK_FLAG\n" +
                                "                  FROM MASTER_LEDGER_GROUP LG\n" +
                                "                  LEFT JOIN MASTER_LEDGER ML\n" +
                                "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                  LEFT JOIN MASTER_PROJECT MP\n" +
                                "                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "\n" +
                                "                 WHERE MT.VOUCHER_TYPE IN ('CN')\n" +
                                "\n" +
                                "                   AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                 {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                 {  AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "                   and lg.group_id in (13)\n" +
                                "                   AND MT.STATUS = 1\n" +
                                "                 GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                                "                 ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                                "         GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                                "    ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                                " WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "   AND MT.VOUCHER_TYPE IN ('CN')\n" +
                                "   AND VT.TRANS_MODE = 'DR'\n" +
                                "   AND MT.STATUS = 1\n" +
                                "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "   AND LG.GROUP_ID NOT IN (12, 14)\n" +
                                " GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID\n" +
                                " ORDER BY VOUCHER_NO";
                        break;
                    }

                #endregion

                #region Bank Journal
                case ReportSQLCommand.BankReport.BankJournal:
                    {
                        #region new query
                        query = "SELECT MT.VOUCHER_ID,MT.BRANCH_ID,\n" +
                                "       MT.VOUCHER_SUB_TYPE,\n" +
                                "       MT.VOUCHER_DATE AS DATE,\n" +
                                "       MT.VOUCHER_NO,\n" +
                                "       ML.LEDGER_CODE,\n" +
                                "       CHT.CHEQUE_NO,\n" +
                                "       CASE\n" +
                                "         WHEN 1 = 1 THEN\n" +
                                "          ML.LEDGER_NAME\n" +
                                "         ELSE\n" +
                                "          CONCAT(CONCAT(ML.LEDGER_NAME, ' - '), CHT.CASHBANK_LEDGER)\n" +
                                "       END AS LEDGER,\n" +
                                "       @rrow_num := IF(@rprev_value = MT.VOUCHER_ID, @rrow_num + 1, 1) AS sort_id1,\n" +
                                "       @rprev_value := MT.VOUCHER_ID as v1,\n" +
                                "       CASE\n" +
                                "         WHEN (T.BANK) > 0 AND @rrow_num <> 1 THEN\n" +
                                "          0\n" +
                                "         ELSE\n" +
                                "          CASE\n" +
                                "            WHEN (T.BANK) > 0 AND @rrow_num = 1 THEN\n" +
                                "             T.BANK\n" +
                                "            ELSE\n" +
                                "             0\n" +
                                "          END\n" +
                                "       END AS RECEIPT,\n" +
                                "       0 AS PAYMENT,\n" +
                                "       MT.NARRATION\n" +
                                "\n" +
                                "  FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "  LEFT JOIN MASTER_LEDGER ML\n" +
                                "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "    ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                "\n" +
                                "  JOIN (SELECT CASHBANK.VOUCHER_ID,CASHBANK.BRANCH_ID,\n" +
                                "               CASHBANK.VOUCHER_SUB_TYPE,\n" +
                                "               CASHBANK.LEDGER_ID,\n" +
                                "               CASHBANK.BANK,\n" +
                                "               CASHBANK.LEDGER_CODE\n" +
                                "          FROM (SELECT VT.VOUCHER_ID,VT.BRANCH_ID,\n" +
                                "                       MT.VOUCHER_SUB_TYPE,\n" +
                                "                       VT.LEDGER_ID,\n" +
                                "                       ML.LEDGER_CODE,\n" +
                                "                       CASE\n" +
                                "                         WHEN LG.GROUP_ID = 12 THEN\n" +
                                "                          SUM(VT.AMOUNT)\n" +
                                "                         ELSE\n" +
                                "                          0\n" +
                                "                       END AS BANK\n" +
                                "                  FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "                  LEFT JOIN MASTER_LEDGER ML\n" +
                                "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                  LEFT JOIN MASTER_PROJECT MP\n" +
                                "                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                    ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                "                 WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                                "\n" +
                                "                   AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND  ?DATE_TO\n" +
                                "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                   AND ML.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "                   and lg.group_id in (12, 14)\n" +
                                "               {    AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "               {    AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "                   AND MT.STATUS = 1\n" +
                                "                 GROUP BY VT.VOUCHER_ID,VT.LOCATION_ID\n" +
                                "                 ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                                "         GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                                "    ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                                "\n" +
                                "  JOIN (SELECT VT.VOUCHER_ID,VT.BRANCH_ID,\n" +
                                "               VT.CHEQUE_NO,\n" +
                                "               ML.LEDGER_NAME AS CASHBANK_LEDGER\n" +
                                "\n" +
                                "          FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "          LEFT JOIN MASTER_LEDGER ML\n" +
                                "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "          LEFT JOIN VOUCHER_TRANS VT\n" +
                                "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "          LEFT JOIN MASTER_PROJECT MP\n" +
                                "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "            ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                "         WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                                "\n" +
                                "           AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +

                                "           AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "           AND ML.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "           and lg.group_id in (12, 14)\n" +
                                "        {   AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "        {   AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "           AND MT.STATUS = 1\n" +
                                "         GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                                "         ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CHT\n" +
                                "    ON CHT.VOUCHER_ID = MT.VOUCHER_ID, (SELECT @rrow_num := 1) x1,\n" +
                                " (SELECT @rprev_value := null) y1\n" +
                                " WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "   AND MT.VOUCHER_TYPE IN ('RC')\n" +
                                "   AND VT.TRANS_MODE IN ('CR', 'DR')\n" +
                                "   AND MT.STATUS = 1\n" +
                                "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "   AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                                " GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                                "\n" +
                                "UNION ALL\n" +
                                "\n" +
                                "SELECT MT.VOUCHER_ID,MT.BRANCH_ID,\n" +
                                "       MT.VOUCHER_SUB_TYPE,\n" +
                                "       MT.VOUCHER_DATE AS DATE,\n" +
                                "       MT.VOUCHER_NO,\n" +
                                "       ML.LEDGER_CODE,\n" +
                                "       CHT.CHEQUE_NO,\n" +
                                "       CASE\n" +
                                "         WHEN 1 = 1 THEN\n" +
                                "          ML.LEDGER_NAME\n" +
                                "         ELSE\n" +
                                "          CONCAT(ML.LEDGER_NAME, ' - ', CHT.CASHBANK_LEDGER)\n" +
                                "       END AS LEDGER_NAME,\n" +
                                "       @prow_num := IF(@pprev_value = MT.VOUCHER_ID, @prow_num + 1, 1) AS sort_id1,\n" +
                                "       @pprev_value := MT.VOUCHER_ID as v1,\n" +
                                "       0 AS RECEIPT,\n" +
                                "       CASE\n" +
                                "         WHEN (T.BANK) > 0 AND @prow_num <> 1 THEN\n" +
                                "          0\n" +
                                "         ELSE\n" +
                                "          CASE\n" +
                                "            WHEN (T.BANK) > 0 AND @prow_num = 1 THEN\n" +
                                "             T.BANK\n" +
                                "            ELSE\n" +
                                "             0\n" +
                                "          END\n" +
                                "       END AS PAYMENT,\n" +
                                "       MT.NARRATION\n" +
                                "\n" +
                                "  FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "  LEFT JOIN MASTER_LEDGER ML\n" +
                                "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "    ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                "\n" +
                                "  JOIN (SELECT CASHBANK.VOUCHER_ID,CASHBANK.BRANCH_ID,\n" +
                                "               CASHBANK.VOUCHER_SUB_TYPE,\n" +
                                "               CASHBANK.LEDGER_ID,\n" +
                                "               CASHBANK.BANK,\n" +
                                "               CASHBANK.LEDGER_CODE\n" +
                                "          FROM (SELECT VT.VOUCHER_ID,VT.BRANCH_ID,\n" +
                                "                       MT.VOUCHER_SUB_TYPE,\n" +
                                "                       VT.LEDGER_ID,\n" +
                                "                       ML.LEDGER_CODE,\n" +
                                "                       CASE\n" +
                                "                         WHEN LG.GROUP_ID = 12 THEN\n" +
                                "                          SUM(VT.AMOUNT)\n" +
                                "                         ELSE\n" +
                                "                          0\n" +
                                "                       END AS BANK\n" +
                                "                  FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "                  LEFT JOIN MASTER_LEDGER ML\n" +
                                "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                  AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                  LEFT JOIN MASTER_PROJECT MP\n" +
                                "                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                    ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                "                 WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                                "                   AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                   AND LG.GROUP_ID in (12, 14)\n" +
                                "                   AND ML.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "               {    AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "               {    AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                   AND MT.STATUS = 1\n" +
                                "                 GROUP BY VT.VOUCHER_ID\n" +
                                "                 ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                                "         GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                                "    ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                                "\n" +
                                "  JOIN (SELECT VT.VOUCHER_ID,VT.BRANCH_ID,\n" +
                                "               VT.CHEQUE_NO,\n" +
                                "               ML.LEDGER_NAME AS CASHBANK_LEDGER\n" +
                                "\n" +
                                "          FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "          LEFT JOIN MASTER_LEDGER ML\n" +
                                "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "          LEFT JOIN VOUCHER_TRANS VT\n" +
                                "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "          LEFT JOIN MASTER_PROJECT MP\n" +
                                "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "            ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                "         WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                                "\n" +
                                "           AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "           AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "           AND ML.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "        {   AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "        {   AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "           and lg.group_id in (12, 14)\n" +
                                "           AND MT.STATUS = 1\n" +
                                "         GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                                "         ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CHT\n" +
                                "    ON CHT.VOUCHER_ID = MT.VOUCHER_ID, (SELECT @prow_num := 1) x1,\n" +
                                " (SELECT @pprev_value := null) y1\n" +
                                " WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "   AND MT.VOUCHER_TYPE IN ('PY')\n" +
                                "   AND VT.TRANS_MODE IN ('CR', 'DR')\n" +
                                "   AND MT.STATUS = 1\n" +
                                "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "   AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                                " GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                                "UNION ALL\n" +
                                "SELECT MT.VOUCHER_ID,MT.BRANCH_ID,\n" +
                                "       MT.VOUCHER_SUB_TYPE,\n" +
                                "       MT.VOUCHER_DATE AS DATE,\n" +
                                "       MT.VOUCHER_NO,\n" +
                                "       ML.LEDGER_CODE,\n" +
                                "       CHEQUE_NO,\n" +
                                "\n" +
                                "       CASE\n" +
                                "         WHEN IFNULL(SUM(VT.AMOUNT), 0) > 0 AND VT.TRANS_MODE = 'CR' AND\n" +
                                "              MT.VOUCHER_SUB_TYPE = 'FD' AND ML.GROUP_ID = 12 THEN\n" +
                                "          CONCAT(GROUP_CONCAT(ML.LEDGER_NAME ORDER BY VT.VOUCHER_ID DESC\n" +
                                "                              SEPARATOR ' '),\n" +
                                "                 ' (FD INVESTMENT) ')\n" +
                                "         WHEN IFNULL(SUM(VT.AMOUNT), 0) > 0 AND VT.TRANS_MODE = 'DR' AND\n" +
                                "              MT.VOUCHER_SUB_TYPE = 'FD' AND ML.GROUP_ID = 12 THEN\n" +
                                "          CONCAT(GROUP_CONCAT(ML.LEDGER_NAME ORDER BY VT.VOUCHER_ID DESC\n" +
                                "                              SEPARATOR ' '),\n" +
                                "                 ' (FD WITHDRAWAL) ')\n" +
                                "\n" +
                                "         ELSE\n" +
                                "          CONCAT(CONCAT(CONCAT(CONCAT(ML.LEDGER_NAME, ' - '), MB.BANK),\n" +
                                "                        ' - '),\n" +
                                "                 MB.BRANCH)\n" +
                                "       END AS LEDGER_NAME,\n" +
                                "       0 AS sort_id1,\n" +
                                "       0 AS V1,\n" +
                                "       CASE\n" +
                                "         WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "          IFNULL(SUM(VT.AMOUNT), 0)\n" +
                                "       END AS RECEIPT,\n" +
                                "       CASE\n" +
                                "         WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                                "          IFNULL(SUM(VT.AMOUNT), 0)\n" +
                                "       END AS PAYMENT,\n" +
                                "       MT.NARRATION\n" +
                                "\n" +
                                "  FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "  LEFT JOIN MASTER_LEDGER ML\n" +
                                "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "    ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_BANK_ACCOUNT MBA\n" +
                                "    ON MBA.LEDGER_ID = VT.LEDGER_ID\n" +
                                "  LEFT JOIN MASTER_BANK MB\n" +
                                "    ON MB.BANK_ID = MBA.BANK_ID\n" +
                                "  JOIN (SELECT CASHBANK.VOUCHER_ID,CASHBANK.BRANCH_ID,\n" +
                                "               CASHBANK.VOUCHER_SUB_TYPE,\n" +
                                "               CASHBANK.LEDGER_ID,\n" +
                                "               CASHBANK.CASH_FLAG,\n" +
                                "               CASHBANK.BANK_FLAG,\n" +
                                "               CASHBANK.LEDGER_CODE\n" +
                                "          FROM (SELECT VT.VOUCHER_ID,VT.BRANCH_ID,\n" +
                                "                       MT.VOUCHER_SUB_TYPE,\n" +
                                "                       VT.LEDGER_ID,\n" +
                                "                       ML.LEDGER_CODE,\n" +
                                "                       CASE\n" +
                                "                         WHEN LG.GROUP_ID = 13 THEN\n" +
                                "                          1\n" +
                                "                         ELSE\n" +
                                "                          0\n" +
                                "                       END AS CASH_FLAG,\n" +
                                "                       CASE\n" +
                                "                         WHEN LG.GROUP_ID IN (12, 14) THEN\n" +
                                "                          1\n" +
                                "                         ELSE\n" +
                                "                          0\n" +
                                "                       END AS BANK_FLAG\n" +
                                "\n" +
                                "                  FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "                  LEFT JOIN MASTER_LEDGER ML\n" +
                                "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                  LEFT JOIN MASTER_PROJECT MP\n" +
                                "                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                    ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                "                 WHERE MT.VOUCHER_TYPE IN ('CN')\n" +
                                "                   AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                   AND LG.GROUP_ID in (12, 14)\n" +
                                "             {      AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "             {      AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "                   AND ML.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "                   AND MT.STATUS = 1\n" +
                                "                 GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                                "                 ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                                "         GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                                "    ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                                "\n" +
                                " WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "   AND MT.VOUCHER_TYPE IN ('CN')\n" +
                                "   AND VT.TRANS_MODE IN ('DR', 'CR')\n" +
                                "   AND MT.STATUS = 1\n" +
                                "   AND ML.LEDGER_ID IN (?LEDGER_ID)\n" +
                            //       " {  AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                " {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "   AND LG.GROUP_ID NOT IN (13)\n" +
                                " GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                                " ORDER BY VOUCHER_NO";

                        #endregion


                        break;
                    }
                #endregion

                #region Bank Flow
                case ReportSQLCommand.BankReport.BankFlow:
                    {
                        query = "SELECT TT.VOUCHER_ID,\n" +
                           "       TT.VOUCHER_DATE AS DATE,\n" +
                           "       SUM(REC_IN) AS 'IN_FLOW',\n" +
                           "       SUM(PAY_OUT) AS 'OUT_FLOW'\n" +
                           "  FROM (SELECT MT.VOUCHER_ID,\n" +
                           "               MT.VOUCHER_DATE,\n" +
                           "              IFNULL(T.AMOUNT, 0) AS REC_IN,\n" +
                           "               0.00 AS PAY_OUT\n" +
                           "          FROM master_ledger_GROUP LG\n" +
                           "          LEFT JOIN master_ledger ML\n" +
                           "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                           "          LEFT JOIN voucher_trans VT\n" +
                           "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                           "          LEFT JOIN voucher_master_trans MT\n" +
                           "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                           "            AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                           "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                           "          LEFT JOIN MASTER_PROJECT MP\n" +
                           "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                           "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                           "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                           "          JOIN (SELECT VT.VOUCHER_ID, VT.LEDGER_ID, ML.LEDGER_CODE,SUM(VT.AMOUNT) AS AMOUNT\n" +
                           "                 FROM master_ledger_GROUP LG\n" +
                           "\n" +
                           "                 LEFT JOIN master_ledger ML\n" +
                           "                   ON ML.GROUP_ID = LG.GROUP_ID\n" +
                           "                 LEFT JOIN voucher_trans VT\n" +
                           "                   ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                           "                 LEFT JOIN voucher_master_trans MT\n" +
                           "                   ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                           "           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                           "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                           "          LEFT JOIN MASTER_PROJECT MP\n" +
                           "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                           "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                           "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                           "                WHERE MT.VOUCHER_TYPE IN ('RC')\n" +
                           "                  AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
                           "                  AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                           "                  and lg.group_id in (12)\n" +
                           "                  AND MT.STATUS = 1\n" +
                           "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                           "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                           "                GROUP BY MT.VOUCHER_DATE) AS T\n" +   // VT.VOUCHER_ID
                           "            ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                           "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                           "           AND MT.VOUCHER_TYPE IN('RC')\n" +
                           "           AND MT.STATUS = 1\n" +
                           "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                           "           AND LG.GROUP_ID NOT IN (13)\n" +
                             "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                           "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                           "         GROUP BY VT.BRANCH_ID,MT.PROJECT_ID,MT.VOUCHER_DATE\n" +
                           "        UNION ALL\n" +
                           "        SELECT MT.VOUCHER_ID,\n" +
                           "               MT.VOUCHER_DATE,\n" +
                           "               0.0 AS REC_IN,\n" +
                           "             IFNULL(T.AMOUNT, 0) AS PAY_OUT\n" +
                           "          FROM master_ledger_GROUP LG\n" +
                           "          LEFT JOIN master_ledger ML\n" +
                           "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                           "          LEFT JOIN voucher_trans VT\n" +
                           "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                           "          LEFT JOIN voucher_master_trans MT\n" +
                           "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                           "            AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                           "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                           "          LEFT JOIN MASTER_PROJECT MP\n" +
                           "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                           "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                           "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                           "          JOIN (SELECT VT.VOUCHER_ID, VT.LEDGER_ID, ML.LEDGER_CODE,SUM(VT.AMOUNT) AS AMOUNT\n" +
                           "                  FROM master_ledger_GROUP LG\n" +
                           "\n" +
                           "                  LEFT JOIN master_ledger ML\n" +
                           "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                           "                  LEFT JOIN voucher_trans VT\n" +
                           "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                           "                  LEFT JOIN voucher_master_trans MT\n" +
                           "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                           "            AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                           "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                           "          LEFT JOIN MASTER_PROJECT MP\n" +
                           "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                           "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                           "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                           "                 WHERE MT.VOUCHER_TYPE IN('PY')\n" +
                           "                   AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                           "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                           "                   and lg.group_id in (12)\n" +
                           "                   AND MT.STATUS = 1\n" +
                              "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                           "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                           "                 GROUP BY MT.VOUCHER_DATE) AS T\n" +
                           "            ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                           "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                           "           AND MT.VOUCHER_TYPE IN('PY')\n" +
                           "           AND MT.STATUS = 1\n" +
                           "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                           "           AND LG.GROUP_ID NOT IN (13)\n" +
                             "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                           "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                           "         GROUP BY VT.BRANCH_ID,MT.PROJECT_ID,MT.VOUCHER_DATE\n" +
                           "        UNION ALL\n" +
                           "        SELECT T.VOUCHER_ID,\n" +
                           "               T.VOUCHER_DATE,\n" +
                           "               SUM(T.AMOUNT) AS REC_IN,\n" +
                           "               0 AS PAY_OUT\n" +
                           "          FROM (SELECT VT.VOUCHER_ID,\n" +
                           "                       LG.GROUP_ID,\n" +
                           "                       MT.VOUCHER_TYPE,\n" +
                           "                       VT.AMOUNT,\n" +
                           "                       MT.VOUCHER_DATE,\n" +
                           "                       MT.PROJECT_ID\n" +
                           "                  FROM master_ledger_GROUP LG\n" +
                           "                  LEFT JOIN master_ledger ML\n" +
                           "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                           "                  LEFT JOIN voucher_trans VT\n" +
                           "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                           "                  LEFT JOIN voucher_master_trans MT\n" +
                           "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                           "            AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                            "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                            "          LEFT JOIN MASTER_PROJECT MP\n" +
                           "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                           "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                           "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                           "                 WHERE VT.TRANS_MODE = 'DR'\n" +
                           "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                           "                   AND MT.STATUS = 1\n" +
                           "                   AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
                            "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                           "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                           "                 ORDER BY VT.VOUCHER_ID ASC) AS T\n" +
                           "         WHERE T.PROJECT_ID IN (?PROJECT_ID)\n" +
                           "           AND T.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
                           "           AND T.GROUP_ID IN (12)\n" +
                           "           AND T.VOUCHER_TYPE = 'CN'\n" +
                           "         GROUP BY T.PROJECT_ID,T.VOUCHER_DATE\n" +
                           "        UNION\n" +
                           "        SELECT T.VOUCHER_ID,\n" +
                           "               T.VOUCHER_DATE,\n" +
                           "               0 AS REC_IN,\n" +
                           "               SUM(T.AMOUNT) AS PAY_OUT\n" +
                           "\n" +
                           "          FROM (SELECT VT.VOUCHER_ID,\n" +
                           "                       LG.GROUP_ID,\n" +
                           "                       MT.VOUCHER_TYPE,\n" +
                           "                       VT.AMOUNT,\n" +
                           "                       MT.VOUCHER_DATE,\n" +
                           "                       MT.PROJECT_ID\n" +
                           "                  FROM master_ledger_GROUP LG\n" +
                           "                  LEFT JOIN master_ledger ML\n" +
                           "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                           "                  LEFT JOIN voucher_trans VT\n" +
                           "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                           "                  LEFT JOIN voucher_master_trans MT\n" +
                           "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                           "            AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                           "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                           "          LEFT JOIN MASTER_PROJECT MP\n" +
                           "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                           "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                           "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                           "                 WHERE VT.TRANS_MODE = 'CR'\n" +
                           "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                           "                   AND MT.STATUS = 1\n" +
                           "                   AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
                           "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                           "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                           "                 ORDER BY VT.VOUCHER_ID ASC) AS T\n" +
                           "         WHERE T.PROJECT_ID IN (?PROJECT_ID)\n" +
                           "           AND T.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
                           "           AND T.GROUP_ID IN (12)\n" +
                           "           AND T.VOUCHER_TYPE = 'CN'\n" +
                           "         GROUP BY T.PROJECT_ID,T.VOUCHER_DATE) AS TT\n" +
                           " GROUP BY TT.VOUCHER_DATE;";


                        break;
                    }
                #endregion

                #region Cash Flow
                case ReportSQLCommand.BankReport.CashFlow:
                    {
                        query = "SELECT TT.VOUCHER_ID,\n" +
                        "       TT.VOUCHER_DATE AS DATE,\n" +
                        "       SUM(REC_IN) AS 'IN_FLOW',\n" +
                        "       SUM(PAY_OUT) AS 'OUT_FLOW'\n" +
                        "  FROM (SELECT MT.VOUCHER_ID,\n" +
                        "               MT.VOUCHER_DATE,\n" +
                        "             IFNULL(T.AMOUNT, 0) AS REC_IN,\n" +
                        "               0.00 AS PAY_OUT\n" +
                        "          FROM master_ledger_GROUP LG\n" +
                        "          LEFT JOIN master_ledger ML\n" +
                        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        "          LEFT JOIN voucher_trans VT\n" +
                        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        "          LEFT JOIN voucher_master_trans MT\n" +
                        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        "            AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        "          JOIN (SELECT VT.VOUCHER_ID, VT.LEDGER_ID, ML.LEDGER_CODE,SUM(VT.AMOUNT) AS AMOUNT\n" +
                        "                 FROM master_ledger_GROUP LG\n" +
                        "\n" +
                        "                 LEFT JOIN master_ledger ML\n" +
                        "                   ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        "                 LEFT JOIN voucher_trans VT\n" +
                        "                   ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        "                 LEFT JOIN voucher_master_trans MT\n" +
                        "                   ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        "            AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        "                WHERE MT.VOUCHER_TYPE IN('RC')\n" +   //
                        "                  AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
                        "                  AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "                  and lg.group_id in (13)\n" +
                        "                  AND MT.STATUS = 1\n" +
                        "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        "                GROUP BY MT.VOUCHER_DATE) AS T\n" +
                        "            ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "           AND MT.VOUCHER_TYPE IN('RC')\n" +
                        "           AND MT.STATUS = 1\n" +
                        "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        "           AND LG.GROUP_ID NOT IN (12)\n" +
                         "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        "         GROUP BY VT.BRANCH_ID,MT.PROJECT_ID,MT.VOUCHER_DATE\n" +
                        "        UNION ALL\n" +
                        "        SELECT MT.VOUCHER_ID,\n" +
                        "               MT.VOUCHER_DATE,\n" +
                        "               0.0 AS REC_IN,\n" +
                        "               IFNULL(T.AMOUNT, 0) AS PAY_OUT\n" +
                        "          FROM master_ledger_GROUP LG\n" +
                        "          LEFT JOIN master_ledger ML\n" +
                        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        "          LEFT JOIN voucher_trans VT\n" +
                        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        "          LEFT JOIN voucher_master_trans MT\n" +
                        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        "            AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        "          JOIN (SELECT VT.VOUCHER_ID, VT.LEDGER_ID, ML.LEDGER_CODE,SUM(VT.AMOUNT) AS AMOUNT\n" +
                        "                  FROM master_ledger_GROUP LG\n" +
                        "\n" +
                        "                  LEFT JOIN master_ledger ML\n" +
                        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        "                  LEFT JOIN voucher_trans VT\n" +
                        "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        "                  LEFT JOIN voucher_master_trans MT\n" +
                        "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        "            AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        "                 WHERE MT.VOUCHER_TYPE IN('PY')\n" +
                        "                   AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "                   and lg.group_id in (13)\n" +
                        "                   AND MT.STATUS = 1\n" +
                         "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        "                 GROUP BY MT.VOUCHER_DATE) AS T\n" +
                        "            ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "           AND MT.VOUCHER_TYPE IN('PY')\n" +
                        "           AND MT.STATUS = 1\n" +
                        "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        "           AND LG.GROUP_ID NOT IN (12)\n" +
                        "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        "         GROUP BY VT.BRANCH_ID,MT.PROJECT_ID,MT.VOUCHER_DATE\n" +
                        "        UNION ALL\n" +
                        "        SELECT T.VOUCHER_ID,\n" +
                        "               T.VOUCHER_DATE,\n" +
                        "               SUM(T.AMOUNT) AS REC_IN,\n" +
                        "               '' AS PAY_OUT\n" +
                        "          FROM (SELECT VT.VOUCHER_ID,\n" +
                        "                       LG.GROUP_ID,\n" +
                        "                       MT.VOUCHER_TYPE,\n" +
                        "                       VT.AMOUNT,\n" +
                        "                       MT.VOUCHER_DATE,\n" +
                        "                       MT.PROJECT_ID\n" +
                        "                  FROM master_ledger_GROUP LG\n" +
                        "                  LEFT JOIN master_ledger ML\n" +
                        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        "                  LEFT JOIN voucher_trans VT\n" +
                        "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        "                  LEFT JOIN voucher_master_trans MT\n" +
                        "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        "            AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        "                 WHERE VT.TRANS_MODE = 'DR'\n" +
                        "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "                   AND MT.STATUS = 1\n" +
                        "                   AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
                        "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        "                 ORDER BY VT.VOUCHER_ID ASC) AS T\n" +
                        "         WHERE T.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "           AND T.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
                        "           AND T.GROUP_ID IN (13)\n" +
                        "           AND T.VOUCHER_TYPE = 'CN'\n" +
                        "         GROUP BY T.PROJECT_ID,T.VOUCHER_DATE\n" +
                        "        UNION\n" +
                        "        SELECT T.VOUCHER_ID,\n" +
                        "               T.VOUCHER_DATE,\n" +
                        "               '' AS REC_IN,\n" +
                        "               SUM(T.AMOUNT) AS PAY_OUT\n" +
                        "\n" +
                        "          FROM (SELECT VT.VOUCHER_ID,\n" +
                        "                       LG.GROUP_ID,\n" +
                        "                       MT.VOUCHER_TYPE,\n" +
                        "                       VT.AMOUNT,\n" +
                        "                       MT.VOUCHER_DATE,\n" +
                        "                       MT.PROJECT_ID\n" +
                        "                  FROM master_ledger_GROUP LG\n" +
                        "                  LEFT JOIN master_ledger ML\n" +
                        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        "                  LEFT JOIN voucher_trans VT\n" +
                        "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        "                  LEFT JOIN voucher_master_trans MT\n" +
                        "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        "            AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        "                 WHERE VT.TRANS_MODE = 'CR'\n" +
                        "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "                   AND MT.STATUS = 1\n" +
                        "                   AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
                        "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        "                 ORDER BY VT.VOUCHER_ID ASC) AS T\n" +
                        "         WHERE T.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "           AND T.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
                        "           AND T.GROUP_ID IN (13)\n" +
                        "           AND T.VOUCHER_TYPE = 'CN'\n" +
                        "         GROUP BY T.PROJECT_ID,T.VOUCHER_DATE) AS TT\n" +
                        " GROUP BY TT.VOUCHER_DATE;";



                        break;
                    }
                #endregion

                #region financial Positions
                case ReportSQLCommand.BankReport.FinancialPosition:
                    {
                        query = "SELECT ML.LEDGER_ID,\n" +
                                     "       MP.PROJECT_ID,\n" +
                                     "       MP.PROJECT,\n" +
                                     "       CONCAT(MB.BANK, CONCAT(' -', MB.BRANCH)) AS BANK,\n" +
                                     "       LG.GROUP_ID,\n" +
                                     "       ML.LEDGER_NAME,\n" +
                                     "       MBA.OPERATED_BY,\n" +
                                      "      ML.NOTES AS PURPOSES,\n" +
                                     "       ABS(SUM(CASE\n" +
                                     "                 WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                                     "                  LB2.AMOUNT\n" +
                                     "                 ELSE\n" +
                                     "                  -LB2.AMOUNT\n" +
                                     "               END)) AS AMOUNT,\n" +
                                     "       SUM(CASE\n" +
                                     "             WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                                     "              LB2.AMOUNT\n" +
                                     "             ELSE\n" +
                                     "              0\n" +
                                     "           END) AS AMOUNT_DR,\n" +
                                     "       SUM(CASE\n" +
                                     "             WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                                     "              LB2.AMOUNT\n" +
                                     "             ELSE\n" +
                                     "              0\n" +
                                     "           END) AS AMOUNT_CR,\n" +
                                     "       CASE\n" +
                                     "         WHEN (SUM(CASE\n" +
                                     "                     WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                                     "                      LB2.AMOUNT\n" +
                                     "                     ELSE\n" +
                                     "                      -LB2.AMOUNT\n" +
                                     "                   END) >= 0) THEN\n" +
                                     "          'DR'\n" +
                                     "         ELSE\n" +
                                     "          'CR'\n" +
                                     "       END AS TRANS_MODE\n" +
                                     "  FROM MASTER_LEDGER AS ML\n" +
                                     " INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                                     "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                     "INNER JOIN PROJECT_LEDGER AS PL ON PL.PROJECT_ID IN (?PROJECT_ID) AND PL.LEDGER_ID = ML.LEDGER_ID" + //On 09/05/2017, To show zero value cash/bank/Fd Opening/Closing Balance Skip unmapped ledgers: Changed INNER JOIN with PROJECT_LEDGERS
                                     "  LEFT JOIN MASTER_BANK_ACCOUNT AS MBA\n" +
                                     "    ON ML.LEDGER_ID = MBA.LEDGER_ID\n" +
                                     "  LEFT JOIN MASTER_BANK AS MB\n" +
                                     "    ON MBA.BANK_ID = MB.BANK_ID\n" +
                                     "\n" +
                                     " LEFT JOIN (SELECT LB.BALANCE_DATE,\n" +
                                     "                    LB.PROJECT_ID,\n" +
                                     "                    LB.LEDGER_ID,\n" +
                                     "                    LB.AMOUNT,\n" +
                                     "                    LB.TRANS_MODE\n" +
                                     "               FROM LEDGER_BALANCE AS LB\n" +
                                     "               LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                                     "                                LBA.LEDGER_ID,\n" +
                                     "                                MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                                     "                           FROM LEDGER_BALANCE LBA\n" +
                                     "                          WHERE 1 = 1\n" +
                                     "                            {AND LBA.BALANCE_DATE <=?BALANCE_DATE}\n" +
                                     "                          GROUP BY LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1\n" +
                                     "                 ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                                     "                AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                                     "              WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                                     "             { AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                     "                AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                                     "    ON ML.LEDGER_ID = LB2.LEDGER_ID AND PL.PROJECT_ID = LB2.PROJECT_ID \n" +
                                     "  LEFT JOIN MASTER_PROJECT MP\n" +
                                     "    ON MP.PROJECT_ID = PL.PROJECT_ID\n" +
                                     " WHERE 1 = 1 {AND LG.GROUP_ID IN (?GROUP_ID)}\n" +
                                     " {AND ML.LEDGER_ID IN (?LEDGER_ID)}\n" +
                                     " GROUP BY ML.LEDGER_ID, MP.PROJECT_ID\n" +
                                     " ORDER BY MP.PROJECT,ML.LEDGER_NAME";
                        break;
                    }
                #endregion

                #region Fixed Deposit
                case ReportSQLCommand.BankReport.FixedDepositStatement:
                    {
                        /*query = "SELECT FDA.FD_ACCOUNT_ID,FDA.INVESTMENT_DATE AS INVESTED_ON,FDA.ACCOUNT_HOLDER,\n" +
                                "       IFNULL(FDRPO.MATURITY_DATE, FDA.MATURED_ON) AS MATURITY_DATE,\n" +
                                "       FDA.FD_ACCOUNT_NUMBER AS FD_NO,\n" +
                                "       CONCAT(MBK.BANK, ' (', MBK.BRANCH, ')') AS BANK,\n" +
                                "       MLG.LEDGER_NAME,\n" +
                                "       MLG.LEDGER_ID,\n" +
                                "       MPR.PROJECT,\n" +
                                "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) AS PRINCIPLE_AMOUNT,\n" +
                                "       IFNULL(FDR.INTEREST_AMOUNT, 0) AS INTEREST_AMOUNT,\n" +
                                "       IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                                "       FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                                "       IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) AS TOTAL_AMOUNT,\n" +
                                "       IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS WITHDRAWAL_AMOUNT,\n" +
                                "       FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                                "       IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "       IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS AMOUNT,\n" +
                                "\n" +
                                "       IF(FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "          IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                                "          IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "          IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) = 0,\n" +
                                "          'Closed',\n" +
                                "          'Active') AS CLOSING_STATUS\n" +
                                "  FROM FD_ACCOUNT AS FDA\n" +
                                "  LEFT JOIN (SELECT FD_ACCOUNT_ID,\n" +
                                "                    MAX(MATURITY_DATE) AS MATURITY_DATE,\n" +
                                "                    MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                                "                    SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                                "                    SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                                "                    SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                                "               FROM FD_RENEWAL\n" +
                                "              WHERE STATUS = 1\n" +
                                "                AND RENEWAL_DATE < ?DATE_FROM \n" +
                                "              GROUP BY FD_ACCOUNT_ID) AS FDRO\n" +
                                "    ON FDA.FD_ACCOUNT_ID = FDRO.FD_ACCOUNT_ID\n" +
                                "\n" +
                                "  LEFT JOIN (SELECT FD_ACCOUNT_ID,\n" +
                                "                    MAX(MATURITY_DATE) AS MATURITY_DATE,\n" +
                                "                    MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                                "                    INTEREST_RATE,\n" +
                                "                    SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                                "                    SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                                "                    SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                                "               FROM FD_RENEWAL\n" +
                                "              WHERE STATUS = 1\n" +
                                "                AND RENEWAL_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                            //"                AND RENEWAL_DATE <= ?DATE_TO \n" +
                                "              GROUP BY FD_ACCOUNT_ID) AS FDR\n" +
                                "    ON FDA.FD_ACCOUNT_ID = FDR.FD_ACCOUNT_ID\n" +

                                 "  LEFT JOIN (SELECT FD_ACCOUNT_ID,\n" +
                                "                    MAX(MATURITY_DATE) AS MATURITY_DATE,\n" +
                                "                    MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                                "                    INTEREST_RATE,\n" +
                                "                    SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                                "                    SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                                "                    SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                                "               FROM FD_RENEWAL\n" +
                                "              WHERE FD_TYPE<>'POI' AND STATUS = 1\n" +
                                "                AND RENEWAL_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                                "              GROUP BY FD_ACCOUNT_ID) AS FDRPO\n" +
                                "    ON FDA.FD_ACCOUNT_ID = FDRPO.FD_ACCOUNT_ID\n" +

                                "  LEFT JOIN MASTER_BANK AS MBK\n" +
                                "    ON FDA.BANK_ID = MBK.BANK_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MPR\n" +
                                "    ON FDA.PROJECT_ID = MPR.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "  ON MIP.CUSTOMERID = MPR.CUSTOMERID\n" +
                                "\n" +
                                "   LEFT JOIN VOUCHER_MASTER_TRANS VMT\n" +
                                "  ON VMT.PROJECT_ID = MPR.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_LEDGER MLG\n" +
                                "    ON FDA.LEDGER_ID = MLG.LEDGER_ID\n" +
                                " WHERE FDA.STATUS = 1\n" +
                                "   AND FDA.INVESTMENT_DATE <= ?DATE_TO \n" +
                                " {AND MPR.PROJECT_ID IN (?PROJECT_ID)}\n" +
                                "   { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "   { AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "   AND FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) <> 0 GROUP BY FDA.FD_ACCOUNT_NUMBER, VMT.BRANCH_ID";*/

                        query = "SELECT FDA.FD_ACCOUNT_ID, FDA.INVESTMENT_DATE AS INVESTED_ON, FDA.ACCOUNT_HOLDER, BO.BRANCH_OFFICE_NAME,\n" +
                            //"       IFNULL(FDRPO.RENEWAL_DATE, NULL) AS RENEWAL_DATE,\n" +
                                "       IFNULL(FDRPO.MATURITY_DATE, FDA.MATURED_ON) AS MATURITY_DATE,\n" +
                                "       FDA.FD_ACCOUNT_NUMBER AS FD_NO,\n" +
                                "       IFNULL(FDRPO.RECEIPT_NO,FDA.RECEIPT_NO) AS RECEIPT_NO,\n" +
                                "       CONCAT(MBK.BANK, ' (', MBK.BRANCH, ')') AS BANK,\n" +
                                "       MLG.LEDGER_NAME,\n" +
                                "       MLG.LEDGER_ID,\n" +
                                "       MP.PROJECT,\n" +
                                "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) AS PRINCIPLE_AMOUNT,\n" +
                                "       IFNULL(FDR.INTEREST_AMOUNT, 0) AS INTEREST_AMOUNT,\n" +
                                "       IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                                "       FDA.AMOUNT + IFNULL(FDR.REINVESTED_AMOUNT, 0) + IFNULL(FDRO.REINVESTED_AMOUNT, 0) + \n" +
                                "       IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                                "       IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) AS TOTAL_AMOUNT,\n" +
                                "       IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS WITHDRAWAL_AMOUNT,\n" +
                                "       FDA.AMOUNT + IFNULL(FDR.REINVESTED_AMOUNT, 0) + IFNULL(FDRO.REINVESTED_AMOUNT, 0) + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                                "       IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "       IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS AMOUNT,\n" +
                                "\n" +
                                "       IF(FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "          IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                                "          IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "          IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) = 0,\n" +
                                "          'Closed', 'Active') AS STATUS\n" +
                                "  FROM FD_ACCOUNT AS FDA\n" +
                                "  INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = FDA.PROJECT_ID\n" +
                                "  INNER JOIN BRANCH_OFFICE BO ON BO.BRANCH_OFFICE_ID = FDA.BRANCH_ID\n" +
                                "  LEFT JOIN (SELECT FR.FD_ACCOUNT_ID, FR.BRANCH_ID,\n" +
                                "                    MAX(FR.MATURITY_DATE) AS MATURITY_DATE,\n" +
                                "                    (FR.RECEIPT_NO) AS RECEIPT_NO,\n" +
                                "                    MAX(FR.RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                                "                    SUM(IF(FR.RENEWAL_TYPE = 'ACI', 0, FR.INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                                "                    SUM(IF(FR.RENEWAL_TYPE = 'ACI', FR.INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                                "                    SUM(FR.WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT,\n" +
                                "                    0 AS REINVESTED_AMOUNT\n" +
                                "             FROM FD_RENEWAL FR\n" +
                                "             INNER JOIN FD_ACCOUNT FA ON FA.BRANCH_ID = FR.BRANCH_ID AND FA.FD_ACCOUNT_ID = FR.FD_ACCOUNT_ID AND FA.LOCATION_ID = FR.LOCATION_ID\n" +
                                "             WHERE FR.STATUS = 1 AND FR.RENEWAL_DATE < ?DATE_FROM \n" +
                                "             {AND FA.BRANCH_ID IN (?BRANCH_OFFICE_ID)} {AND FA.PROJECT_ID IN (?PROJECT_ID)}\n" +
                                "             GROUP BY FR.FD_ACCOUNT_ID, BRANCH_ID) AS FDRO\n" +
                                "    ON FDA.FD_ACCOUNT_ID = FDRO.FD_ACCOUNT_ID AND FDA.BRANCH_ID = FDRO.BRANCH_ID\n" +
                                "\n" +
                                "  LEFT JOIN (SELECT FR.FD_ACCOUNT_ID, FR.BRANCH_ID, \n" +
                                "                    MAX(FR.MATURITY_DATE) AS MATURITY_DATE,\n" +
                                "                    (FR.RECEIPT_NO) AS RECEIPT_NO,\n" +
                                "                    MAX(FR.RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                                "                    FR.INTEREST_RATE,\n" +
                                "                    SUM(IF(FR.RENEWAL_TYPE = 'ACI', 0, FR.INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                                "                    SUM(IF(FR.RENEWAL_TYPE = 'ACI', FR.INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                                "                    SUM(FR.WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT,\n" +
                                "                    0 AS REINVESTED_AMOUNT\n" +
                                "             FROM FD_RENEWAL FR\n" +
                                "             INNER JOIN FD_ACCOUNT FA ON FA.BRANCH_ID = FR.BRANCH_ID AND FA.FD_ACCOUNT_ID = FR.FD_ACCOUNT_ID AND FA.LOCATION_ID = FR.LOCATION_ID\n" +
                                "             WHERE FR.STATUS = 1  AND FR.RENEWAL_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                                "             {AND FA.BRANCH_ID IN (?BRANCH_OFFICE_ID)} {AND FA.PROJECT_ID IN (?PROJECT_ID)}\n" +
                                "             GROUP BY FR.FD_ACCOUNT_ID, FR.BRANCH_ID) AS FDR\n" +
                                "    ON FDA.FD_ACCOUNT_ID = FDR.FD_ACCOUNT_ID AND FDA.BRANCH_ID = FDR.BRANCH_ID\n" +

                                "  LEFT JOIN (SELECT FR.FD_ACCOUNT_ID, FR.BRANCH_ID,\n" +
                                "                    MAX(FR.MATURITY_DATE) AS MATURITY_DATE,\n" +
                                "                   (FR.RECEIPT_NO) AS RECEIPT_NO,\n" +
                                "                    RDATE.RENEWAL_DATE,\n" +
                                "                    FR.INTEREST_RATE,\n" +
                                "                    SUM(IF(FR.RENEWAL_TYPE = 'ACI', 0, FR.INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                                "                    SUM(IF(FR.RENEWAL_TYPE = 'ACI', FR.INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                                "                    SUM(FR.WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT,\n" +
                                "                    0 AS REINVESTED_AMOUNT\n" +
                                "             FROM FD_RENEWAL FR\n" +
                                "             INNER JOIN FD_ACCOUNT FA ON FA.BRANCH_ID = FR.BRANCH_ID AND FA.FD_ACCOUNT_ID = FR.FD_ACCOUNT_ID AND FA.LOCATION_ID = FR.LOCATION_ID\n" +
                                "             LEFT JOIN (SELECT FD_ACCOUNT_ID, BRANCH_ID, MAX(RENEWAL_DATE) AS RENEWAL_DATE\n" +
                                "                          FROM FD_RENEWAL WHERE STATUS = 1\n" +
                                "                          AND RENEWAL_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                                "                          GROUP BY FD_ACCOUNT_ID, BRANCH_ID) AS RDATE ON RDATE.FD_ACCOUNT_ID = FR.FD_ACCOUNT_ID AND RDATE.BRANCH_ID = FR.BRANCH_ID\n" +
                                "             WHERE FR.FD_TYPE<>'POI' AND FR.STATUS = 1 \n" +
                                "             AND FR.RENEWAL_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                                "             {AND FA.BRANCH_ID IN (?BRANCH_OFFICE_ID)} {AND FA.PROJECT_ID IN (?PROJECT_ID)}\n" +
                                "             GROUP BY FR.FD_ACCOUNT_ID, FR.BRANCH_ID ORDER BY FR.FD_ACCOUNT_ID DESC ) AS FDRPO\n" +
                                "    ON FDA.FD_ACCOUNT_ID = FDRPO.FD_ACCOUNT_ID AND FDA.BRANCH_ID = FDRPO.BRANCH_ID\n" +
                                " LEFT JOIN MASTER_BANK AS MBK ON FDA.BANK_ID = MBK.BANK_ID\n" +
                                " LEFT JOIN MASTER_LEDGER MLG ON FDA.LEDGER_ID = MLG.LEDGER_ID\n" +
                                " WHERE FDA.STATUS = 1 AND FDA.INVESTMENT_DATE <= ?DATE_TO \n" +
                                " {AND BO.BRANCH_OFFICE_ID IN (?BRANCH_OFFICE_ID)} AND BO.STATUS = 2\n" +
                                " { AND FDA.BRANCH_ID IN (?BRANCH_OFFICE_ID)} { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                " {AND MP.PROJECT_ID IN (?PROJECT_ID)}\n" +
                                " AND FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) - IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) <> 0";

                        break;
                    }
                #endregion

                #region Bank Balance Statement
                case ReportSQLCommand.BankReport.BankBalanceStatement:
                    {
                        query = "SELECT LG.GROUP_ID,\n" +
                         "       MBA.BANK_ACCOUNT_ID, ML.LEDGER_ID, \n" +
                         "\n" +
                         "       LG.GROUP_CODE,\n" +
                         "       LG.LEDGER_GROUP,\n" +
                         "       MBA.ACCOUNT_NUMBER,\n" +
                         "       CONCAT(MB.BANK, ' - ', MB.BRANCH) AS 'BANK',\n" +
                         "       CONCAT(MD.DIVISION, ' - ', MP.PROJECT) AS 'PROJECT',\n" +
                         "       ABS(SUM(CASE\n" +
                         "                 WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                         "                  LB2.AMOUNT\n" +
                         "                 ELSE\n" +
                         "                  -LB2.AMOUNT\n" +
                         "               END)) AS AMOUNT,\n" +
                         "       SUM(CASE\n" +
                         "             WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                         "              LB2.AMOUNT\n" +
                         "             ELSE\n" +
                         "              0\n" +
                         "           END) AS AMOUNT_DR,\n" +
                         "       SUM(CASE\n" +
                         "             WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                         "              LB2.AMOUNT\n" +
                         "             ELSE\n" +
                         "              0\n" +
                         "           END) AS AMOUNT_CR,\n" +
                         "       CASE\n" +
                         "         WHEN (SUM(CASE\n" +
                         "                     WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                         "                      LB2.AMOUNT\n" +
                         "                     ELSE\n" +
                         "                      -LB2.AMOUNT\n" +
                         "                   END) >= 0) THEN\n" +
                         "          'DR'\n" +
                         "         ELSE\n" +
                         "          'CR'\n" +
                         "       END AS TRANS_MODE\n" +
                         "  FROM MASTER_LEDGER AS ML\n" +
                         " INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                         "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                         " INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                         "                    LB.PROJECT_ID,\n" +
                         "                    LB.LEDGER_ID,\n" +
                         "                    LB.AMOUNT,\n" +
                         "                    LB.TRANS_MODE\n" +
                         "               FROM LEDGER_BALANCE AS LB\n" +
                         "               LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                         "                                LBA.LEDGER_ID,\n" +
                         "                                MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                         "                           FROM LEDGER_BALANCE LBA\n" +
                         "                          WHERE 1 = 1\n" +
                         "                            AND LBA.BALANCE_DATE <= ?DATE_FROM\n" +
                         "                          GROUP BY LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1\n" +
                         "                 ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                         "                AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                         "              WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                         "             { AND LB.branch_id in (?BRANCH_OFFICE_ID) } \n" +
                         "                AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                         "    ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                         " INNER JOIN MASTER_PROJECT MP\n" +
                         "    ON LB2.PROJECT_ID = MP.PROJECT_ID\n" +
                         " INNER JOIN PROJECT_LEDGER PL\n" +
                         "    ON PL.LEDGER_ID = LB2.LEDGER_ID\n" +
                         "   AND PL.PROJECT_ID = MP.PROJECT_ID\n" +
                         " INNER JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                         "    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                         " INNER JOIN MASTER_DIVISION MD\n" +
                         "    ON MP.DIVISION_ID = MD.DIVISION_ID\n" +
                         " INNER JOIN MASTER_BANK_ACCOUNT MBA\n" +
                         "    ON ML.LEDGER_ID = MBA.LEDGER_ID\n" +
                         " INNER JOIN MASTER_BANK MB\n" +
                         "    ON MBA.BANK_ID = MB.BANK_ID\n" +
                         "\n" +
                         " WHERE LG.GROUP_ID IN (12)\n" +
                        "  { and mip.customerid in (?LEGAL_ENTITY_ID)}\n" +
                         "   AND ML.LEDGER_ID IN (?LEDGER_ID)\n" +
                         " GROUP BY ML.LEDGER_ID;";

                        //query = "SELECT LG.GROUP_ID,\n" +
                        //        "       MBA.BANK_ACCOUNT_ID,\n" +
                        //        "       ML.LEDGER_ID,\n" +
                        //        "       LG.GROUP_CODE,\n" +
                        //        "       LG.LEDGER_GROUP,\n" +
                        //        "       MBA.ACCOUNT_NUMBER,\n" +
                        //        "       CONCAT(MB.BANK, ' - ', MB.BRANCH) AS 'BANK',\n" +
                        //        "       CONCAT(MD.DIVISION, ' - ', MP.PROJECT) AS 'PROJECT',\n" +
                        //        "       ABS(SUM(CASE\n" +
                        //        "                 WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //        "                  LB2.AMOUNT\n" +
                        //        "                 ELSE\n" +
                        //        "                  -LB2.AMOUNT\n" +
                        //        "               END)) AS AMOUNT,\n" +
                        //        "       SUM(CASE\n" +
                        //        "             WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //        "              LB2.AMOUNT\n" +
                        //        "             ELSE\n" +
                        //        "              0\n" +
                        //        "           END) AS AMOUNT_DR,\n" +
                        //        "       SUM(CASE\n" +
                        //        "             WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        //        "              LB2.AMOUNT\n" +
                        //        "             ELSE\n" +
                        //        "              0\n" +
                        //        "           END) AS AMOUNT_CR,\n" +
                        //        "       CASE\n" +
                        //        "         WHEN (SUM(CASE\n" +
                        //        "                     WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //        "                      LB2.AMOUNT\n" +
                        //        "                     ELSE\n" +
                        //        "                      -LB2.AMOUNT\n" +
                        //        "                   END) >= 0) THEN\n" +
                        //        "          'DR'\n" +
                        //        "         ELSE\n" +
                        //        "          'CR'\n" +
                        //        "       END AS TRANS_MODE\n" +
                        //        "  FROM MASTER_LEDGER AS ML\n" +
                        //        " INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        //        "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        " INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                        //        "                    LB.PROJECT_ID,\n" +
                        //        "                    LB.LEDGER_ID,\n" +
                        //        "                    LB.AMOUNT,\n" +
                        //        "                    LB.TRANS_MODE\n" +
                        //        "               FROM LEDGER_BALANCE AS LB\n" +
                        //        "               LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                        //        "                                LBA.LEDGER_ID,\n" +
                        //        "                                MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //        "                           FROM LEDGER_BALANCE LBA\n" +
                        //        "                          WHERE 1 = 1\n" +
                        //        "                            AND LBA.BALANCE_DATE <= ?DATE_FROM\n" +
                        //        "                          GROUP BY LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1\n" +
                        //        "                 ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        //        "                AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //        "              WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "               { AND LB.branch_id in (?BRANCH_OFFICE_ID) } \n" +
                        //        "                AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                        //        "    ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        //        " INNER JOIN MASTER_PROJECT MP\n" +
                        //        "    ON LB2.PROJECT_ID = MP.PROJECT_ID\n" +

                        //        " inner join project_ledger pl\n" +
                        //        "    on pl.ledger_id = lb2.ledger_id\n" +
                        //        "   and pl.project_id = mp.project_id\n" +
                        //        " inner join master_insti_perference mip\n" +
                        //        "    on mip.customerid = mp.customerid\n" +

                        //        " INNER JOIN MASTER_DIVISION MD\n" +
                        //        "    ON MP.DIVISION_ID = MD.DIVISION_ID\n" +
                        //        " INNER JOIN MASTER_BANK_ACCOUNT MBA\n" +
                        //        "    ON ML.LEDGER_ID = MBA.LEDGER_ID\n" +
                        //        " INNER JOIN MASTER_BANK MB\n" +
                        //        "    ON MBA.BANK_ID = MB.BANK_ID\n" +
                        //        " WHERE LG.GROUP_ID IN (12)\n" +

                        //        "  { and mip.customerid in (?LEGAL_ENTITY_ID)}\n" +
                        //        "   AND ML.LEDGER_ID IN (?LEDGER_ID)\n" +

                        //        " GROUP BY ML.LEDGER_ID;";

                        break;
                    }
                #endregion

                #region Bank currect Closing Balance
                case ReportSQLCommand.BankReport.BankCurrentClosingBalance:
                    {
                        query = "SELECT LG.GROUP_ID,\n" +
                        "       MBA.BANK_ACCOUNT_ID,\n" +
                        "       LG.GROUP_CODE,\n" +
                        "       LG.LEDGER_GROUP,\n" +
                        "       ABS(SUM(CASE\n" +
                        "                 WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        "                  LB2.AMOUNT\n" +
                        "                 ELSE\n" +
                        "                  -LB2.AMOUNT\n" +
                        "               END)) AS AMOUNT,\n" +
                        "       SUM(CASE\n" +
                        "             WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        "              LB2.AMOUNT\n" +
                        "             ELSE\n" +
                        "              0\n" +
                        "           END) AS AMOUNT_DR,\n" +
                        "       SUM(CASE\n" +
                        "             WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        "              LB2.AMOUNT\n" +
                        "             ELSE\n" +
                        "              0\n" +
                        "           END) AS AMOUNT_CR,\n" +
                        "       CASE\n" +
                        "         WHEN (SUM(CASE\n" +
                        "                     WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        "                      LB2.AMOUNT\n" +
                        "                     ELSE\n" +
                        "                      -LB2.AMOUNT\n" +
                        "                   END) >= 0) THEN\n" +
                        "          'DR'\n" +
                        "         ELSE\n" +
                        "          'CR'\n" +
                        "       END AS TRANS_MODE\n" +
                        "  FROM MASTER_LEDGER AS ML\n" +
                        " INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        " INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                        "                    LB.PROJECT_ID,\n" +
                        "                    LB.LEDGER_ID,\n" +
                        "                    LB.AMOUNT,\n" +
                        "                    LB.TRANS_MODE\n" +
                        "               FROM LEDGER_BALANCE AS LB\n" +
                        "               LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                        "                                LBA.LEDGER_ID,\n" +
                        "                                MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        "                           FROM LEDGER_BALANCE LBA\n" +
                        "                          WHERE 1 = 1\n" +
                        "                            AND LBA.BALANCE_DATE <= ?DATE_AS_ON\n" +
                        "                          GROUP BY LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1\n" +
                        "                 ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        "                AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        "              WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "                AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                        "    ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        " INNER JOIN MASTER_BANK_ACCOUNT MBA\n" +
                        "    ON ML.LEDGER_ID = MBA.LEDGER_ID\n" +
                        " WHERE LG.GROUP_ID IN (12)\n" +
                        "   AND MBA.LEDGER_ID IN (?LEDGER_ID)\n" +
                        " GROUP BY LG.GROUP_ID, LG.GROUP_CODE, LG.LEDGER_GROUP;";
                        break;
                    }
                #endregion

                #region Fetch FD Register Details
                case ReportSQLCommand.BankReport.FetchFDRegisterDetails:
                    {
                        query = "SELECT FDA.FD_ACCOUNT_ID,FDA.INVESTMENT_DATE,\n" +
                             "       IFNULL(FDR.MATURITY_DATE, FDA.MATURED_ON) AS MATURITY_DATE,\n" +
                             "       FDA.FD_ACCOUNT_NUMBER,FDA.ACCOUNT_HOLDER,\n" +
                             "       CONCAT(MBK.BANK, ' (', MBK.BRANCH, ')') AS BANK,\n" +
                             "       MLG.LEDGER_NAME,\n" +
                             "       MPR.PROJECT,\n" +
                             "       IFNULL(FDR.INTEREST_RATE, FDA.INTEREST_RATE) AS INTEREST_RATE,\n" +
                           "   FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                              "   IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) AS PRINCIPLE_AMOUNT,\n" +
                              " ROUND((IFNULL(FDRPOI.INTEREST_AMOUNT, 0)+IFNULL(FDR.INTEREST_AMOUNT, 0)),2) AS INTEREST_AMOUNT,\n" +
                              " ROUND((IFNULL(FDRPOI.ACCUMULATED_INTEREST_AMOUNT,0) + IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0)), 2) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                              " FDA.AMOUNT + (IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) + IFNULL(FDRPOI.ACCUMULATED_INTEREST_AMOUNT, 0)) -\n" +
                              " (IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0)+IFNULL(FDRPOI.WITHDRAWAL_AMOUNT, 0)+IFNULL(FDRPO.WITHDRAWAL_AMOUNT, 0)) +\n" +
                              " IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) AS TOTAL_AMOUNT,\n" +
                              " IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS WITHDRAWAL_AMOUNT,\n" +
                              " FDA.AMOUNT + (IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0)+IFNULL(FDRPOI.ACCUMULATED_INTEREST_AMOUNT, 0)) -\n" +
                              " (IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0)+IFNULL(FDRPOI.WITHDRAWAL_AMOUNT, 0) +IFNULL(FDRPO.WITHDRAWAL_AMOUNT, 0)) +\n" +
                              " IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                              " IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS BALANCE_AMOUNT,\n" +
                              " IF(ROUND(FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0),2) -\n" +
                              " ROUND(IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0),2) +\n" +
                              " ROUND(IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0),2) -\n" +
                              " ROUND(IFNULL(FDR.WITHDRAWAL_AMOUNT, 0),2) +\n" +
                              " ROUND(IFNULL(FDRPO.ACCUMULATED_INTEREST_AMOUNT, 0),2) -\n" +
                              " ROUND(IFNULL(FDRPO.WITHDRAWAL_AMOUNT, 0),2) +\n" +
                              " ROUND(IFNULL(FDRPOI.ACCUMULATED_INTEREST_AMOUNT, 0),2) -\n" +
                              " ROUND(IFNULL(FDRPOI.WITHDRAWAL_AMOUNT, 0),2) = 0,\n" +
                              " 'Closed',\n" +
                              " 'Active') AS CLOSING_STATUS\n" +
                              " FROM FD_ACCOUNT AS FDA\n" +

                              " LEFT JOIN (SELECT FD_ACCOUNT_ID,\n" +
                              " MAX(MATURITY_DATE) AS MATURITY_DATE,\n" +
                              " MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                              " SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                              " SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                              " SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                              " FROM FD_RENEWAL\n" +
                              " WHERE STATUS = 1 {AND BRANCH_ID IN (?BRANCH_OFFICE_ID)} AND FD_TYPE<>'POI'\n" +
                              " AND RENEWAL_DATE < ?DATE_FROM \n" +
                              " GROUP BY FD_ACCOUNT_ID) AS FDRO\n" +
                              " ON FDA.FD_ACCOUNT_ID = FDRO.FD_ACCOUNT_ID\n" +

                              " LEFT JOIN (SELECT FD_ACCOUNT_ID,\n" +
                              " MAX(MATURITY_DATE) AS MATURITY_DATE,\n" +
                              " MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                              " SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                              " SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                              " SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                              " FROM FD_RENEWAL\n" +
                              " WHERE STATUS = 1 {AND BRANCH_ID IN (?BRANCH_OFFICE_ID)} AND FD_TYPE='POI'\n" +
                              " AND MATURITY_DATE <=?DATE_TO \n" +
                              " GROUP BY FD_ACCOUNT_ID) AS FDRPOI\n" +
                              " ON FDA.FD_ACCOUNT_ID = FDRPOI.FD_ACCOUNT_ID\n" +

                               " LEFT JOIN (SELECT FD_ACCOUNT_ID,\n" +
                              " MAX(MATURITY_DATE) AS MATURITY_DATE,\n" +
                              " MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                              " INTEREST_RATE,\n" +
                              " SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                              " SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                              " SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                              " FROM FD_RENEWAL\n" +
                              " WHERE STATUS = 1 {AND BRANCH_ID IN (?BRANCH_OFFICE_ID)} AND FD_TYPE='POI'\n" +
                              " AND RENEWAL_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                              " GROUP BY FD_ACCOUNT_ID ORDER BY FD_ACCOUNT_ID DESC) AS FDRPO\n" +
                              " ON FDA.FD_ACCOUNT_ID = FDRPO.FD_ACCOUNT_ID\n" +

                              " LEFT JOIN (SELECT FD_ACCOUNT_ID,\n" +
                              " MAX(MATURITY_DATE) AS MATURITY_DATE,\n" +
                              " MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                              " INTEREST_RATE,\n" +
                              " SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                              " SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                              " SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                              " FROM FD_RENEWAL\n" +
                              " WHERE STATUS = 1 {AND BRANCH_ID IN (?BRANCH_OFFICE_ID)} AND FD_TYPE<>'POI'\n" +
                              " AND RENEWAL_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                              " GROUP BY FD_ACCOUNT_ID ORDER BY FD_ACCOUNT_ID DESC) AS FDR\n" +
                              " ON FDA.FD_ACCOUNT_ID = FDR.FD_ACCOUNT_ID\n" +
                              " LEFT JOIN MASTER_BANK AS MBK\n" +
                              " ON FDA.BANK_ID = MBK.BANK_ID\n" +
                              " LEFT JOIN MASTER_PROJECT MPR\n" +
                              " ON FDA.PROJECT_ID = MPR.PROJECT_ID\n" +
                              "LEFT JOIN VOUCHER_MASTER_TRANS VMT\n" +
                              "          ON VMT.PROJECT_ID = MPR.PROJECT_ID\n" +
                              "        LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                              "         ON MIP.CUSTOMERID = MPR.CUSTOMERID\n" +
                              " LEFT JOIN MASTER_LEDGER MLG\n" +
                              " ON FDA.LEDGER_ID = MLG.LEDGER_ID\n" +
                              " WHERE FDA.STATUS = 1 \n" +
                              " AND FDA.INVESTMENT_DATE <= ?DATE_TO \n" +
                              " {AND MPR.PROJECT_ID IN (?PROJECT_ID)}\n" +
                              "  { AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                              "  { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                              " AND FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) + IFNULL(FDRPOI.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                              " (IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0)+IFNULL(FDRPOI.WITHDRAWAL_AMOUNT, 0)) <> 0  group by FDA.FD_ACCOUNT_NUMBER, VMT.BRANCH_ID";

                        //query = "SELECT FDA.INVESTMENT_DATE,\n" +
                        //        "               IFNULL(FDR.MATURITY_DATE, FDA.MATURED_ON) AS MATURITY_DATE,\n" +
                        //        "               FDA.FD_ACCOUNT_NUMBER,\n" +
                        //        "               CONCAT(MBK.BANK, ' (', MBK.BRANCH, ')') AS BANK,\n" +
                        //        "               MLG.LEDGER_NAME,\n" +
                        //        "               MPR.PROJECT,\n" +
                        //        "               IFNULL(FDR.INTEREST_RATE, FDA.INTEREST_RATE) AS INTEREST_RATE,\n" +
                        //        "               FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        //        "               IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) AS PRINCIPLE_AMOUNT,\n" +
                        //        "               IFNULL(FDR.INTEREST_AMOUNT, 0) AS INTEREST_AMOUNT,\n" +
                        //        "               IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                        //        "               FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        //        "               IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                        //        "               IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) AS TOTAL_AMOUNT,\n" +
                        //        "               IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS WITHDRAWAL_AMOUNT,\n" +
                        //        "               FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        //        "               IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                        //        "               IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        //        "               IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS BALANCE_AMOUNT,\n" +
                        //        "\n" +
                        //        "       IFNULL(IF(FDA.INTEREST_TYPE=0,'Simple','Compound'),FDR.INTEREST_MODE) AS INTEREST_MODE,\n" +
                        //        "       IF(ROUND(FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0),2) -\n" +
                        //        "          ROUND(IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0),2) +\n" +
                        //        "          ROUND(IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0),2) -\n" +
                        //        "          ROUND(IFNULL(FDR.WITHDRAWAL_AMOUNT, 0),2) = 0,\n" +
                        //        "          'Closed',\n" +
                        //        "          'Active') AS CLOSING_STATUS\n" +
                        //        "          FROM FD_ACCOUNT AS FDA\n" +
                        //        "          LEFT JOIN (SELECT FD_ACCOUNT_ID,\n" +
                        //        "                           MAX(MATURITY_DATE) AS MATURITY_DATE,\n" +
                        //        "                           MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                        //        "                           SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                        //        "                           SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                        //        "                           SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                        //        "                      FROM FD_RENEWAL\n" +
                        //        "                     WHERE STATUS = 1\n" +
                        //        "                       AND RENEWAL_DATE < ?DATE_FROM\n" +
                        //        "                     GROUP BY FD_ACCOUNT_ID) AS FDRO\n" +
                        //        "            ON FDA.FD_ACCOUNT_ID = FDRO.FD_ACCOUNT_ID\n" +
                        //        "\n" +
                        //        "          LEFT JOIN (SELECT FD_ACCOUNT_ID,\n" +
                        //        "                           MAX(MATURITY_DATE) AS MATURITY_DATE,\n" +
                        //        "                           MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                        //        "                           INTEREST_RATE,\n" +
                        //        "                           IF(INTEREST_TYPE = 0, 'Simple', 'Compound') AS INTEREST_MODE,\n" +
                        //        "                           SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                        //        "                           SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                        //        "                           SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                        //        "                      FROM FD_RENEWAL\n" +
                        //        "                     WHERE STATUS = 1\n" +
                        //        "                       AND RENEWAL_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                     GROUP BY FD_ACCOUNT_ID ORDER BY FD_ACCOUNT_ID DESC) AS FDR\n" +
                        //        "            ON FDA.FD_ACCOUNT_ID = FDR.FD_ACCOUNT_ID\n" +
                        //        "          LEFT JOIN MASTER_BANK AS MBK\n" +
                        //        "            ON FDA.BANK_ID = MBK.BANK_ID\n" +
                        //        "          LEFT JOIN MASTER_PROJECT MPR\n" +
                        //        "            ON FDA.PROJECT_ID = MPR.PROJECT_ID\n" +
                        //        "          LEFT JOIN VOUCHER_MASTER_TRANS VMT\n" +
                        //        "            ON VMT.PROJECT_ID = MPR.PROJECT_ID\n" +
                        //        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "            ON MIP.CUSTOMERID = MPR.CUSTOMERID\n" +
                        //        "          LEFT JOIN MASTER_LEDGER MLG\n" +
                        //        "            ON FDA.LEDGER_ID = MLG.LEDGER_ID\n" +
                        //        "         WHERE FDA.STATUS = 1\n" +
                        //        "           AND FDA.INVESTMENT_DATE <= ?DATE_TO\n" +
                        //        "  { AND MPR.PROJECT_ID IN (?PROJECT_ID)}\n" +
                        //        "  { and vmt.branch_id in (?BRANCH_OFFICE_ID)}\n" +
                        //        "  { and mip.customerid in (?LEGAL_ENTITY_ID)}\n" +
                        //        "           AND FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        //        "               IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) <> 0\n" +
                        //        "         group by FDA.FD_ACCOUNT_NUMBER, VMT.BRANCH_ID;";




                        break;
                    }
                #endregion

                #endregion
            }
            return query;
        }
    }

    public class ReportFinalAccounts
    {
        private SettingProperty settingproperty = null;

        public SettingProperty AppSetting
        {
            get
            {
                if (settingproperty == null) { settingproperty = new SettingProperty(); }
                return settingproperty;
            }
        }
        public string GetReportSQL(ReportSQLCommand.FinalAccounts queryId)
        {
            string query = string.Empty;
            switch (queryId)
            {
                #region ReceiptsPayments
                case ReportSQLCommand.FinalAccounts.ReceiptsPayments:
                    {
                        query = "SELECT T.VOUCHER_ID,\n" +
                                "       T.SORT_ID,\n" +
                                "       T.LEDGER_ID,\n" +
                                "       GROUP_CONCAT(T.GROUP_CODE ORDER BY T.VOUCHER_ID DESC SEPARATOR '') AS GROUP_CODE,\n" +
                                "       GROUP_CONCAT(T.LEDGER_GROUP ORDER BY T.VOUCHER_ID DESC SEPARATOR '') AS LEDGER_GROUP,\n" +
                                "       TRIM(GROUP_CONCAT(T.LEDGER_CODE ORDER BY T.VOUCHER_ID DESC\n" +
                                "                         SEPARATOR ' ')) AS LEDGER_CODE,\n" +
                                "\n" +
                                "       GROUP_CONCAT(T.LEDGER_NAME ORDER BY T.VOUCHER_ID DESC SEPARATOR '') AS LEDGER_NAME,\n" +
                                "       IFNULL(SUM(T.RECEIPT), 0) AS AMOUNT,\n" +
                                "       GROUP_CONCAT(T.GROUPCODE ORDER BY T.VOUCHER_ID DESC SEPARATOR '') AS PAYMENT_GROUP_CODE,\n" +
                                "       GROUP_CONCAT(T.GROUPNAME ORDER BY T.VOUCHER_ID DESC SEPARATOR '') AS PAYMENT_GROUP_NAME,\n" +
                                "       GROUP_CONCAT(T.PAY_CODE ORDER BY T.VOUCHER_ID DESC SEPARATOR '') AS PAYMENT_CODE,\n" +
                                "       GROUP_CONCAT(T.PAY_LEDGER ORDER BY T.VOUCHER_ID DESC SEPARATOR '') AS PAYMENT_LEDGER_NAME,\n" +
                                "       IFNULL(SUM(T.PAYMENT), 0) AS PAYMENT_AMOUNT\n" +
                                "\n" +
                                "  FROM (SELECT VT.VOUCHER_ID,\n" +
                                "               @row_numC := @row_numC + 1 AS sort_id,\n" +
                                "               VT.LEDGER_ID as LEDGER_ID,\n" +
                                "               ML.LEDGER_CODE,\n" +
                                "               ML.LEDGER_NAME,\n" +
                                "               LG.GROUP_CODE,\n" +
                                "               LG.LEDGER_GROUP,\n" +
                                "               SUM(VT.AMOUNT) AS RECEIPT,\n" +
                                "               '' as PAY_CODE,\n" +
                                "               '' AS PAY_LEDGER,\n" +
                                "               0 AS PAYMENT,\n" +
                                "               '' AS 'GROUPCODE',\n" +
                                "               '' AS 'GROUPNAME'\n" +
                                "\n" +
                                "          FROM master_ledger_GROUP LG\n" +
                                "\n" +
                                "          LEFT JOIN master_ledger ML\n" +
                                "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "          LEFT JOIN voucher_trans VT\n" +
                                "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "          LEFT JOIN voucher_master_trans MT\n" +
                                "            ON VT.VOUCHER_ID = MT.VOUCHER_ID, (SELECT @row_numC := 0) X\n" +
                                "\n" +
                                "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "           AND MT.VOUCHER_TYPE = 'RC'\n" +
                                "           AND MT.STATUS = 1\n" +
                                "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                                "           AND LG.GROUP_ID NOT IN (12, 13)\n" +
                                "         GROUP BY VT.LEDGER_ID\n" +
                                "\n" +
                                "        UNION ALL\n" +
                                "\n" +
                                "        SELECT VT.VOUCHER_ID,\n" +
                                "               @row_num := @row_num + 1 AS sort_id,\n" +
                                "               VT.LEDGER_ID as LEDGER_ID,\n" +
                                "               '' AS 'LEDGER_CODE',\n" +
                                "               '' AS 'LEDGER_NAME',\n" +
                                "               '' AS GROUP_CODE,\n" +
                                "               '' AS LEDGER_GROUP,\n" +
                                "               0 AS RECEIPT,\n" +
                                "\n" +
                                "               ML.LEDGER_CODE AS PAY_CODE,\n" +
                                "               ML.LEDGER_NAME AS PAY_LEDGER,\n" +
                                "               SUM(VT.AMOUNT) AS PAYMENT,\n" +
                                "               LG.GROUP_CODE,\n" +
                                "               LG.LEDGER_GROUP AS GROUP_NAME\n" +
                                "\n" +
                                "          FROM master_ledger_GROUP LG\n" +
                                "\n" +
                                "          LEFT JOIN master_ledger ML\n" +
                                "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "          LEFT JOIN voucher_trans VT\n" +
                                "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "          LEFT JOIN voucher_master_trans MT\n" +
                                "            ON VT.VOUCHER_ID = MT.VOUCHER_ID, (SELECT @row_num := 0) Y\n" +
                                "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "           AND MT.VOUCHER_TYPE = 'PY'\n" +
                                "           AND MT.STATUS = 1\n" +
                                "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                                "           AND LG.GROUP_ID NOT IN (12, 13)\n" +
                                "         GROUP BY VT.LEDGER_ID) AS T\n" +
                                " GROUP BY SORT_ID\n" +
                                " ORDER BY SORT_ID ASC";
                        break;
                    }
                #endregion

                #region Payments
                case ReportSQLCommand.FinalAccounts.Payments:
                    {

                        // New
                        // # On 14/11/2019, removed LE join and BranchProject
                        query = @"SELECT ML.LEDGER_ID,ML.GROUP_ID,LG.PARENT_GROUP_ID,
                                                        CASE
                                                        WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN
                                                        LG.GROUP_CODE
                                                        ELSE
                                                        PG.GROUP_CODE
                                                        END AS PARENT_GROUP_CODE,
                        
                                                            IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,
                                                            CASE
                                                                WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN
                                                                CONCAT(LG.GROUP_CODE)
                                                                ELSE
                                                            CONCAT(LG.GROUP_CODE)
                                                            END,LG.GROUP_CODE) AS GROUP_CODE,
                                                       LG.SORT_ORDER,
                                                         CASE
                                                        WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN
                                                        LG.LEDGER_GROUP
                                                        ELSE
                                                        PG.LEDGER_GROUP
                                                        END AS PARENT_GROUP,
                                                            IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,
                                                            CASE
                                                                WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN
                                                                CONCAT(LG.LEDGER_GROUP)
                                                                ELSE
                                                           --  CONCAT('',LG.LEDGER_GROUP)
                                                               LG.LEDGER_GROUP
                                                            END,LG.LEDGER_GROUP) AS LEDGER_GROUP,
                                                            IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,
                                                                CASE
                                                                WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN
                                                                   --  CONCAT('', ML.LEDGER_NAME)
                                                                ML.LEDGER_NAME
                                                                ELSE
                                                                   --  CONCAT('', ML.LEDGER_NAME)
                                                                ML.LEDGER_NAME
                                                                END,
                                                                ML.LEDGER_NAME) AS LEDGER_NAME,
                                                            ML.LEDGER_CODE,
                                                        CAST( IFNULL(SUM(TRANS.AMOUNT),0) as DECIMAL(15,2))  AS PAYMENTAMT
                                                      FROM MASTER_LEDGER_GROUP LG
                                                      INNER JOIN MASTER_LEDGER_GROUP PG ON LG.PARENT_GROUP_ID = PG.GROUP_ID
                                                      INNER JOIN MASTER_LEDGER ML ON ML.GROUP_ID = LG.GROUP_ID
                                                      INNER JOIN (SELECT MP.PROJECT_ID, VT.LEDGER_ID, VT.AMOUNT 
                                                            FROM (SELECT BRANCH_ID, LOCATION_ID, VOUCHER_ID, PROJECT_ID, VOUCHER_TYPE, VOUCHER_SUB_TYPE, VOUCHER_DATE
                                                                   FROM VOUCHER_MASTER_TRANS WHERE STATUS=1 AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND PROJECT_ID IN (?PROJECT_ID)
                                                                   { AND BRANCH_ID IN (?BRANCH_OFFICE_ID) }) AS MT
                                                            INNER JOIN VOUCHER_TRANS VT ON VT.BRANCH_ID = MT.BRANCH_ID AND VT.VOUCHER_ID = MT.VOUCHER_ID AND VT.LOCATION_ID = MT.LOCATION_ID
                                                                   AND ( (MT.VOUCHER_TYPE IN ('RC','PY') AND VT.TRANS_MODE ='DR') OR (MT.VOUCHER_TYPE IN ('JN','CN') AND MT.VOUCHER_SUB_TYPE = 'FD' AND VT.TRANS_MODE ='DR') )
                                                                   { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }
                                                            INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = MT.PROJECT_ID AND MT.PROJECT_ID IN (?PROJECT_ID) { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                                            WHERE 1=1 { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) } AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO) AS TRANS ON TRANS.LEDGER_ID = ML.LEDGER_ID
                                                      WHERE LG.GROUP_ID NOT IN (12, 13, 14) 
                                                      GROUP BY ML.LEDGER_ID"; //ORDER BY SORT_ORDER
                        break;
                    }

                case ReportSQLCommand.FinalAccounts.PaymentsCode:
                    {
                        query = @"SELECT ML.LEDGER_ID,ML.GROUP_ID, LG.PARENT_GROUP_ID,
                                                       CASE
                                                        WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN
                                                        IF(?SHOW_GENERALATE IN (0), LG.GROUP_CODE,CL1.CON_LEDGER_CODE)
                                                        ELSE
                                                        IF(?SHOW_GENERALATE IN (0), PG.GROUP_CODE,CL1.CON_LEDGER_CODE)
                                                        END AS PARENT_GROUP_CODE,
                                                       --  IF(?SHOW_GENERALATE IN (0),'',LEFT(IFNULL(CL1.CON_LEDGER_CODE,'999'),3)) AS PARENT_CODE1,
                                                        IF(?SHOW_GENERALATE IN (0),IF(PG.GROUP_ID IN (1, 2, 3, 4), LG.SORT_ORDER, PG.SORT_ORDER),LEFT(IFNULL(CL1.CON_LEDGER_CODE,'999'),3)) AS PARENT_CODE1,
													   IF(?SHOW_GENERALATE IN (0), LG.GROUP_CODE, CL.CON_LEDGER_CODE)  AS GROUP_CODE,
                                                       LG.SORT_ORDER,
                                                         CASE
                                                       WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN
                                                      IF(?SHOW_GENERALATE IN (0),LG.LEDGER_GROUP,IFNULL(CL1.CON_LEDGER_NAME,'-- UnMapped --'))
                                                     ELSE
                                                      IF(?SHOW_GENERALATE IN (0),PG.LEDGER_GROUP,IFNULL(CL1.CON_LEDGER_NAME,'-- UnMapped --'))
                                                       END AS PARENT_GROUP,
                                                            IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,
                                                             CASE
                                                     WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN
                                                     --  CONCAT('    ',IF(?SHOW_GENERALATE IN (0),LG.LEDGER_GROUP,CL.CON_LEDGER_NAME))
                                                         CONCAT('',IF(?SHOW_GENERALATE IN (0),LG.LEDGER_GROUP,CL.CON_LEDGER_NAME))
                                                       ELSE
                                                     --  CONCAT('   ',IF(?SHOW_GENERALATE IN (0),LG.LEDGER_GROUP,CL.CON_LEDGER_NAME))
                                                        CONCAT('',IF(?SHOW_GENERALATE IN (0),LG.LEDGER_GROUP,CL.CON_LEDGER_NAME))
                                                       END,IF(?SHOW_GENERALATE IN (0),LG.LEDGER_GROUP,CL.CON_LEDGER_NAME)) AS LEDGER_GROUP,
                                                            IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,
                                                                CASE
                                                                WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN
                                                                   --  CONCAT('   ', ML.LEDGER_NAME)
                                                                    ML.LEDGER_NAME
                                                                ELSE
                                                                   --  CONCAT('      ', ML.LEDGER_NAME)
                                                                 ML.LEDGER_NAME
                                                                END,
                                                                ML.LEDGER_NAME) AS LEDGER_NAME,
                                                             IF(?SHOW_GENERALATE IN (0),ML.LEDGER_CODE,CL.CON_LEDGER_CODE) AS LEDGER_CODE,
                                                        CAST( IFNULL(SUM(TRANS.AMOUNT),0) as DECIMAL(15,2))  AS PAYMENTAMT
                                                      FROM MASTER_LEDGER_GROUP LG
                                                      INNER JOIN MASTER_LEDGER_GROUP PG ON LG.PARENT_GROUP_ID = PG.GROUP_ID
                                                      INNER JOIN MASTER_LEDGER ML ON ML.GROUP_ID = LG.GROUP_ID
                                                      LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON ML.LEDGER_ID = CLM.LEDGER_ID
													  LEFT JOIN CONGREGATION_LEDGER AS CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
													  LEFT JOIN CONGREGATION_LEDGER AS CL1 ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID
                                                      INNER JOIN (SELECT MP.PROJECT_ID, VT.LEDGER_ID, VT.AMOUNT FROM VOUCHER_TRANS VT 
                                                            INNER JOIN VOUCHER_MASTER_TRANS MT ON MT.BRANCH_ID = VT.BRANCH_ID AND MT.VOUCHER_ID = VT.VOUCHER_ID AND MT.LOCATION_ID = VT.LOCATION_ID
                                                            INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = MT.PROJECT_ID
                                                            WHERE MT.STATUS = 1 AND MT.PROJECT_ID IN (?PROJECT_ID) { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) } { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                                            AND ( (MT.VOUCHER_TYPE IN ('RC','PY') AND VT.TRANS_MODE ='DR') OR (MT.VOUCHER_TYPE IN ('JN','CN') AND MT.VOUCHER_SUB_TYPE = 'FD' AND VT.TRANS_MODE ='DR') )
                                                            AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO) AS TRANS ON TRANS.LEDGER_ID = ML.LEDGER_ID
                                                      WHERE LG.GROUP_ID NOT IN (12, 13, 14) 
                                                      GROUP BY ML.LEDGER_ID ORDER BY SORT_ORDER"; //ORDER BY SORT_ORDER
                        break;
                    }
                case ReportSQLCommand.FinalAccounts.FetchTDSOnFDInterest:
                    {
                        query = "SELECT VM.VOUCHER_DATE, ML.LEDGER_ID,ML.GROUP_ID, LG.GROUP_CODE,LG.SORT_ORDER,\n" +
                                "CASE\n" +
                                "WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                                "LG.LEDGER_GROUP\n" +
                                "ELSE\n" +
                                "PG.LEDGER_GROUP\n" +
                                "END AS PARENT_GROUP,\n" +
                                "IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,\n" +
                                "CASE\n" +
                                "WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                                "CONCAT(LG.LEDGER_GROUP)\n" +
                                "ELSE\n" +
                                "CONCAT('   ',LG.LEDGER_GROUP)\n" +
                                "END,LG.LEDGER_GROUP) AS LEDGER_GROUP,\n" +
                                "IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,\n" +
                                "CASE\n" +
                                "WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                                "    CONCAT('   ', ML.LEDGER_NAME)\n" +
                                "ELSE\n" +
                                "    CONCAT('      ', ML.LEDGER_NAME)\n" +
                                "END,ML.LEDGER_NAME) AS LEDGER_NAME,\n" +
                                "ML.LEDGER_CODE, MP.PROJECT_ID,\n" +
                                "IFNULL(VT.AMOUNT,0) AS PAYMENTAMT, 0.0 AS PAYMENTAMTPREVIOUS\n" +
                                " FROM VOUCHER_MASTER_TRANS VM\n" +
                                " INNER JOIN VOUCHER_TRANS VT ON VT.VOUCHER_ID = VM.VOUCHER_ID  AND VT.BRANCH_ID = VM.BRANCH_ID\n" +
                                " INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = VT.LEDGER_ID\n " +
                                " INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID\n " +
                                " INNER JOIN MASTER_LEDGER_GROUP PG ON PG.GROUP_ID = LG.PARENT_GROUP_ID\n " +
                                " INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VM.PROJECT_ID\n " +
                                " LEFT JOIN PROJECT_BRANCH PB\n " +
                                " ON PB.PROJECT_ID = VM.PROJECT_ID\n " +
                                " AND PB.BRANCH_ID = VM.BRANCH_ID\n " +
                                " LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n " +
                                " ON MIP.CUSTOMERID = MP.CUSTOMERID\n " +
                                " WHERE VM.PROJECT_ID IN(?PROJECT_ID) { AND VM.BRANCH_ID IN (?BRANCH_OFFICE_ID) } { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) } AND VM.VOUCHER_TYPE ='JN' AND VM.VOUCHER_SUB_TYPE ='FD' AND VT.LEDGER_ID = " + this.AppSetting.TDSOnFDInterestLedgerId + "\n" +
                                " AND VM.STATUS = 1 AND VM.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO ";
                        break;
                    }
                #endregion


                #region Receipts
                case ReportSQLCommand.FinalAccounts.Receipts:
                    {

                        //New 
                        //# On 14/11/2019, removed LE join and BranchProject
                        query = @"SELECT ML.LEDGER_ID,ML.GROUP_ID, LG.PARENT_GROUP_ID,
                                                           CASE
                                                        WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN
                                                        LG.GROUP_CODE
                                                        ELSE
                                                        PG.GROUP_CODE
                                                        END AS PARENT_GROUP_CODE,
                        
                                                            IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,
                                                            CASE
                                                                WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN
                                                                CONCAT(LG.GROUP_CODE)
                                                                ELSE
                                                            CONCAT(LG.GROUP_CODE)
                                                            END,LG.GROUP_CODE) AS GROUP_CODE,
                                                          LG.SORT_ORDER,
                                                         CASE
                                                        WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN
                                                        LG.LEDGER_GROUP
                                                        ELSE
                                                        PG.LEDGER_GROUP
                                                        END AS PARENT_GROUP,
                                                            IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,
                                                            CASE
                                                                WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN
                                                                CONCAT(LG.LEDGER_GROUP)
                                                                ELSE
                                                            -- CONCAT('',LG.LEDGER_GROUP)
                                                                LG.LEDGER_GROUP
                                                            END,LG.LEDGER_GROUP) AS LEDGER_GROUP,
                                                            IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,
                                                                CASE
                                                                WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN
                                                                   --  CONCAT('   ', ML.LEDGER_NAME)
                                                                    ML.LEDGER_NAME
                                                                ELSE
                                                                   --  CONCAT('      ', ML.LEDGER_NAME)
                                                                 ML.LEDGER_NAME
                                                                END,
                                                                ML.LEDGER_NAME) AS LEDGER_NAME,
                                                            ML.LEDGER_CODE,  
                                                        CAST( IFNULL(SUM(TRANS.AMOUNT),0) as DECIMAL(15,2))  AS RECEIPTAMT
                                                      FROM MASTER_LEDGER_GROUP LG
                                                      INNER JOIN MASTER_LEDGER_GROUP PG ON LG.PARENT_GROUP_ID = PG.GROUP_ID
                                                      INNER JOIN MASTER_LEDGER ML ON ML.GROUP_ID = LG.GROUP_ID
                                                      INNER JOIN (SELECT MP.PROJECT_ID, VT.LEDGER_ID, VT.AMOUNT 
                                                            FROM (SELECT BRANCH_ID, LOCATION_ID, VOUCHER_ID, PROJECT_ID, VOUCHER_TYPE, VOUCHER_SUB_TYPE, VOUCHER_DATE
                                                                   FROM VOUCHER_MASTER_TRANS WHERE STATUS=1 AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND PROJECT_ID IN (?PROJECT_ID)
                                                                   { AND BRANCH_ID IN (?BRANCH_OFFICE_ID) }) AS MT
                                                            INNER JOIN VOUCHER_TRANS VT ON VT.BRANCH_ID = MT.BRANCH_ID AND VT.VOUCHER_ID = MT.VOUCHER_ID AND VT.LOCATION_ID = MT.LOCATION_ID
                                                                    AND ( (MT.VOUCHER_TYPE IN ('RC','PY') AND VT.TRANS_MODE ='CR') OR (MT.VOUCHER_TYPE = 'JN' AND MT.VOUCHER_SUB_TYPE = 'FD' AND VT.TRANS_MODE ='CR') )
                                                                    { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }
                                                            INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = MT.PROJECT_ID AND MT.PROJECT_ID IN (?PROJECT_ID) { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                                            WHERE 1=1 { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) } AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                                                            ) AS TRANS ON TRANS.LEDGER_ID = ML.LEDGER_ID
                                                      WHERE LG.GROUP_ID NOT IN (12, 13, 14)
                                                      GROUP BY ML.LEDGER_ID"; //ORDER BY SORT_ORDER

                        break;
                    }

                case ReportSQLCommand.FinalAccounts.ReceiptsCode:
                    {
                        query = @"SELECT ML.LEDGER_ID,ML.GROUP_ID, LG.PARENT_GROUP_ID,
                                                       CASE
                                                        WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN
                                                        IF(?SHOW_GENERALATE IN (0), LG.GROUP_CODE,CL1.CON_LEDGER_CODE)
                                                        ELSE
                                                        IF(?SHOW_GENERALATE IN (0), PG.GROUP_CODE,CL1.CON_LEDGER_CODE)
                                                        END AS PARENT_GROUP_CODE,
                                                      --  IF(?SHOW_GENERALATE IN (0),LEFT(IFNULL(CL1.CON_LEDGER_CODE,'999'),3),LEFT(IFNULL(CL1.CON_LEDGER_CODE,'999'),3)) AS PARENT_CODE1,
                                                       IF(?SHOW_GENERALATE IN (0),IF(PG.GROUP_ID IN (1, 2, 3, 4), LG.SORT_ORDER, PG.SORT_ORDER),LEFT(IFNULL(CL1.CON_LEDGER_CODE,'999'),3)) AS PARENT_CODE1,
													   IF(?SHOW_GENERALATE IN (0), LG.GROUP_CODE, CL.CON_LEDGER_CODE)  AS GROUP_CODE,
                                                       LG.SORT_ORDER,
                                                         CASE
                                                       WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN
                                                      IF(?SHOW_GENERALATE IN (0),LG.LEDGER_GROUP,IFNULL(CL1.CON_LEDGER_NAME,'-- UnMapped --'))
                                                     ELSE
                                                      IF(?SHOW_GENERALATE IN (0),PG.LEDGER_GROUP,IFNULL(CL1.CON_LEDGER_NAME,'-- UnMapped --'))
                                                       END AS PARENT_GROUP,
                                                            IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,
                                                             CASE
                                                     WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN
                                                     --  CONCAT('    ',IF(?SHOW_GENERALATE IN (0),LG.LEDGER_GROUP,CL.CON_LEDGER_NAME))
                                                         CONCAT('',IF(?SHOW_GENERALATE IN (0),LG.LEDGER_GROUP,CL.CON_LEDGER_NAME))
                                                       ELSE
                                                     --  CONCAT('   ',IF(?SHOW_GENERALATE IN (0),LG.LEDGER_GROUP,CL.CON_LEDGER_NAME))
                                                        CONCAT('',IF(?SHOW_GENERALATE IN (0),LG.LEDGER_GROUP,CL.CON_LEDGER_NAME))
                                                       END,IF(?SHOW_GENERALATE IN (0),LG.LEDGER_GROUP,CL.CON_LEDGER_NAME)) AS LEDGER_GROUP,
                                                            IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,
                                                                CASE
                                                                WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN
                                                                   --  CONCAT('   ', ML.LEDGER_NAME)
                                                                    ML.LEDGER_NAME
                                                                ELSE
                                                                   --  CONCAT('      ', ML.LEDGER_NAME)
                                                                 ML.LEDGER_NAME
                                                                END,
                                                                ML.LEDGER_NAME) AS LEDGER_NAME,
                                                             IF(?SHOW_GENERALATE IN (0),ML.LEDGER_CODE,CL.CON_LEDGER_CODE) AS LEDGER_CODE,
                                                        CAST( IFNULL(SUM(TRANS.AMOUNT),0) as DECIMAL(15,2))  AS RECEIPTAMT
                                                      FROM MASTER_LEDGER_GROUP LG
                                                      INNER JOIN MASTER_LEDGER_GROUP PG ON LG.PARENT_GROUP_ID = PG.GROUP_ID
                                                      INNER JOIN MASTER_LEDGER ML ON ML.GROUP_ID = LG.GROUP_ID
                                                      LEFT JOIN CONGREGATION_LEDGER_MAP CLM
														ON ML.LEDGER_ID = CLM.LEDGER_ID
													LEFT JOIN CONGREGATION_LEDGER AS CL
														ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
														LEFT JOIN CONGREGATION_LEDGER AS CL1
													ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID
                                                      INNER JOIN (SELECT MP.PROJECT_ID, VT.LEDGER_ID, VT.AMOUNT FROM VOUCHER_TRANS VT 
                                                            INNER JOIN VOUCHER_MASTER_TRANS MT ON MT.BRANCH_ID = VT.BRANCH_ID AND MT.VOUCHER_ID = VT.VOUCHER_ID AND MT.LOCATION_ID = VT.LOCATION_ID
                                                            INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = MT.PROJECT_ID
                                                            WHERE MT.STATUS = 1 AND MT.PROJECT_ID IN (?PROJECT_ID) { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) } { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                                            AND ( (MT.VOUCHER_TYPE IN ('RC','PY') AND VT.TRANS_MODE ='CR') OR (MT.VOUCHER_TYPE = 'JN' AND MT.VOUCHER_SUB_TYPE = 'FD' AND VT.TRANS_MODE ='CR') )
                                                            AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                                                            ) AS TRANS ON TRANS.LEDGER_ID = ML.LEDGER_ID
                                                      WHERE LG.GROUP_ID NOT IN (12, 13, 14)
                                                      GROUP BY ML.LEDGER_ID"; //ORDER BY SORT_ORDER


                        //                        @"SELECT ML.LEDGER_ID,ML.GROUP_ID,
                        //                                  IF(?SHOW_GENERALATE IN (0,1),LG.GROUP_CODE,CL.CON_LEDGER_CODE) AS GROUP_CODE,
                        //                                 CASE
                        //                                   WHEN PG.GROUP_ID IN (1,2,3,4) THEN
                        //                                    IF(?SHOW_GENERALATE IN (0,1), LG.GROUP_CODE,CL1.CON_LEDGER_CODE)
                        //                                    ELSE
                        //                                      IF(?SHOW_GENERALATE IN (0,1), PG.GROUP_CODE,CL1.CON_LEDGER_CODE) END PARENT_CODE,
                        //                                  IF(?SHOW_GENERALATE IN (0,1),'',LEFT(IFNULL(CL1.CON_LEDGER_CODE,'999'),3)) AS PARENT_CODE1, LG.SORT_ORDER,
                        //                                 CASE
                        //                                WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN
                        //                                IF(?SHOW_GENERALATE IN (0,1),LG.LEDGER_GROUP,IFNULL(CL1.CON_LEDGER_NAME,'-- UnMapped --')) --  IFNULL(CL1.CON_LEDGER_NAME,'-- UnMapped --')
                        //                                ELSE
                        //                                IF(?SHOW_GENERALATE IN (0,1),PG.LEDGER_GROUP,IFNULL(CL1.CON_LEDGER_NAME,'-- UnMapped --'))  --  IFNULL(CL1.CON_LEDGER_NAME,'-- UnMapped --')
                        //                                END AS PARENT_GROUP,
                        //                                       IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,
                        //                                       CASE
                        //                                         WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN
                        //                                          CONCAT('    ',IF(?SHOW_GENERALATE IN (0,1),LG.LEDGER_GROUP,CL.CON_LEDGER_NAME))
                        //                                         ELSE
                        //                                       CONCAT('   ',IF(?SHOW_GENERALATE IN (0,1),LG.LEDGER_GROUP,CL.CON_LEDGER_NAME))
                        //                                       END,IF(?SHOW_GENERALATE IN (0,1),LG.LEDGER_GROUP,CL.CON_LEDGER_NAME)) AS LEDGER_GROUP,
                        //                                      IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,
                        //                                          CASE
                        //                                            WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN
                        //                                             CONCAT('   ', ML.LEDGER_NAME)
                        //                                            ELSE
                        //                                             CONCAT('      ', ML.LEDGER_NAME)
                        //                                         END,
                        //                                         ML.LEDGER_NAME) AS LEDGER_NAME,
                        //                                        IF(?SHOW_GENERALATE IN (0,1),ML.LEDGER_CODE,CL.CON_LEDGER_CODE) AS LEDGER_CODE,
                        //                                  -- CAST(IFNULL(SUM(VT.AMOUNT),0) as DECIMAL) AS RECEIPTAMT  
                        //                                  CAST( IFNULL(SUM(VT.AMOUNT),0) as DECIMAL(15,2))  AS RECEIPTAMT
                        //                              FROM MASTER_LEDGER_GROUP LG
                        //                                INNER JOIN MASTER_LEDGER_GROUP PG
                        //                                ON LG.PARENT_GROUP_ID=PG.GROUP_ID
                        //                              LEFT JOIN MASTER_LEDGER ML
                        //                                ON ML.GROUP_ID = LG.GROUP_ID
                        //                              LEFT JOIN PORTAL_CONGREGATION_LEDGER_MAP CLM
                        //                                ON ML.LEDGER_ID = CLM.LEDGER_ID
                        //                              LEFT JOIN PORTAL_CONGREGATION_LEDGER AS CL
                        //                                ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                        //                              LEFT JOIN PORTAL_CONGREGATION_LEDGER AS CL1
                        //                                ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID
                        //                              LEFT JOIN VOUCHER_TRANS VT
                        //                                ON VT.LEDGER_ID = ML.LEDGER_ID
                        //                              LEFT JOIN VOUCHER_MASTER_TRANS MT
                        //                                ON VT.VOUCHER_ID = MT.VOUCHER_ID
                        //                             WHERE MT.PROJECT_ID IN (?PROJECT_ID) AND MT.STATUS = 1 AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND LG.GROUP_ID NOT IN (12, 13, 14)
                        //                                AND ( (MT.VOUCHER_TYPE in ('RC','PY') AND VT.TRANS_MODE='CR') OR (MT.VOUCHER_TYPE = 'JN' AND MT.VOUCHER_SUB_TYPE ='FD' AND VT.TRANS_MODE ='CR') )
                        //                             GROUP BY VT.LEDGER_ID ORDER BY SORT_ORDER";

                        break;
                    }

                case ReportSQLCommand.FinalAccounts.IEReceitpsAmt:
                    {
                        //                        query = @"SELECT IFNULL(SUM(VT.AMOUNT), 0) +
                        //                                   (SELECT IFNULL(SUM(AMOUNT), 0.0) AS AMOUNT
                        //                                      FROM LEDGER_BALANCE AS LB
                        //                                      LEFT JOIN MASTER_LEDGER AS ML
                        //                                        ON LB.LEDGER_ID = ML.LEDGER_ID
                        //                                      LEFT JOIN MASTER_LEDGER_GROUP LG
                        //                                        ON LG.GROUP_ID = ML.GROUP_ID
                        //                                     WHERE PROJECT_ID IN (?PROJECT_ID)
                        //                                       AND TRANS_FLAG = 'OP'
                        //                                       AND LB.AMOUNT > 0
                        //                                       AND LG.GROUP_ID NOT IN (12, 14, 13)
                        //                                       AND LG.NATURE_ID NOT IN (3,4)
                        //                                       AND TRANS_MODE = 'CR'
                        //                                       AND BALANCE_DATE <=?YEAR_FROM) AS RECEIPTAMT
                        //                              FROM MASTER_LEDGER_GROUP LG
                        //                              LEFT JOIN MASTER_LEDGER ML
                        //                                ON ML.GROUP_ID = LG.GROUP_ID
                        //                              LEFT JOIN VOUCHER_TRANS VT
                        //                                ON VT.LEDGER_ID = ML.LEDGER_ID
                        //                              LEFT JOIN VOUCHER_MASTER_TRANS MT
                        //                                ON VT.VOUCHER_ID = MT.VOUCHER_ID
                        //                             WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                        //                               AND MT.VOUCHER_TYPE = 'RC'
                        //                               AND MT.STATUS = 1
                        //                               AND LG.NATURE_ID NOT IN (3,4)
                        //                               AND VOUCHER_DATE <=?YEAR_FROM
                        //                               AND LG.GROUP_ID NOT IN (12, 13)";

                        query = @"SELECT IFNULL(SUM(VT.AMOUNT), 0) +
                                   (SELECT IFNULL(SUM(AMOUNT), 0.0) AS AMOUNT
                                      FROM LEDGER_BALANCE AS LB
                                      LEFT JOIN MASTER_LEDGER AS ML
                                        ON LB.LEDGER_ID = ML.LEDGER_ID
                                      LEFT JOIN MASTER_LEDGER_GROUP LG
                                        ON LG.GROUP_ID = ML.GROUP_ID
                                     WHERE PROJECT_ID IN (?PROJECT_ID)
                                       AND TRANS_FLAG = 'OP'
                                       AND LB.AMOUNT > 0
                                       AND LG.GROUP_ID NOT IN (12, 14, 13)
                                       AND LG.NATURE_ID NOT IN (3, 4)
                                       AND TRANS_MODE = 'CR'
                                       AND BALANCE_DATE <= ?YEAR_FROM) AS RECEIPTAMT
                              FROM MASTER_LEDGER_GROUP LG
                              LEFT JOIN MASTER_LEDGER ML
                                ON ML.GROUP_ID = LG.GROUP_ID
                              LEFT JOIN VOUCHER_TRANS VT
                                ON VT.LEDGER_ID = ML.LEDGER_ID
                              left join project_ledger pl
                                on pl.ledger_id = ml.ledger_id
                              left join master_project mp
                                on mp.project_id = pl.project_id
                              left join master_insti_perference mip
                                on mip.customerid = mp.customerid
                              LEFT JOIN VOUCHER_MASTER_TRANS MT
                                ON VT.VOUCHER_ID = MT.VOUCHER_ID
                               and mt.project_id = mp.project_id
                             WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                              { and mip.customerid in (?LEGAL_ENTITY_ID)}
                              { and mt.branch_id in (?BRANCH_OFFICE_ID)}
                               AND MT.VOUCHER_TYPE = 'RC'
                               AND MT.STATUS = 1
                               AND LG.NATURE_ID NOT IN (3, 4)
                               AND VOUCHER_DATE <= ?YEAR_FROM
                               AND LG.GROUP_ID NOT IN (12, 13)";

                        break;
                    }

                case ReportSQLCommand.FinalAccounts.IEPaymentsAmt:
                    {
                        //                        query = @"SELECT IFNULL(SUM(VT.AMOUNT), 0) +
                        //                                       (SELECT IFNULL(SUM(AMOUNT), 0.0) AS AMOUNT
                        //                                          FROM LEDGER_BALANCE AS LB
                        //                                          LEFT JOIN MASTER_LEDGER AS ML
                        //                                            ON LB.LEDGER_ID = ML.LEDGER_ID
                        //                                          LEFT JOIN MASTER_LEDGER_GROUP LG
                        //                                            ON LG.GROUP_ID = ML.GROUP_ID
                        //                                         WHERE PROJECT_ID IN (?PROJECT_ID)
                        //                                           AND TRANS_FLAG = 'OP'
                        //                                           AND LB.AMOUNT > 0
                        //                                           AND LG.GROUP_ID NOT IN (12, 14, 13)
                        //                                           AND LG.NATURE_ID NOT IN (3,4)
                        //                                           AND TRANS_MODE = 'DR'
                        //                                           AND BALANCE_DATE <=?YEAR_FROM)
                        //                                       AS  PAYMENTAMT
                        //                                  FROM MASTER_LEDGER_GROUP LG
                        //                                  LEFT JOIN MASTER_LEDGER ML
                        //                                    ON ML.GROUP_ID = LG.GROUP_ID
                        //                                  LEFT JOIN VOUCHER_TRANS VT
                        //                                    ON VT.LEDGER_ID = ML.LEDGER_ID
                        //                                  LEFT JOIN VOUCHER_MASTER_TRANS MT
                        //                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID
                        //                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                        //                                   AND MT.VOUCHER_TYPE = 'PY'
                        //                                   AND MT.STATUS = 1
                        //                                   AND LG.NATURE_ID NOT IN (3,4)
                        //                                   AND VOUCHER_DATE <=?YEAR_FROM
                        //                                   AND LG.GROUP_ID NOT IN (12, 13)";

                        query = @"SELECT IFNULL(SUM(VT.AMOUNT), 0) +
                                   (SELECT IFNULL(SUM(AMOUNT), 0.0) AS AMOUNT
                                      FROM LEDGER_BALANCE AS LB
                                      LEFT JOIN MASTER_LEDGER AS ML
                                        ON LB.LEDGER_ID = ML.LEDGER_ID
                                      LEFT JOIN MASTER_LEDGER_GROUP LG
                                        ON LG.GROUP_ID = ML.GROUP_ID
                                     WHERE PROJECT_ID IN (?PROJECT_ID)
                                       AND TRANS_FLAG = 'OP'
                                       AND LB.AMOUNT > 0
                                       AND LG.GROUP_ID NOT IN (12, 14, 13)
                                       AND LG.NATURE_ID NOT IN (3, 4)
                                       AND TRANS_MODE = 'DR'
                                       AND BALANCE_DATE <= ?YEAR_FROM) AS PAYMENTAMT
                              FROM MASTER_LEDGER_GROUP LG
                              LEFT JOIN MASTER_LEDGER ML
                                ON ML.GROUP_ID = LG.GROUP_ID
                              LEFT JOIN PROJECT_LEDGER PL
                                ON PL.LEDGER_ID = ML.LEDGER_ID
                              LEFT JOIN MASTER_PROJECT MP
                                ON MP.PROJECT_ID = PL.PROJECT_ID
                              LEFT JOIN MASTER_INSTI_PERFERENCE MIP
                                ON MIP.CUSTOMERID = MP.CUSTOMERID
                              LEFT JOIN VOUCHER_TRANS VT
                                ON VT.LEDGER_ID = ML.LEDGER_ID
                              LEFT JOIN VOUCHER_MASTER_TRANS MT
                                ON VT.VOUCHER_ID = MT.VOUCHER_ID
                               AND MT.PROJECT_ID = MP.PROJECT_ID
                             WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                              { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}
                              { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}
                               AND MT.VOUCHER_TYPE = 'PY'
                               AND MT.STATUS = 1
                               AND LG.NATURE_ID NOT IN (3, 4)
                               AND VOUCHER_DATE <= ?YEAR_FROM
                               AND LG.GROUP_ID NOT IN (12, 13)";

                        break;
                    }
                #region Receipt Journal
                case ReportSQLCommand.FinalAccounts.ReceiptJournal:
                    {
                        query = "SELECT T.* FROM( SELECT DATE(FDA.INVESTMENT_DATE) AS INVESTMENT_DATE, MLG.LEDGER_CODE,ML.GROUP_CODE,ML.LEDGER_GROUP,ML.GROUP_ID,\n" +
                                 "       IFNULL(FDR.MATURITY_DATE, FDA.MATURED_ON) AS MATURITY_DATE,\n" +
                                 "       FDR.RENEWAL_DATE,\n" +
                                 "       FDA.FD_ACCOUNT_NUMBER, FDR.INTEREST_LEDGER_ID AS LEDGER_ID,\n" +
                                 "       CONCAT(MBK.BANK, ' (', MBK.BRANCH, ')') AS BANK,\n" +
                                 "       MLG.LEDGER_NAME, \n" +
                                 "       MPR.PROJECT,\n" +
                                 "       IFNULL(FDR.INTEREST_RATE, FDA.INTEREST_RATE) AS INTEREST_RATE,\n" +
                                 "       FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                 "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) AS PRINCIPLE_AMOUNT,\n" +
                                 "       IFNULL(FDR.INTEREST_AMOUNT, 0) AS INTEREST_AMOUNT,\n" +
                                 "       cast( IFNULL(SUM(FDR.ACCUMULATED_INTEREST_AMOUNT), 0) as decimal(15,2)) AS RECEIPTAMT,\n" +
                                 "       FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                 "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                                 "       IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) AS TOTAL_AMOUNT,\n" +
                                 "       IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS WITHDRAWAL_AMOUNT,\n" +
                                 "       FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                 "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                                 "       IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                 "       IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS BALANCE_AMOUNT,\n" +
                                 "\n" +
                                 "       IFNULL(IF(FDA.INTEREST_TYPE=0,'Simple','Compound'),FDR.INTEREST_MODE) AS INTEREST_MODE,\n" +
                                 "       IF(FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                 "          IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                                 "          IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                 "          IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) = 0,\n" +
                                 "          'Closed',\n" +
                                 "          'Active') AS CLOSING_STATUS\n" +
                                 "  FROM FD_ACCOUNT AS FDA\n" +
                                 "  LEFT JOIN (SELECT FD_ACCOUNT_ID,BRANCH_ID,\n" +
                                 "                    MAX(MATURITY_DATE) AS MATURITY_DATE,INTEREST_LEDGER_ID,\n" +
                                 "                    MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                                 "                    SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                                 "                    SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                                 "                    SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                                 "               FROM FD_RENEWAL\n" +
                                 "              WHERE STATUS = 1 \n" +
                                 "                AND RENEWAL_DATE < ?DATE_FROM \n" +
                                 "              GROUP BY FD_ACCOUNT_ID) AS FDRO\n" +
                                 "    ON FDA.FD_ACCOUNT_ID = FDRO.FD_ACCOUNT_ID\n" +
                                 "\n" +
                                 "  LEFT JOIN (SELECT FD_ACCOUNT_ID,BRANCH_ID,\n" +
                                 "                    MAX(MATURITY_DATE) AS MATURITY_DATE,INTEREST_LEDGER_ID,\n" +
                                 "                    MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                                 "                    INTEREST_RATE,\n" +
                                 "                    IF(INTEREST_TYPE=0,'Simple','Compound') AS INTEREST_MODE,\n" +
                                 "                    SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                                 "                    SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                                 "                    SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                                 "               FROM FD_RENEWAL\n" +
                                 "              WHERE STATUS = 1 \n" +
                                 "                AND RENEWAL_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                                 "              GROUP BY FD_ACCOUNT_ID ORDER BY FD_ACCOUNT_ID DESC) AS FDR\n" +
                                 "    ON FDA.FD_ACCOUNT_ID = FDR.FD_ACCOUNT_ID\n" +
                                 "  LEFT JOIN MASTER_BANK AS MBK\n" +
                                 "    ON FDA.BANK_ID = MBK.BANK_ID\n" +
                                 "  LEFT JOIN MASTER_PROJECT MPR\n" +
                                 "    ON FDA.PROJECT_ID = MPR.PROJECT_ID\n" +
                                 "  INNER JOIN MASTER_LEDGER MLG\n" +
                                 "    ON FDR.INTEREST_LEDGER_ID = MLG.LEDGER_ID\n" +
                                 "  LEFT JOIN MASTER_LEDGER_GROUP AS ML\n" +
                                 "      ON MLG.GROUP_ID=ML.GROUP_ID\n" +
                                 " WHERE FDA.STATUS = 1\n" +
                                 "   AND FDA.INVESTMENT_DATE <= ?DATE_TO \n" +
                                 " {AND MPR.PROJECT_ID IN (?PROJECT_ID)}\n" +
                                 " { AND MPR.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                 "{ AND FDR.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                 "   AND FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                 "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) <> 0) AS T GROUP BY LEDGER_ID";
                        break;
                    }
                #endregion
                #endregion

                #region Trail Balancecurrect Amount


                case ReportSQLCommand.FinalAccounts.TrialBalaceCurrent:
                    {
                        //                        query = @"SELECT
                        //                                FN.GROUP_CODE,FN.LEDGER_GROUP,FN.LEDGER_CODE,FN.LEDGER_NAME,
                        //                                SUM(FN.FIXED_DEPOSIT_CREDIT) AS FIXED_DEPOSIT_CREDIT,
                        //                                SUM(FN.FIXED_DEPOSIT_DEBIT) AS FIXED_DEPOSIT_DEBIT,
                        //                                SUM(FN.CASH_IN_HAND_CREDIT) AS CASH_IN_HAND_CREDIT,
                        //                                SUM(FN.CASH_IN_HAND_DEBIT) AS CASH_IN_HAND_DEBIT,
                        //                                SUM(FN.BANK_ACCOUNT_CREDIT) AS BANK_ACCOUNT_CREDIT,
                        //                                SUM(FN.BANK_ACCOUNT_DEBIT) AS BANK_ACCOUNT_DEBIT
                        //                                 FROM
                        //                                 (
                        //                                 SELECT
                        //                                                                                  LG.GROUP_CODE,
                        //                                                                                  LG.LEDGER_GROUP,
                        //                                                                                  ML.LEDGER_CODE,
                        //                                                                                  ML.LEDGER_NAME,
                        //                                                                                 '' AS 'FIXED_DEPOSIT_CREDIT',
                        //                                                                                 '' AS 'CASH_IN_HAND_CREDIT',
                        //                                                                                  ''  AS 'BANK_ACCOUNT_CREDIT',
                        //                                                                                  CASE
                        //                                                                                  WHEN LG.GROUP_ID=14 AND TRANS_MODE='CR' THEN IFNULL(VT.AMOUNT,0.0)
                        //                                                                                  ELSE 0.0
                        //                                                                                 END AS 'FIXED_DEPOSIT_DEBIT',
                        //                                                                                CASE
                        //                                                                                WHEN LG.GROUP_ID=13 AND TRANS_MODE='CR' THEN IFNULL(VT.AMOUNT,0.0)
                        //                                                                                 ELSE 0.0
                        //                                                                              END AS 'CASH_IN_HAND_DEBIT',
                        //                                                                            CASE
                        //                                                       WHEN LG.GROUP_ID=12 AND TRANS_MODE='CR' THEN IFNULL(VT.AMOUNT,0.0)
                        //                                                       ELSE 0.0
                        //                                                      END AS 'BANK_ACCOUNT_DEBIT'
                        //
                        //                                                      FROM MASTER_LEDGER_GROUP LG
                        //                                                      LEFT JOIN MASTER_LEDGER ML
                        //                                                      ON ML.GROUP_ID = LG.GROUP_ID
                        //                                                      LEFT JOIN VOUCHER_TRANS VT
                        //                                                      ON VT.LEDGER_ID = ML.LEDGER_ID
                        //                                                      LEFT JOIN VOUCHER_MASTER_TRANS MT
                        //                                                      ON VT.VOUCHER_ID = MT.VOUCHER_ID
                        //                                                      WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                        //                                                      AND LG.GROUP_ID IN(12,13,14)
                        //                                                      AND MT.STATUS = 1
                        //                                                      AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                        //
                        //                                                            UNION ALL
                        //
                        //                                                                             SELECT
                        //                                                                                  LG.GROUP_CODE,
                        //                                                                                  LG.LEDGER_GROUP,
                        //                                                                                  ML.LEDGER_CODE,
                        //                                                                                  ML.LEDGER_NAME,
                        //
                        //                                                                                  CASE
                        //                                                                                  WHEN LG.GROUP_ID=14 AND TRANS_MODE='DR' THEN IFNULL(VT.AMOUNT,0.0)
                        //                                                                                  ELSE 0.0
                        //                                                                                 END AS 'FIXED_DEPOSIT_CREDIT',
                        //                                                                                CASE
                        //                                                                                WHEN LG.GROUP_ID=13 AND TRANS_MODE='DR' THEN IFNULL(VT.AMOUNT,0.0)
                        //                                                                                 ELSE 0.0
                        //                                                                              END AS 'CASH_IN_HAND_CREDIT',
                        //                                                                            CASE
                        //                                                       WHEN LG.GROUP_ID=12 AND TRANS_MODE='DR' THEN IFNULL(VT.AMOUNT,0.0)
                        //                                                       ELSE 0.0
                        //                                                      END AS 'BANK_ACCOUNT_CREDIT',
                        //                                                              '' AS 'FIXED_DEPOSIT_DEBIT',
                        //                                                                                  '' AS 'CASH_IN_HAND_DEBIT',
                        //                                                                                  '' AS 'BANK_ACCOUNT_DEBIT'
                        //
                        //                                                      FROM MASTER_LEDGER_GROUP LG
                        //                                                      LEFT JOIN MASTER_LEDGER ML
                        //                                                      ON ML.GROUP_ID = LG.GROUP_ID
                        //                                                      LEFT JOIN VOUCHER_TRANS VT
                        //                                                      ON VT.LEDGER_ID = ML.LEDGER_ID
                        //                                                      LEFT JOIN VOUCHER_MASTER_TRANS MT
                        //                                                      ON VT.VOUCHER_ID = MT.VOUCHER_ID
                        //                                                      WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                        //                                                      AND LG.GROUP_ID IN(12,13,14)
                        //                                                      AND MT.STATUS = 1
                        //                                                      AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO) as fn
                        //                                GROUP BY FN.LEDGER_CODE";
                        query = "SELECT FN.GROUP_CODE,\n" +
                                "       FN.LEDGER_GROUP,\n" +
                                "       FN.LEDGER_CODE,\n" +
                                "       FN.LEDGER_NAME,\n" +
                            // "       SUM(FN.FIXED_DEPOSIT_CREDIT) AS FIXED_DEPOSIT_CREDIT,\n" +
                            // "       SUM(FN.FIXED_DEPOSIT_DEBIT) AS FIXED_DEPOSIT_DEBIT,\n" +
                                "       SUM(FN.CASH_IN_HAND_CREDIT) AS CASH_IN_HAND_CREDIT,\n" +
                                "       SUM(FN.CASH_IN_HAND_DEBIT) AS CASH_IN_HAND_DEBIT,\n" +
                                "       SUM(FN.BANK_ACCOUNT_CREDIT) AS BANK_ACCOUNT_CREDIT,\n" +
                                "       SUM(FN.BANK_ACCOUNT_DEBIT) AS BANK_ACCOUNT_DEBIT\n" +
                                "  FROM (SELECT LG.GROUP_CODE,\n" +
                                "               LG.LEDGER_GROUP,\n" +
                                "               ML.LEDGER_CODE,\n" +
                                "               ML.LEDGER_NAME,\n" +
                            //"               '' AS 'FIXED_DEPOSIT_CREDIT',\n" +
                                "               '' AS 'CASH_IN_HAND_CREDIT',\n" +
                                "               '' AS 'BANK_ACCOUNT_CREDIT',\n" +
                            // "               CASE\n" +
                            //"                 WHEN LG.GROUP_ID = 14 AND TRANS_MODE = 'CR' THEN\n" +
                            //"                  IFNULL(VT.AMOUNT, 0.0)\n" +
                            //"                 ELSE\n" +
                            //"                  0.0\n" +
                            //"               END AS 'FIXED_DEPOSIT_DEBIT',\n" +
                                "               CASE\n" +
                                "                 WHEN LG.GROUP_ID = 13 AND TRANS_MODE = 'CR' THEN\n" +
                                "                  IFNULL(VT.AMOUNT, 0.0)\n" +
                                "                 ELSE\n" +
                                "                  0.0\n" +
                                "               END AS 'CASH_IN_HAND_DEBIT',\n" +
                                "               CASE\n" +
                                "                 WHEN LG.GROUP_ID = 12 AND TRANS_MODE = 'CR' THEN\n" +
                                "                  IFNULL(VT.AMOUNT, 0.0)\n" +
                                "                 ELSE\n" +
                                "                  0.0\n" +
                                "               END AS 'BANK_ACCOUNT_DEBIT'\n" +
                                "\n" +
                                "          FROM MASTER_LEDGER_GROUP LG\n" +
                                "          LEFT JOIN MASTER_LEDGER ML\n" +
                                "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "          LEFT JOIN VOUCHER_TRANS VT\n" +
                                "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "           LEFT JOIN PROJECT_LEDGER PL\n" +
                                "           on PL.LEDGER_ID = ML.LEDGER_ID\n" +
                                "          LEFT JOIN MASTER_PROJECT MP\n" +
                                "            on MP.PROJECT_ID  = PL.PROJECT_ID\n" +
                                "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "            on MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "           and MT.PROJECT_ID = MP.PROJECT_ID\n" +
                                "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "          { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "          { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "           AND LG.GROUP_ID IN (12, 13)\n" +
                                "           AND MT.STATUS = 1\n" +
                                "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "\n" +
                                "        UNION ALL\n" +
                                "\n" +
                                "        SELECT LG.GROUP_CODE,\n" +
                                "               LG.LEDGER_GROUP,\n" +
                                "               ML.LEDGER_CODE,\n" +
                                "               ML.LEDGER_NAME,\n" +
                                "\n" +
                            // "               CASE\n" +
                            // "                 WHEN LG.GROUP_ID = 14 AND TRANS_MODE = 'DR' THEN\n" +
                            // "                  IFNULL(VT.AMOUNT, 0.0)\n" +
                            // "                 ELSE\n" +
                            //"                  0.0\n" +
                            // "               END AS 'FIXED_DEPOSIT_CREDIT',\n" +
                                "               CASE\n" +
                                "                 WHEN LG.GROUP_ID = 13 AND TRANS_MODE = 'DR' THEN\n" +
                                "                  IFNULL(VT.AMOUNT, 0.0)\n" +
                                "                 ELSE\n" +
                                "                  0.0\n" +
                                "               END AS 'CASH_IN_HAND_CREDIT',\n" +
                                "               CASE\n" +
                                "                 WHEN LG.GROUP_ID = 12 AND TRANS_MODE = 'DR' THEN\n" +
                                "                  IFNULL(VT.AMOUNT, 0.0)\n" +
                                "                 ELSE\n" +
                                "                  0.0\n" +
                                "               END AS 'BANK_ACCOUNT_CREDIT',\n" +
                            //"               '' AS 'FIXED_DEPOSIT_DEBIT',\n" +
                                "               '' AS 'CASH_IN_HAND_DEBIT',\n" +
                                "               '' AS 'BANK_ACCOUNT_DEBIT'\n" +
                                "\n" +
                                "          FROM MASTER_LEDGER_GROUP LG\n" +
                                "          LEFT JOIN MASTER_LEDGER ML\n" +
                                "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "          LEFT JOIN VOUCHER_TRANS VT\n" +
                                "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "           LEFT JOIN PROJECT_LEDGER PL\n" +
                                "           on PL.LEDGER_ID = ML.LEDGER_ID\n" +
                                "          LEFT JOIN MASTER_PROJECT MP\n" +
                                "            on MP.PROJECT_ID  = PL.PROJECT_ID\n" +
                                "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "            on MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "           and MT.PROJECT_ID = MP.PROJECT_ID\n" +
                                "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "          { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "          { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "           AND LG.GROUP_ID IN (12, 13)\n" +
                                "           AND MT.STATUS = 1\n" +
                                "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO) as fn\n" +
                                " GROUP BY FN.LEDGER_CODE;";

                        break;
                    }

                #endregion

                #region Trial Balances
                case ReportSQLCommand.FinalAccounts.TrialBalanceList:
                    {
                        // in the T Receipts and Payments sub query of Opening Balance I replaced ?Year_TO from Date_From
                        // int the T Receipts and Payments sub query Voucher Date between Date_from to Begin_from Replaced into Date_From all the sub query of T 
                        query = @"SELECT FN.GROUP_ID,
                                       CASE
                                         WHEN NATURE_ID = 3 THEN
                                          1
                                         WHEN NATURE_ID = 4 THEN
                                          2
                                         WHEN NATURE_ID = 2 THEN
                                          3
                                         WHEN NATURE_ID = 1 THEN
                                          4
                                       END AS SORT_ORDER,
                                       FN.LEDGER_ID,
                                       FN.NATURE_ID,
                                       FN.GROUP_CODE,
                                       FN.LEDGER_GROUP,
                                       FN.LEDGER_CODE,
                                       FN.LEDGER_NAME,
                                       SUM(FN.OP_DEBIT) AS OP_DEBIT,
                                       SUM(FN.OP_CREDIT) AS OP_CREDIT,
                                       SUM(FN.CUR_DEBIT) AS CURRENTTRANS_DEBIT,
                                       SUM(FN.CUR_CREDIT) AS CURRENTTRANS_CREDIT
                                  FROM (SELECT T.GROUP_ID,
                                               T.SORT_ORDER,
                                               T.LEDGER_ID,
                                               T.NATURE_ID,
                                               T.GROUP_CODE,
                                               T.LEDGER_GROUP,
                                               T.LEDGER_CODE,
                                               T.LEDGER_NAME,
                                               CASE
                                                 WHEN SUM(T.OP_DEBIT) > SUM(T.OP_CREDIT) THEN
                                                  SUM(T.OP_DEBIT) - SUM(T.OP_CREDIT)
                                                 ELSE
                                                  0.00
                                               END AS OP_DEBIT,
                                               CASE
                                                 WHEN SUM(T.OP_CREDIT) > SUM(T.OP_DEBIT) THEN
                                                  SUM(T.OP_CREDIT) - SUM(T.OP_DEBIT)
                                                 ELSE
                                                  0.00
                                               END AS OP_CREDIT,
                                               '' AS 'CUR_DEBIT',
                                               '' As 'CUR_CREDIT'
                                          FROM (SELECT LG.GROUP_ID,
                                                       LG.SORT_ORDER,
                                                       ML.LEDGER_ID,
                                                       MN.NATURE_ID,
                                                       LG.GROUP_CODE,
                                                       LG.LEDGER_GROUP,
                                                       ML.LEDGER_CODE,
                                                       ML.LEDGER_NAME,
                                                       SUM(CASE
                                                             WHEN LB2.TRANS_MODE = 'DR' THEN
                                                              LB2.AMOUNT
                                                             ELSE
                                                              0
                                                           END) AS 'OP_DEBIT',
                                                       SUM(CASE
                                                             WHEN LB2.TRANS_MODE = 'CR' THEN
                                                              LB2.AMOUNT
                                                             ELSE
                                                              0
                                                           END) AS 'OP_CREDIT',
                                                       '' AS 'CUR_DEBIT',
                                                       '' As 'CUR_CREDIT'
                                                  FROM MASTER_LEDGER AS ML
                                                 INNER JOIN MASTER_LEDGER_GROUP AS LG
                                                    ON ML.GROUP_ID = LG.GROUP_ID
                                                 INNER JOIN (SELECT LB.BALANCE_DATE,
                                                                   LB.PROJECT_ID,
                                                                   LB.LEDGER_ID,
                                                                   LB.AMOUNT,
                                                                   LB.TRANS_MODE
                                                              FROM LEDGER_BALANCE AS LB
                                                              LEFT JOIN (SELECT LBA.PROJECT_ID,
                                                                               LBA.LEDGER_ID,
                                                                               MAX(LBA.BALANCE_DATE) AS BAL_DATE
                                                                          FROM LEDGER_BALANCE LBA
                                                                         WHERE 1 = 1
                                                                              --    AND LBA.BALANCE_DATE <?DATE_FROM
                                                                           AND LBA.BALANCE_DATE <= ?YEAR_TO

                                                                           AND LBA.TRANS_FLAG = 'OP'
                                                                         GROUP BY LBA.PROJECT_ID,
                                                                                  LBA.LEDGER_ID) AS LB1
                                                                ON LB.PROJECT_ID = LB1.PROJECT_ID
                                                               AND LB.LEDGER_ID = LB1.LEDGER_ID
                                                             INNER JOIN MASTER_PROJECT MP
                                                                ON LB.PROJECT_ID = MP.PROJECT_ID
                                                             WHERE LB.PROJECT_ID IN (?PROJECT_ID)
                                                             { AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID) }
                                                             { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                                               AND MP.CUSTOMERID IN (0)
                                                               AND LB.TRANS_FLAG = 'OP'
                                                               AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2
                                                    ON ML.LEDGER_ID = LB2.LEDGER_ID
                                                  LEFT JOIN MASTER_NATURE MN
                                                    ON MN.NATURE_ID = LG.NATURE_ID
                                                 WHERE 1 = 1
                                                   AND ML.STATUS = 0
                                                   AND LG.GROUP_ID NOT IN (12, 13, 14)
                                                   AND MN.NATURE_ID IN (1, 2)
                                                 GROUP BY ML.LEDGER_ID
                                                UNION ALL
                                                SELECT LG.GROUP_ID,
                                                       LG.SORT_ORDER,
                                                       ML.LEDGER_ID,
                                                       MN.NATURE_ID,
                                                       LG.GROUP_CODE,
                                                       LG.LEDGER_GROUP,
                                                       ML.LEDGER_CODE,
                                                       ML.LEDGER_NAME,
                                                       CASE
                                                         WHEN VOUCHER_TYPE IN ('PY') AND VT.TRANS_MODE = 'DR' THEN
                                                          IFNULL(SUM(VT.AMOUNT), 0.0)
                                                         ELSE
                                                          '0.0'
                                                       END AS 'OP_DEBIT',
                                                       CASE
                                                         WHEN VOUCHER_TYPE IN ('RC') AND VT.TRANS_MODE = 'CR' THEN
                                                          IFNULL(SUM(VT.AMOUNT), 0.0)
                                                         ELSE
                                                          '0.0'
                                                       END AS 'OP_CREDIT',
                                                       '' AS 'CUR_DEBIT',
                                                       '' As 'CUR_CREDIT'
                                                  FROM MASTER_LEDGER_GROUP LG
                
                                                  LEFT JOIN MASTER_LEDGER ML
                                                    ON ML.GROUP_ID = LG.GROUP_ID
                                                  LEFT JOIN VOUCHER_TRANS VT
                                                    ON VT.LEDGER_ID = ML.LEDGER_ID
                                                  LEFT JOIN VOUCHER_MASTER_TRANS MT
                                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID
                                                   AND VT.BRANCH_ID = MT.BRANCH_ID
                                                  LEFT JOIN MASTER_NATURE MN
                                                    ON MN.NATURE_ID = LG.NATURE_ID
                                                  LEFT JOIN MASTER_PROJECT MP
                                                    ON MP.PROJECT_ID = MT.PROJECT_ID
                                                  LEFT JOIN PROJECT_BRANCH PB
                                                    ON PB.PROJECT_ID = MT.PROJECT_ID
                                                   AND PB.BRANCH_ID = MT.BRANCH_ID
                                                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP
                                                    ON MIP.CUSTOMERID = MP.CUSTOMERID
                                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                                                 { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }  
                                                 { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                                 AND MT.STATUS = 1
                                                   AND ML.STATUS = 0
                                                   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?BEGIN_FROM
                                                   AND LG.GROUP_ID NOT IN (12, 13)
                                                   AND MN.NATURE_ID IN (1, 2)
                                                 GROUP BY VT.LEDGER_ID, VT.TRANS_MODE
                                                UNION ALL
                                                SELECT LG.GROUP_ID,
                                                       LG.SORT_ORDER,
                                                       ML.LEDGER_ID,
                                                       MN.NATURE_ID,
                                                       LG.GROUP_CODE,
                                                       LG.LEDGER_GROUP,
                                                       ML.LEDGER_CODE,
                                                       ML.LEDGER_NAME,
                                                       CASE
                                                         WHEN VT.TRANS_MODE = 'DR' THEN
                                                          IFNULL(SUM(VT.AMOUNT), 0.0)
                                                         ELSE
                                                          '0.0'
                                                       END AS 'OP_DEBIT',
                                                       CASE
                                                         WHEN VT.TRANS_MODE = 'CR' THEN
                                                          IFNULL(SUM(VT.AMOUNT), 0.0)
                                                         ELSE
                                                          '0.0'
                                                       END AS 'OP_CREDIT',
                                                       '' AS 'CUR_DEBIT',
                                                       '' As 'CUR_CREDIT'
                                                  FROM MASTER_LEDGER_GROUP LG
                                                  LEFT JOIN MASTER_LEDGER ML
                                                    ON ML.GROUP_ID = LG.GROUP_ID
                                                  LEFT JOIN VOUCHER_TRANS VT
                                                    ON VT.LEDGER_ID = ML.LEDGER_ID
                                                  LEFT JOIN VOUCHER_MASTER_TRANS MT
                                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID
                                                   AND VT.BRANCH_ID = MT.BRANCH_ID
                                                  LEFT JOIN PROJECT_LEDGER PL
                                                    ON PL.LEDGER_ID = ML.LEDGER_ID
                                                  LEFT JOIN MASTER_PROJECT MP
                                                    ON MP.PROJECT_ID = PL.PROJECT_ID
                                                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP
                                                    ON MIP.CUSTOMERID = MP.CUSTOMERID
                                                  LEFT JOIN MASTER_NATURE MN
                                                    ON MN.NATURE_ID = LG.NATURE_ID
                                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                                                 { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }
                                                 { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                                 AND MT.STATUS = 1
                                                   AND ML.STATUS = 0
                                                   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?BEGIN_FROM

                                                   AND VOUCHER_TYPE IN ('JN')
                                                   AND LG.GROUP_ID NOT IN (12, 13)
                                                   AND MN.NATURE_ID IN (1, 2)
                                                 GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID, VT.TRANS_MODE) AS T
                                         GROUP BY T.LEDGER_ID
                                        UNION ALL
                                        SELECT TT.GROUP_ID,
                                               TT.SORT_ORDER,
                                               TT.LEDGER_ID,
                                               TT.NATURE_ID,
                                               TT.GROUP_CODE,
                                               TT.LEDGER_GROUP,
                                               TT.LEDGER_CODE,
                                               TT.LEDGER_NAME,
                                               CASE
                                                 WHEN SUM(TT.OP_DEBIT) > SUM(TT.OP_CREDIT) THEN
                                                  SUM(TT.OP_DEBIT) - SUM(TT.OP_CREDIT)
                                                 ELSE
                                                  0.00
                                               END AS OP_DEBIT,
                                               CASE
                                                 WHEN SUM(TT.OP_CREDIT) > SUM(TT.OP_DEBIT) THEN
                                                  SUM(TT.OP_CREDIT) - SUM(TT.OP_DEBIT)
                                                 ELSE
                                                  0.00
                                               END AS OP_CREDIT,
                                               '' AS 'CUR_DEBIT',
                                               '' As 'CUR_CREDIT'
                                          FROM (SELECT LG.GROUP_ID,
                                                       LG.SORT_ORDER,
                                                       ML.LEDGER_ID,
                                                       MN.NATURE_ID,
                                                       LG.GROUP_CODE,
                                                       LG.LEDGER_GROUP,
                                                       ML.LEDGER_CODE,
                                                       ML.LEDGER_NAME,
                                                       SUM(CASE
                                                             WHEN LB2.TRANS_MODE = 'DR' THEN
                                                              LB2.AMOUNT
                                                             ELSE
                                                              0
                                                           END) AS OP_DEBIT,
                                                       SUM(CASE
                                                             WHEN LB2.TRANS_MODE = 'CR' THEN
                                                              LB2.AMOUNT
                                                             ELSE
                                                              0
                                                           END) AS OP_CREDIT,
                                                       '' AS 'CUR_DEBIT',
                                                       '' As 'CUR_CREDIT'
                                                  FROM MASTER_LEDGER AS ML
                                                 INNER JOIN MASTER_LEDGER_GROUP AS LG
                                                    ON ML.GROUP_ID = LG.GROUP_ID
                                                 INNER JOIN (SELECT LB.BALANCE_DATE,
                                                                   LB.PROJECT_ID,
                                                                   LB.LEDGER_ID,
                                                                   LB.AMOUNT,
                                                                   LB.TRANS_MODE
                                                              FROM LEDGER_BALANCE AS LB
                                                              INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LB.PROJECT_ID
                                                              LEFT JOIN (SELECT LBA.PROJECT_ID,
                                                                               LBA.LEDGER_ID,
                                                                               MAX(LBA.BALANCE_DATE) AS BAL_DATE
                                                                          FROM LEDGER_BALANCE LBA
                                                                         
                                                                         WHERE 1 = 1
                                                                           AND LBA.BALANCE_DATE < ?DATE_FROM

                                                                        -- '2012-03-31 00:00:00'
                                                                         GROUP BY LBA.PROJECT_ID,
                                                                                  LBA.LEDGER_ID) AS LB1
                                                                ON LB.PROJECT_ID = LB1.PROJECT_ID
                                                               AND LB.LEDGER_ID = LB1.LEDGER_ID
                                                               AND LB.AMOUNT > 0
                                                             WHERE LB.PROJECT_ID IN (?PROJECT_ID)
                                                             { AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID) }
                                                             { AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                                               AND LB.TRANS_FLAG = 'OP'
                                                               AND LB.BALANCE_DATE <= LB1.BAL_DATE) LB2
                                                    ON ML.LEDGER_ID = LB2.LEDGER_ID
                                                  LEFT JOIN MASTER_NATURE MN
                                                    ON MN.NATURE_ID = LG.NATURE_ID
                                                 WHERE LG.GROUP_ID IN (SELECT LG.GROUP_ID
                                                                         FROM MASTER_LEDGER ML
                                                                        INNER JOIN PROJECT_LEDGER PL
                                                                           ON ML.LEDGER_ID = PL.LEDGER_ID
                                                                        INNER JOIN MASTER_LEDGER_GROUP LG
                                                                           ON ML.GROUP_ID = LG.GROUP_ID
                                                                        WHERE PL.PROJECT_ID IN (?PROJECT_ID)
                                                                          AND LG.NATURE_ID IN (3, 4)
                                                                          AND ML.STATUS = 0)
                                                   AND LG.GROUP_ID NOT IN (12, 13)
                                                   AND ML.STATUS = 0
                                                 GROUP BY ML.LEDGER_ID
                                                UNION ALL
                                                SELECT LG.GROUP_ID,
                                                       LG.SORT_ORDER,
                                                       ML.LEDGER_ID,
                                                       MN.NATURE_ID,
                                                       LG.GROUP_CODE,
                                                       LG.LEDGER_GROUP,
                                                       ML.LEDGER_CODE,
                                                       ML.LEDGER_NAME,
                                                       -- FD Investment amount is not calculated so Mismatched the FD Amount (Chinna)
                                                       CASE
                                                         WHEN VOUCHER_TYPE IN
                                                              ('PY',
                                                               'RC',
                                                               IF(VOUCHER_SUB_TYPE = 'FD', 'CN', '')) AND
                                                              VT.TRANS_MODE = 'DR' THEN
                                                          IFNULL((VT.AMOUNT), 0.0)
                                                         ELSE
                                                          '0.0'
                                                       END AS 'OP_DEBIT',
                                                       CASE
                                                         WHEN VOUCHER_TYPE IN
                                                              ('RC',
                                                               'PY',
                                                               IF(VOUCHER_SUB_TYPE = 'FD', 'CN', '')) AND
                                                              VT.TRANS_MODE = 'CR' THEN
                                                          IFNULL((VT.AMOUNT), 0.0)
                                                         ELSE
                                                          '0.0'
                                                       END AS 'OP_CREDIT',
                                                       '' AS 'CUR_DEBIT',
                                                       '' As 'CUR_CREDIT'
                                                  FROM MASTER_LEDGER_GROUP LG
                
                                                  LEFT JOIN MASTER_LEDGER ML
                                                    ON ML.GROUP_ID = LG.GROUP_ID
                                                  LEFT JOIN VOUCHER_TRANS VT
                                                    ON VT.LEDGER_ID = ML.LEDGER_ID
                                                  LEFT JOIN VOUCHER_MASTER_TRANS MT
                                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID
                                                   AND VT.BRANCH_ID = MT.BRANCH_ID
                                                  LEFT JOIN MASTER_PROJECT MP
                                                    ON MP.PROJECT_ID = MT.PROJECT_ID
                                                  LEFT JOIN PROJECT_BRANCH PB
                                                    ON PB.PROJECT_ID = MT.PROJECT_ID
                                                   AND PB.BRANCH_ID = MT.BRANCH_ID
                                                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP
                                                    ON MIP.CUSTOMERID = MP.CUSTOMERID
                                                  LEFT JOIN MASTER_NATURE MN
                                                    ON MN.NATURE_ID = LG.NATURE_ID
                                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                                                 { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }
                                                 { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                                   AND MT.STATUS = 1
                                                   AND ML.STATUS = 0
                                                   AND VOUCHER_DATE < ?DATE_FROM
                                                   AND LG.GROUP_ID NOT IN (12, 13)
                                                   AND MN.NATURE_ID IN (3, 4)
                                                UNION ALL
                                                SELECT LG.GROUP_ID,
                                                       LG.SORT_ORDER,
                                                       ML.LEDGER_ID,
                                                       MN.NATURE_ID,
                                                       LG.GROUP_CODE,
                                                       LG.LEDGER_GROUP,
                                                       ML.LEDGER_CODE,
                                                       ML.LEDGER_NAME,
                                                       CASE
                                                         WHEN VT.TRANS_MODE = 'DR' THEN
                                                          IFNULL(SUM(VT.AMOUNT), 0.0)
                                                         ELSE
                                                          '0.0'
                                                       END AS 'OP_DEBIT',
                                                       CASE
                                                         WHEN VT.TRANS_MODE = 'CR' THEN
                                                          IFNULL(SUM(VT.AMOUNT), 0.0)
                                                         ELSE
                                                          '0.0'
                                                       END AS 'OP_CREDIT',
                                                       '' AS 'CUR_DEBIT',
                                                       '' As 'CUR_CREDIT'
                                                  FROM MASTER_LEDGER_GROUP LG
                                                  LEFT JOIN MASTER_LEDGER ML
                                                    ON ML.GROUP_ID = LG.GROUP_ID
                                                  LEFT JOIN VOUCHER_TRANS VT
                                                    ON VT.LEDGER_ID = ML.LEDGER_ID
                                                  LEFT JOIN VOUCHER_MASTER_TRANS MT
                                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID
                                                   AND VT.BRANCH_ID = MT.BRANCH_ID
                                                  LEFT JOIN MASTER_PROJECT MP
                                                    ON MP.PROJECT_ID = MT.PROJECT_ID
                                                  LEFT JOIN PROJECT_BRANCH PB
                                                    ON PB.PROJECT_ID = MT.PROJECT_ID
                                                   AND PB.BRANCH_ID = MT.BRANCH_ID
                                                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP
                                                    ON MIP.CUSTOMERID = MP.CUSTOMERID
                                                  LEFT JOIN MASTER_NATURE MN
                                                    ON MN.NATURE_ID = LG.NATURE_ID
                                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                                                  { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }
                                                  { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                                   AND MT.STATUS = 1
                                                   AND ML.STATUS = 0
                                                   AND VOUCHER_DATE < ?DATE_FROM
                                                   AND VOUCHER_TYPE IN ('JN')
                                                   AND LG.GROUP_ID NOT IN (12, 13)
                                                   AND MN.NATURE_ID IN (3, 4)
                                                 GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID, VT.TRANS_MODE) AS TT
                                         GROUP BY TT.LEDGER_ID
                                        UNION ALL
                                        SELECT T.GROUP_ID,
                                               T.SORT_ORDER,
                                               T.LEDGER_ID,
                                               T.NATURE_ID,
                                               T.GROUP_CODE,
                                               T.LEDGER_GROUP,
                                               T.LEDGER_CODE,
                                               T.LEDGER_NAME,
                                               CASE
                                                 WHEN SUM(T.OP_DEBIT) > SUM(T.OP_CREDIT) THEN
                                                  SUM(T.OP_DEBIT) - SUM(T.OP_CREDIT)
                                                 ELSE
                                                  0.00
                                               END AS OP_DEBIT,
                                               CASE
                                                 WHEN SUM(T.OP_CREDIT) > SUM(T.OP_DEBIT) THEN
                                                  SUM(T.OP_CREDIT) - SUM(T.OP_DEBIT)
                                                 ELSE
                                                  0.00
                                               END AS OP_CREDIT,
                                               T.CUR_DEBIT,
                                               T.CUR_CREDIT
                                          FROM (SELECT LG.GROUP_ID,
                                                       LG.SORT_ORDER,
                                                       ML.LEDGER_ID,
                                                       MN.NATURE_ID,
                                                       LG.GROUP_CODE,
                                                       LG.LEDGER_GROUP,
                                                       ML.LEDGER_CODE,
                                                       ML.LEDGER_NAME,
                                                       SUM(CASE
                                                             WHEN LB2.TRANS_MODE = 'DR' THEN
                                                              LB2.AMOUNT +
                                                              (SELECT IFNULL(SUM(VT.AMOUNT), 0) +
                                                                      (SELECT IFNULL(SUM(AMOUNT), 0.0) AS AMOUNT
                                                                         FROM LEDGER_BALANCE AS LB
                                                                         LEFT JOIN MASTER_LEDGER AS ML
                                                                           ON LB.LEDGER_ID = ML.LEDGER_ID
                                                                         LEFT JOIN MASTER_LEDGER_GROUP LG
                                                                           ON LG.GROUP_ID = ML.GROUP_ID
                                                                        WHERE PROJECT_ID IN (?PROJECT_ID)
                                                                          AND TRANS_FLAG = 'OP'
                                                                          AND LB.AMOUNT > 0
                                                                          AND ML.STATUS = 0
                                                                          AND LG.GROUP_ID NOT IN (12, 14, 13)
                                                                          AND LG.NATURE_ID IN (1, 2)
                                                                          AND TRANS_MODE = 'DR'
                                                                          AND BALANCE_DATE < ?YEAR_FROM) AS PAYMENTAMT
                                                                 FROM MASTER_LEDGER_GROUP LG
                                                                 LEFT JOIN MASTER_LEDGER ML
                                                                   ON ML.GROUP_ID = LG.GROUP_ID
                                                                 LEFT JOIN VOUCHER_TRANS VT
                                                                   ON VT.LEDGER_ID = ML.LEDGER_ID
                                                                 LEFT JOIN VOUCHER_MASTER_TRANS MT
                                                                   ON VT.VOUCHER_ID = MT.VOUCHER_ID
                                                                  AND VT.BRANCH_ID = MT.BRANCH_ID
                                                                INNER JOIN MASTER_PROJECT MP 
                                                                  ON MP.PROJECT_ID = MT.PROJECT_ID
                                                                WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                                                                {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }
                                                                { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                                                  AND MT.VOUCHER_TYPE = 'PY'
                                                                  AND ML.STATUS = 0
                                                                  AND MT.STATUS = 1
                                                                  AND LG.NATURE_ID IN (1, 2)
                                                                  AND VOUCHER_DATE < ?YEAR_FROM

                                                                  AND LG.GROUP_ID NOT IN (12, 13))
                                                             ELSE
                                                              0
                                                           END) AS OP_DEBIT,
                                                       SUM(CASE
                                                             WHEN LB2.TRANS_MODE = 'CR' THEN
                                                              LB2.AMOUNT +
                                                              (SELECT IFNULL(SUM(VT.AMOUNT), 0) +
                                                                      (SELECT IFNULL(SUM(AMOUNT), 0.0) AS AMOUNT
                                                                         FROM LEDGER_BALANCE AS LB
                                                                         LEFT JOIN MASTER_LEDGER AS ML
                                                                           ON LB.LEDGER_ID = ML.LEDGER_ID
                                                                         LEFT JOIN MASTER_LEDGER_GROUP LG
                                                                           ON LG.GROUP_ID = ML.GROUP_ID
                                                                        WHERE PROJECT_ID IN (?PROJECT_ID)
                                                                          AND TRANS_FLAG = 'OP'
                                                                          AND LB.AMOUNT > 0
                                                                          AND ML.STATUS = 0
                                                                          AND LG.GROUP_ID NOT IN (12, 14, 13)
                                                                          AND LG.NATURE_ID NOT IN (1, 2)
                                                                          AND TRANS_MODE = 'CR'
                                                                          AND BALANCE_DATE < ?YEAR_FROM) AS RECEIPTAMT
                                                                 FROM MASTER_LEDGER_GROUP LG
                                                                 LEFT JOIN MASTER_LEDGER ML
                                                                   ON ML.GROUP_ID = LG.GROUP_ID
                                                                 LEFT JOIN VOUCHER_TRANS VT
                                                                   ON VT.LEDGER_ID = ML.LEDGER_ID
                                                                 LEFT JOIN VOUCHER_MASTER_TRANS MT
                                                                   ON VT.VOUCHER_ID = MT.VOUCHER_ID
                                                                  AND VT.BRANCH_ID = MT.BRANCH_ID
                                                                  INNER JOIN MASTER_PROJECT MP 
                                                                  ON MP.PROJECT_ID = MT.PROJECT_ID
                                                                WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                                                                { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }
                                                                { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                                                  AND MT.VOUCHER_TYPE = 'RC'
                                                                  AND ML.STATUS = 0
                                                                  AND MT.STATUS = 1
                                                                  AND LG.NATURE_ID NOT IN (1, 2)
                                                                  AND VOUCHER_DATE < ?YEAR_FROM
                                                                  AND LG.GROUP_ID NOT IN (12, 13))

                                                             ELSE
                                                              0
                                                           END) AS OP_CREDIT,
                                                       '' AS 'CUR_DEBIT',
                                                       '' As 'CUR_CREDIT'

                                                  FROM MASTER_LEDGER AS ML
                                                 INNER JOIN MASTER_LEDGER_GROUP AS LG
                                                    ON ML.GROUP_ID = LG.GROUP_ID
                                                 INNER JOIN (SELECT LB.BALANCE_DATE,
                                                                   LB.PROJECT_ID,
                                                                   LB.LEDGER_ID,
                                                                   LB.AMOUNT,
                                                                   LB.TRANS_MODE
                                                              FROM LEDGER_BALANCE AS LB
                                                              INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LB.PROJECT_ID
                                                              LEFT JOIN (SELECT LBA.PROJECT_ID,
                                                                               LBA.LEDGER_ID,
                                                                               MAX(LBA.BALANCE_DATE) AS BAL_DATE
                                                                          FROM LEDGER_BALANCE LBA
                                                                         WHERE 1 = 1
                                                                           AND LBA.BALANCE_DATE <LBA.LEDGER_ID) AS LB1
                                                                               
                                                                ON LB.PROJECT_ID = LB1.PROJECT_ID
                                                               AND LB.LEDGER_ID = LB1.LEDGER_ID
                                                               AND LB.AMOUNT > 0
                                                             WHERE LB.PROJECT_ID IN (?PROJECT_ID)

                                                             { AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID) }
                                                             { AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                                               AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2
                                                    ON ML.LEDGER_ID = LB2.LEDGER_ID
                                                  LEFT JOIN MASTER_NATURE MN
                                                    ON MN.NATURE_ID = LG.NATURE_ID
                                                 WHERE LG.GROUP_ID IN (SELECT LG.GROUP_ID
                                                                         FROM MASTER_LEDGER ML
                                                                        INNER JOIN PROJECT_LEDGER PL
                                                                           ON ML.LEDGER_ID = PL.LEDGER_ID
                                                                        INNER JOIN MASTER_LEDGER_GROUP LG
                                                                           ON ML.GROUP_ID = LG.GROUP_ID
                                                                        WHERE PL.PROJECT_ID IN (?PROJECT_ID)
                                                                          AND LG.NATURE_ID IN (3, 4)
                                                                          AND ML.STATUS = 0)
                                                   and LG.GROUP_ID NOT IN (12, 13, 14)
                                                   AND ML.LEDGER_ID = 3
                                                 GROUP BY ML.LEDGER_ID) AS T
                                        UNION ALL
        
                                        SELECT T.GROUP_ID,
                                               T.SORT_ORDER,
                                               T.LEDGER_ID,
                                               T.NATURE_ID,
                                               T.GROUP_CODE,
                                               T.LEDGER_GROUP,
                                               T.LEDGER_CODE,
                                               T.LEDGER_NAME,
                                               T.OP_CREDIT,
                                               T.OP_DEBIT,
                                               SUM(T.CURRENTTRANS_DEBIT) AS CURRENTTRANS_DEBIT,
                                               SUM(T.CURRENTTRANS_CREDIT) AS CURRENTTRANS_CREDIT
                                          FROM (SELECT LG.GROUP_ID,
                                                       LG.SORT_ORDER,
                                                       ML.LEDGER_ID,
                                                       MN.NATURE_ID,
                                                       LG.GROUP_CODE,
                                                       LG.LEDGER_GROUP,
                                                       ML.LEDGER_CODE,
                                                       ML.LEDGER_NAME,
                                                       '' AS 'OP_CREDIT',
                                                       '' AS 'OP_DEBIT',
                                                       CASE
                                                         WHEN VOUCHER_TYPE IN ('RC', 'PY') AND
                                                              VT.TRANS_MODE = 'DR' THEN
                                                          IFNULL(SUM(VT.AMOUNT), 0.0)
                                                         ELSE
                                                          '0.0'
                                                       END AS 'CURRENTTRANS_DEBIT',
                                                       CASE
                                                         WHEN VOUCHER_TYPE IN ('RC', 'PY') AND
                                                              VT.TRANS_MODE = 'CR' THEN
                                                          IFNULL(SUM(VT.AMOUNT), 0.0)
                                                         ELSE
                                                          '0.0'
                                                       END AS 'CURRENTTRANS_CREDIT'
                                                  FROM MASTER_LEDGER_GROUP LG
                
                                                  LEFT JOIN MASTER_LEDGER ML
                                                    ON ML.GROUP_ID = LG.GROUP_ID
                                                  LEFT JOIN VOUCHER_TRANS VT
                                                    ON VT.LEDGER_ID = ML.LEDGER_ID
                                                  LEFT JOIN VOUCHER_MASTER_TRANS MT
                                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID
                                                   AND VT.BRANCH_ID = MT.BRANCH_ID
                                                  LEFT JOIN MASTER_PROJECT MP
                                                    ON MP.PROJECT_ID = MT.PROJECT_ID
                                                  LEFT JOIN PROJECT_BRANCH PB
                                                    ON PB.PROJECT_ID = MT.PROJECT_ID
                                                   AND PB.BRANCH_ID = MT.BRANCH_ID
                                                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP
                                                    ON MIP.CUSTOMERID = MP.CUSTOMERID
                                                  LEFT JOIN MASTER_NATURE MN
                                                    ON MN.NATURE_ID = LG.NATURE_ID
                                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                                                 { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }
                                                 { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID) } AND MT.STATUS = 1
                                                   AND ML.STATUS = 0
                                                   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                                                   AND LG.GROUP_ID NOT IN (12, 13)
                                                 GROUP BY VT.LEDGER_ID, VT.VOUCHER_ID, VT.TRANS_MODE) AS T
                                         GROUP BY T.LEDGER_ID
        
                                        UNION ALL
        
                                        SELECT LG.GROUP_ID,
                                               LG.SORT_ORDER,
                                               ML.LEDGER_ID,
                                               MN.NATURE_ID,
                                               LG.GROUP_CODE,
                                               LG.LEDGER_GROUP,
                                               ML.LEDGER_CODE,
                                               ML.LEDGER_NAME,
                                               '' AS 'OP_CREDIT',
                                               '' AS 'OP_DEBIT',
                                               CASE
                                                 WHEN VT.TRANS_MODE = 'DR' THEN
                                                  IFNULL(SUM(VT.AMOUNT), 0.0)
                                                 ELSE
                                                  '0.0'
                                               END AS 'CURRENTTRANS_DEBIT',
                                               CASE
                                                 WHEN VT.TRANS_MODE = 'CR' THEN
                                                  IFNULL(SUM(VT.AMOUNT), 0.0)
                                                 ELSE
                                                  '0.0'
                                               END AS 'CURRENTTRANS_CREDIT'
                                          FROM MASTER_LEDGER_GROUP LG
                                          LEFT JOIN MASTER_LEDGER ML
                                            ON ML.GROUP_ID = LG.GROUP_ID
                                          LEFT JOIN VOUCHER_TRANS VT
                                            ON VT.LEDGER_ID = ML.LEDGER_ID
                                          LEFT JOIN VOUCHER_MASTER_TRANS MT
                                            ON VT.VOUCHER_ID = MT.VOUCHER_ID
                                           AND VT.BRANCH_ID = MT.BRANCH_ID
                                          LEFT JOIN MASTER_PROJECT MP
                                            ON MP.PROJECT_ID = MT.PROJECT_ID
                                          LEFT JOIN PROJECT_BRANCH PB
                                            ON PB.PROJECT_ID = MT.PROJECT_ID
                                           AND PB.BRANCH_ID = MT.BRANCH_ID
                                          LEFT JOIN MASTER_INSTI_PERFERENCE MIP
                                            ON MIP.CUSTOMERID = MP.CUSTOMERID
                                          LEFT JOIN MASTER_NATURE MN
                                            ON MN.NATURE_ID = LG.NATURE_ID
                                         WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                                         { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }
                                         { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                           AND MT.STATUS = 1
                                           AND ML.STATUS = 0
                                           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO

                                           and VOUCHER_TYPE IN ('JN', 'CN')
                                           AND VOUCHER_SUB_TYPE = 'FD'
                                           AND LG.GROUP_ID NOT IN (12, 13)
                                         GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID, VT.TRANS_MODE
        
                                        UNION ALL
        
                                        SELECT LG.GROUP_ID,
                                               LG.SORT_ORDER,
                                               ML.LEDGER_ID,
                                               MN.NATURE_ID,
                                               LG.GROUP_CODE,
                                               LG.LEDGER_GROUP,
                                               ML.LEDGER_CODE,
                                               ML.LEDGER_NAME,
                                               '' AS 'OP_CREDIT',
                                               '' AS 'OP_DEBIT',
                                               CASE
                                                 WHEN VT.TRANS_MODE = 'DR' THEN
                                                  IFNULL(SUM(VT.AMOUNT), 0.0)
                                                 ELSE
                                                  '0.0'
                                               END AS 'CURRENTTRANS_DEBIT',
                                               CASE
                                                 WHEN VT.TRANS_MODE = 'CR' THEN
                                                  IFNULL(SUM(VT.AMOUNT), 0.0)
                                                 ELSE
                                                  '0.0'
                                               END AS 'CURRENTTRANS_CREDIT'
                                          FROM MASTER_LEDGER_GROUP LG
                                          LEFT JOIN MASTER_LEDGER ML
                                            ON ML.GROUP_ID = LG.GROUP_ID
                                          LEFT JOIN VOUCHER_TRANS VT
                                            ON VT.LEDGER_ID = ML.LEDGER_ID
                                          LEFT JOIN VOUCHER_MASTER_TRANS MT
                                            ON VT.VOUCHER_ID = MT.VOUCHER_ID
                                           AND VT.BRANCH_ID = MT.BRANCH_ID
                                          LEFT JOIN MASTER_PROJECT MP
                                            ON MP.PROJECT_ID = MT.PROJECT_ID
                                          LEFT JOIN PROJECT_BRANCH PB
                                            ON PB.PROJECT_ID = MT.PROJECT_ID
                                           AND PB.BRANCH_ID = MT.BRANCH_ID
                                          LEFT JOIN MASTER_INSTI_PERFERENCE MIP
                                            ON MIP.CUSTOMERID = MP.CUSTOMERID
                                          LEFT JOIN MASTER_NATURE MN
                                            ON MN.NATURE_ID = LG.NATURE_ID
                                         WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                                         { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }
                                         { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                         AND MT.STATUS = 1
                                           AND ML.STATUS = 0
                                           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO

                                           and voucher_type in ('JN')
                                           and voucher_sub_type not in ('fd')
                                           AND LG.GROUP_ID NOT IN (12, 13)
                                         GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID, VT.TRANS_MODE) AS FN
                                 GROUP BY FN.GROUP_ID, FN.LEDGER_ID
                                HAVING SUM(FN.OP_DEBIT) > 0 || SUM(FN.OP_CREDIT) > 0 || SUM(FN.CUR_DEBIT) > 0 || SUM(FN.CUR_CREDIT) > 0
                                 ORDER BY FIELD(NATURE_ID, 3, 4, 2, 1)";


                        // chinna 07.06.2019
                        #region old Query
                        //query = "SELECT FN.GROUP_ID,\n" +
                        //        "       FN.SORT_ORDER,\n" +
                        //        "       FN.LEDGER_ID,\n" +
                        //        "       FN.NATURE_ID,\n" +
                        //        "       FN.GROUP_CODE,\n" +
                        //        "       FN.LEDGER_GROUP,\n" +
                        //        "       FN.LEDGER_CODE,\n" +
                        //        "       FN.LEDGER_NAME,\n" +
                        //        "       SUM(FN.OP_DEBIT) AS OP_DEBIT,\n" +
                        //        "       SUM(FN.OP_CREDIT) AS OP_CREDIT,\n" +
                        //        "       SUM(FN.CUR_DEBIT) AS CURRENTTRANS_DEBIT,\n" +
                        //        "       SUM(FN.CUR_CREDIT) AS CURRENTTRANS_CREDIT\n" +
                        //        "  FROM (SELECT T.GROUP_ID,\n" +
                        //        "               T.SORT_ORDER,\n" +
                        //        "               T.LEDGER_ID,\n" +
                        //        "               T.NATURE_ID,\n" +
                        //        "               T.GROUP_CODE,\n" +
                        //        "               T.LEDGER_GROUP,\n" +
                        //        "               T.LEDGER_CODE,\n" +
                        //        "               T.LEDGER_NAME,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN SUM(T.OP_DEBIT) > SUM(T.OP_CREDIT) THEN\n" +
                        //        "                  SUM(T.OP_DEBIT) - SUM(T.OP_CREDIT)\n" +
                        //        "                 ELSE\n" +
                        //        "                  0.00\n" +
                        //        "               END AS OP_DEBIT,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN SUM(T.OP_CREDIT) > SUM(T.OP_DEBIT) THEN\n" +
                        //        "                  SUM(T.OP_CREDIT) - SUM(T.OP_DEBIT)\n" +
                        //        "                 ELSE\n" +
                        //        "                  0.00\n" +
                        //        "               END AS OP_CREDIT,\n" +
                        //        "               '' AS 'CUR_DEBIT',\n" +
                        //        "               '' As 'CUR_CREDIT'\n" +
                        //        "          FROM (SELECT LG.GROUP_ID,\n" +
                        //        "                       LG.SORT_ORDER,\n" +
                        //        "                       ML.LEDGER_ID,\n" +
                        //        "                       MN.NATURE_ID,\n" +
                        //        "                       LG.GROUP_CODE,\n" +
                        //        "                       LG.LEDGER_GROUP,\n" +
                        //        "                       ML.LEDGER_CODE,\n" +
                        //        "                       ML.LEDGER_NAME,\n" +
                        //        "                       SUM(CASE\n" +
                        //        "                             WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //        "                              LB2.AMOUNT\n" +
                        //        "                             ELSE\n" +
                        //        "                              0\n" +
                        //        "                           END) AS 'OP_DEBIT',\n" +
                        //        "                       SUM(CASE\n" +
                        //        "                             WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        //        "                              LB2.AMOUNT\n" +
                        //        "                             ELSE\n" +
                        //        "                              0\n" +
                        //        "                           END) AS 'OP_CREDIT',\n" +
                        //        "                       '' AS 'CUR_DEBIT',\n" +
                        //        "                       '' As 'CUR_CREDIT'\n" +
                        //        "                  FROM MASTER_LEDGER AS ML\n" +
                        //        "                 INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        //        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                 INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                        //        "                                   LB.PROJECT_ID,\n" +
                        //        "                                   LB.LEDGER_ID,\n" +
                        //        "                                   LB.AMOUNT,\n" +
                        //        "                                   LB.TRANS_MODE\n" +
                        //        "                              FROM LEDGER_BALANCE AS LB\n" +
                        //        "                              LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                        //        "                                               LBA.LEDGER_ID,\n" +
                        //        "                                               MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //        "                                          FROM LEDGER_BALANCE LBA\n" +
                        //        "                                         WHERE 1 = 1\n" +
                        //        "                                           AND LBA.BALANCE_DATE <= ?YEAR_TO\n" +
                        //        "                                           AND LBA.TRANS_FLAG = 'OP'\n" +
                        //        "                                         GROUP BY LBA.PROJECT_ID,\n" +
                        //        "                                                  LBA.LEDGER_ID) AS LB1\n" +
                        //        "                                ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        //        "                               AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //        "                             INNER JOIN MASTER_PROJECT MP\n" +
                        //        "                                ON LB.PROJECT_ID = MP.PROJECT_ID\n" +
                        //        "                             WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                             {  AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //        "                               AND MP.CUSTOMERID IN (0)\n" +
                        //        "                               AND LB.TRANS_FLAG = 'OP'\n" +
                        //        "                               AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                        //        "                    ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        //        "                  LEFT JOIN MASTER_NATURE MN\n" +
                        //        "                    ON MN.NATURE_ID = LG.NATURE_ID\n" +
                        //        "                 WHERE 1 = 1\n" +
                        //        "                   AND ML.STATUS = 0\n" +
                        //        "                   AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                        //        "                   AND MN.NATURE_ID IN (1, 2)\n" +
                        //        "                 GROUP BY ML.LEDGER_ID\n" +
                        //        "                UNION ALL\n" +
                        //        "                SELECT LG.GROUP_ID,\n" +
                        //        "                       LG.SORT_ORDER,\n" +
                        //        "                       ML.LEDGER_ID,\n" +
                        //        "                       MN.NATURE_ID,\n" +
                        //        "                       LG.GROUP_CODE,\n" +
                        //        "                       LG.LEDGER_GROUP,\n" +
                        //        "                       ML.LEDGER_CODE,\n" +
                        //        "                       ML.LEDGER_NAME,\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN VOUCHER_TYPE IN ('PY') AND VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          '0.0'\n" +
                        //        "                       END AS 'OP_DEBIT',\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN VOUCHER_TYPE IN ('RC') AND VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          '0.0'\n" +
                        //        "                       END AS 'OP_CREDIT',\n" +
                        //        "                       '' AS 'CUR_DEBIT',\n" +
                        //        "                       '' As 'CUR_CREDIT'\n" +
                        //        "                  FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "\n" +
                        //        "                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                  LEFT JOIN MASTER_NATURE MN\n" +
                        //        "                    ON MN.NATURE_ID = LG.NATURE_ID\n" +
                        //        "\n" +
                        //        "                  LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "                  LEFT JOIN PROJECT_BRANCH PB\n" +
                        //        "                    ON PB.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "                   AND PB.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "\n" +
                        //        "                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                 {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //        "                   AND MT.STATUS = 1\n" +
                        //        "                   AND ML.STATUS = 0\n" +
                        //        "                   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?BEGIN_FROM\n" +
                        //        "                   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "                   AND MN.NATURE_ID IN (1, 2)\n" +
                        //        "                 GROUP BY VT.LEDGER_ID\n" +
                        //        "                UNION ALL\n" +
                        //        "                SELECT LG.GROUP_ID,\n" +
                        //        "                       LG.SORT_ORDER,\n" +
                        //        "                       ML.LEDGER_ID,\n" +
                        //        "                       MN.NATURE_ID,\n" +
                        //        "                       LG.GROUP_CODE,\n" +
                        //        "                       LG.LEDGER_GROUP,\n" +
                        //        "                       ML.LEDGER_CODE,\n" +
                        //        "                       ML.LEDGER_NAME,\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          '0.0'\n" +
                        //        "                       END AS 'OP_DEBIT',\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          '0.0'\n" +
                        //        "                       END AS 'OP_CREDIT',\n" +
                        //        "                       '' AS 'CUR_DEBIT',\n" +
                        //        "                       '' As 'CUR_CREDIT'\n" +
                        //        "                  FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "\n" +
                        //        "                  LEFT JOIN PROJECT_LEDGER PL\n" +
                        //        "                    ON PL.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                  LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "                    ON MP.PROJECT_ID = PL.PROJECT_ID\n" +
                        //        "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "\n" +
                        //        "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                  LEFT JOIN MASTER_NATURE MN\n" +
                        //        "                    ON MN.NATURE_ID = LG.NATURE_ID\n" +
                        //        "\n" +
                        //        "                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                  {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //        "                   AND MT.STATUS = 1\n" +
                        //        "                   AND ML.STATUS = 0\n" +
                        //        "                   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?BEGIN_FROM\n" +
                        //        "                   AND VOUCHER_TYPE IN ('JN')\n" +
                        //        "                   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "                   AND MN.NATURE_ID IN (1, 2)\n" +
                        //        "                 GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID, VT.TRANS_MODE) AS T\n" +
                        //        "         GROUP BY T.LEDGER_ID\n" +
                        //        "        UNION ALL\n" +
                        //        "        SELECT TT.GROUP_ID,\n" +
                        //        "               TT.SORT_ORDER,\n" +
                        //        "               TT.LEDGER_ID,\n" +
                        //        "               TT.NATURE_ID,\n" +
                        //        "               TT.GROUP_CODE,\n" +
                        //        "               TT.LEDGER_GROUP,\n" +
                        //        "               TT.LEDGER_CODE,\n" +
                        //        "               TT.LEDGER_NAME,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN SUM(TT.OP_DEBIT) > SUM(TT.OP_CREDIT) THEN\n" +
                        //        "                  SUM(TT.OP_DEBIT) - SUM(TT.OP_CREDIT)\n" +
                        //        "                 ELSE\n" +
                        //        "                  0.00\n" +
                        //        "               END AS OP_DEBIT,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN SUM(TT.OP_CREDIT) > SUM(TT.OP_DEBIT) THEN\n" +
                        //        "                  SUM(TT.OP_CREDIT) - SUM(TT.OP_DEBIT)\n" +
                        //        "                 ELSE\n" +
                        //        "                  0.00\n" +
                        //        "               END AS OP_CREDIT,\n" +
                        //        "               '' AS 'CUR_DEBIT',\n" +
                        //        "               '' As 'CUR_CREDIT'\n" +
                        //        "          FROM (SELECT LG.GROUP_ID,\n" +
                        //        "                       LG.SORT_ORDER,\n" +
                        //        "                       ML.LEDGER_ID,\n" +
                        //        "                       MN.NATURE_ID,\n" +
                        //        "                       LG.GROUP_CODE,\n" +
                        //        "                       LG.LEDGER_GROUP,\n" +
                        //        "                       ML.LEDGER_CODE,\n" +
                        //        "                       ML.LEDGER_NAME,\n" +
                        //        "                       SUM(CASE\n" +
                        //        "                             WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //        "                              LB2.AMOUNT\n" +
                        //        "                             ELSE\n" +
                        //        "                              0\n" +
                        //        "                           END) AS OP_DEBIT,\n" +
                        //        "                       SUM(CASE\n" +
                        //        "                             WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        //        "                              LB2.AMOUNT\n" +
                        //        "                             ELSE\n" +
                        //        "                              0\n" +
                        //        "                           END) AS OP_CREDIT,\n" +
                        //        "                       '' AS 'CUR_DEBIT',\n" +
                        //        "                       '' As 'CUR_CREDIT'\n" +
                        //        "                  FROM MASTER_LEDGER AS ML\n" +
                        //        "                 INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        //        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                 INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                        //        "                                   LB.PROJECT_ID,\n" +
                        //        "                                   LB.LEDGER_ID,\n" +
                        //        "                                   LB.AMOUNT,\n" +
                        //        "                                   LB.TRANS_MODE\n" +
                        //        "                              FROM LEDGER_BALANCE AS LB\n" +
                        //        "                              LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                        //        "                                               LBA.LEDGER_ID,\n" +
                        //        "                                               MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //        "                                          FROM LEDGER_BALANCE LBA\n" +
                        //        "                                         WHERE 1 = 1\n" +
                        //        "                                           AND LBA.BALANCE_DATE < ?DATE_FROM\n" +
                        //        "\n" +
                        //        "                                         GROUP BY LBA.PROJECT_ID,\n" +
                        //        "                                                  LBA.LEDGER_ID) AS LB1\n" +
                        //        "                                ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        //        "                               AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //        "                               AND LB.AMOUNT > 0\n" +
                        //        "                             WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                             {  AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "                               AND LB.TRANS_FLAG = 'OP'\n" +
                        //        "                               AND LB.BALANCE_DATE <= LB1.BAL_DATE) LB2\n" +
                        //        "                    ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        //        "                  LEFT JOIN MASTER_NATURE MN\n" +
                        //        "                    ON MN.NATURE_ID = LG.NATURE_ID\n" +
                        //        "                 WHERE LG.GROUP_ID IN (SELECT LG.GROUP_ID\n" +
                        //        "                                         FROM MASTER_LEDGER ML\n" +
                        //        "                                        INNER JOIN PROJECT_LEDGER PL\n" +
                        //        "                                           ON ML.LEDGER_ID = PL.LEDGER_ID\n" +
                        //        "                                        INNER JOIN MASTER_LEDGER_GROUP LG\n" +
                        //        "                                           ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                                        WHERE PL.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                                          AND LG.NATURE_ID IN (3, 4)\n" +
                        //        "                                          AND ML.STATUS = 0)\n" +
                        //        "                   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "                   AND ML.LEDGER_ID NOT IN (3)\n" +
                        //        "                   AND ML.STATUS = 0\n" +
                        //        "                 GROUP BY ML.LEDGER_ID\n" +
                        //        "                UNION ALL\n" +
                        //        "                SELECT LG.GROUP_ID,\n" +
                        //        "                       LG.SORT_ORDER,\n" +
                        //        "                       ML.LEDGER_ID,\n" +
                        //        "                       MN.NATURE_ID,\n" +
                        //        "                       LG.GROUP_CODE,\n" +
                        //        "                       LG.LEDGER_GROUP,\n" +
                        //        "                       ML.LEDGER_CODE,\n" +
                        //        "                       ML.LEDGER_NAME,\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN VOUCHER_TYPE IN ('PY') AND VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          '0.0'\n" +
                        //        "                       END AS 'OP_DEBIT',\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN VOUCHER_TYPE IN ('RC',IF(VOUCHER_SUB_TYPE ='FD','CN','')) AND VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          '0.0'\n" +
                        //        "                       END AS 'OP_CREDIT',\n" +
                        //        "                       '' AS 'CUR_DEBIT',\n" +
                        //        "                       '' As 'CUR_CREDIT'\n" +
                        //        "                  FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "\n" +
                        //        "                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "\n" +
                        //        "                  LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "                  LEFT JOIN PROJECT_BRANCH PB\n" +
                        //        "                    ON PB.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "                   AND PB.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "\n" +
                        //        "                  LEFT JOIN MASTER_NATURE MN\n" +
                        //        "                    ON MN.NATURE_ID = LG.NATURE_ID\n" +
                        //        "                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                 {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //        "                   AND MT.STATUS = 1\n" +
                        //        "                   AND ML.STATUS = 0\n" +
                        //        "                   AND VOUCHER_DATE < ?DATE_FROM\n" +
                        //        "                   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "                   AND MN.NATURE_ID IN (3, 4)\n" +
                        //        "                 GROUP BY VT.LEDGER_ID\n" +
                        //        "                UNION ALL\n" +
                        //        "                SELECT LG.GROUP_ID,\n" +
                        //        "                       LG.SORT_ORDER,\n" +
                        //        "                       ML.LEDGER_ID,\n" +
                        //        "                       MN.NATURE_ID,\n" +
                        //        "                       LG.GROUP_CODE,\n" +
                        //        "                       LG.LEDGER_GROUP,\n" +
                        //        "                       ML.LEDGER_CODE,\n" +
                        //        "                       ML.LEDGER_NAME,\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          '0.0'\n" +
                        //        "                       END AS 'OP_DEBIT',\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //        "                         ELSE\n" +
                        //        "                          '0.0'\n" +
                        //        "                       END AS 'OP_CREDIT',\n" +
                        //        "                       '' AS 'CUR_DEBIT',\n" +
                        //        "                       '' As 'CUR_CREDIT'\n" +
                        //        "                  FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "\n" +
                        //        "                  LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "                  LEFT JOIN PROJECT_BRANCH PB\n" +
                        //        "                    ON PB.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "                   AND PB.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "                  LEFT JOIN MASTER_NATURE MN\n" +
                        //        "                    ON MN.NATURE_ID = LG.NATURE_ID\n" +
                        //        "                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                 {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //        "                   AND MT.STATUS = 1\n" +
                        //        "                   AND ML.STATUS = 0\n" +
                        //        "                   AND VOUCHER_DATE < ?DATE_FROM\n" +
                        //        "                   AND VOUCHER_TYPE IN ('JN')\n" +
                        //        "                   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "                   AND MN.NATURE_ID IN (3, 4)\n" +
                        //        "                 GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID, VT.TRANS_MODE) AS TT\n" +
                        //        "         GROUP BY TT.LEDGER_ID\n" +
                        //        "        UNION ALL\n" +
                        //        "        SELECT T.GROUP_ID,\n" +
                        //        "               T.SORT_ORDER,\n" +
                        //        "               T.LEDGER_ID,\n" +
                        //        "               T.NATURE_ID,\n" +
                        //        "               T.GROUP_CODE,\n" +
                        //        "               T.LEDGER_GROUP,\n" +
                        //        "               T.LEDGER_CODE,\n" +
                        //        "               T.LEDGER_NAME,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN SUM(T.OP_DEBIT) > SUM(T.OP_CREDIT) THEN\n" +
                        //        "                  SUM(T.OP_DEBIT) - SUM(T.OP_CREDIT)\n" +
                        //        "                 ELSE\n" +
                        //        "                  0.00\n" +
                        //        "               END AS OP_DEBIT,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN SUM(T.OP_CREDIT) > SUM(T.OP_DEBIT) THEN\n" +
                        //        "                  SUM(T.OP_CREDIT) - SUM(T.OP_DEBIT)\n" +
                        //        "                 ELSE\n" +
                        //        "                  0.00\n" +
                        //        "               END AS OP_CREDIT,\n" +
                        //        "               T.CUR_DEBIT,\n" +
                        //        "               T.CUR_CREDIT\n" +
                        //        "          FROM (SELECT LG.GROUP_ID,\n" +
                        //        "                       LG.SORT_ORDER,\n" +
                        //        "                       ML.LEDGER_ID,\n" +
                        //        "                       MN.NATURE_ID,\n" +
                        //        "                       LG.GROUP_CODE,\n" +
                        //        "                       LG.LEDGER_GROUP,\n" +
                        //        "                       ML.LEDGER_CODE,\n" +
                        //        "                       ML.LEDGER_NAME,\n" +
                        //        "                       SUM(CASE\n" +
                        //        "                             WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //        "                              LB2.AMOUNT +\n" +
                        //        "                              (SELECT IFNULL(SUM(VT.AMOUNT), 0) +\n" +
                        //        "                                      (SELECT IFNULL(SUM(AMOUNT), 0.0) AS AMOUNT\n" +
                        //        "                                         FROM LEDGER_BALANCE AS LB\n" +
                        //        "                                         LEFT JOIN MASTER_LEDGER AS ML\n" +
                        //        "                                           ON LB.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                                         LEFT JOIN MASTER_LEDGER_GROUP LG\n" +
                        //        "                                           ON LG.GROUP_ID = ML.GROUP_ID\n" +
                        //        "                                        WHERE PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                                          AND TRANS_FLAG = 'OP'\n" +
                        //        "                                          AND LB.AMOUNT > 0\n" +
                        //        "                                          AND ML.STATUS = 0\n" +
                        //        "                                          AND LG.GROUP_ID NOT IN (12, 14, 13)\n" +
                        //        "                                          AND LG.NATURE_ID IN (1, 2)\n" +
                        //        "                                          AND TRANS_MODE = 'DR'\n" +
                        //        "                                          AND BALANCE_DATE < ?YEAR_FROM) AS PAYMENTAMT\n" +
                        //        "                                 FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "                                 LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                                   ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                                 LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                                   ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                                 LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                                   ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                                  AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "\n" +
                        //        "                                WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                                 { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //        "                                  AND MT.VOUCHER_TYPE = 'PY'\n" +
                        //        "                                  AND ML.STATUS = 0\n" +
                        //        "                                  AND MT.STATUS = 1\n" +
                        //        "                                  AND LG.NATURE_ID IN (1, 2)\n" +
                        //        "                                  AND VOUCHER_DATE < ?YEAR_FROM\n" +
                        //        "                                  AND LG.GROUP_ID NOT IN (12, 13))\n" +
                        //        "                             ELSE\n" +
                        //        "                              0\n" +
                        //        "                           END) AS OP_DEBIT,\n" +
                        //        "                       SUM(CASE\n" +
                        //        "                             WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        //        "                              LB2.AMOUNT +\n" +
                        //        "                              (SELECT IFNULL(SUM(VT.AMOUNT), 0) +\n" +
                        //        "                                      (SELECT IFNULL(SUM(AMOUNT), 0.0) AS AMOUNT\n" +
                        //        "                                         FROM LEDGER_BALANCE AS LB\n" +
                        //        "                                         LEFT JOIN MASTER_LEDGER AS ML\n" +
                        //        "                                           ON LB.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                                         LEFT JOIN MASTER_LEDGER_GROUP LG\n" +
                        //        "                                           ON LG.GROUP_ID = ML.GROUP_ID\n" +
                        //        "                                        WHERE PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                                          AND TRANS_FLAG = 'OP'\n" +
                        //        "                                          AND LB.AMOUNT > 0\n" +
                        //        "                                          AND ML.STATUS = 0\n" +
                        //        "                                          AND LG.GROUP_ID NOT IN (12, 14, 13)\n" +
                        //        "                                          AND LG.NATURE_ID NOT IN (1, 2)\n" +
                        //        "                                          AND TRANS_MODE = 'CR'\n" +
                        //        "                                          AND BALANCE_DATE < ?YEAR_FROM) AS RECEIPTAMT\n" +
                        //        "                                 FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "                                 LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                                   ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                                 LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                                   ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                                 LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                                   ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                                  AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                                WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                                {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "                                  AND MT.VOUCHER_TYPE = 'RC'\n" +
                        //        "                                  AND ML.STATUS = 0\n" +
                        //        "                                  AND MT.STATUS = 1\n" +
                        //        "                                  AND LG.NATURE_ID NOT IN (1, 2)\n" +
                        //        "                                  AND VOUCHER_DATE < ?YEAR_FROM\n" +
                        //        "                                  AND LG.GROUP_ID NOT IN (12, 13))\n" +
                        //        "\n" +
                        //        "                             ELSE\n" +
                        //        "                              0\n" +
                        //        "                           END) AS OP_CREDIT,\n" +
                        //        "                       '' AS 'CUR_DEBIT',\n" +
                        //        "                       '' As 'CUR_CREDIT'\n" +
                        //        "\n" +
                        //        "                  FROM MASTER_LEDGER AS ML\n" +
                        //        "                 INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        //        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                 INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                        //        "                                   LB.PROJECT_ID,\n" +
                        //        "                                   LB.LEDGER_ID,\n" +
                        //        "                                   LB.AMOUNT,\n" +
                        //        "                                   LB.TRANS_MODE\n" +
                        //        "                              FROM LEDGER_BALANCE AS LB\n" +
                        //        "                              LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                        //        "                                               LBA.LEDGER_ID,\n" +
                        //        "                                               MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //        "                                          FROM LEDGER_BALANCE LBA\n" +
                        //        "                                         WHERE 1 = 1\n" +
                        //        "                                           AND LBA.BALANCE_DATE < LBA.LEDGER_ID) AS LB1\n" +
                        //        "                                ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        //        "                               AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //        "                               AND LB.AMOUNT > 0\n" +
                        //        "                             WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                             {  AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "                               AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                        //        "                    ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        //        "                  LEFT JOIN MASTER_NATURE MN\n" +
                        //        "                    ON MN.NATURE_ID = LG.NATURE_ID\n" +
                        //        "                 WHERE LG.GROUP_ID IN (SELECT LG.GROUP_ID\n" +
                        //        "                                         FROM MASTER_LEDGER ML\n" +
                        //        "                                        INNER JOIN PROJECT_LEDGER PL\n" +
                        //        "                                           ON ML.LEDGER_ID = PL.LEDGER_ID\n" +
                        //        "                                        INNER JOIN MASTER_LEDGER_GROUP LG\n" +
                        //        "                                           ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                                        WHERE PL.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                                          AND LG.NATURE_ID IN (3, 4)\n" +
                        //        "                                          AND ML.STATUS = 0)\n" +
                        //        "                   and LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                        //        "                   AND ML.LEDGER_ID = 3\n" +
                        //        "                 GROUP BY ML.LEDGER_ID) AS T\n" +
                        //        "        UNION ALL\n" +
                        //        "\n" +
                        //        "        SELECT LG.GROUP_ID,\n" +
                        //        "               LG.SORT_ORDER,\n" +
                        //        "               ML.LEDGER_ID,\n" +
                        //        "               MN.NATURE_ID,\n" +
                        //        "               LG.GROUP_CODE,\n" +
                        //        "               LG.LEDGER_GROUP,\n" +
                        //        "               ML.LEDGER_CODE,\n" +
                        //        "               ML.LEDGER_NAME,\n" +
                        //        "               '' AS 'OP_CREDIT',\n" +
                        //        "               '' AS 'OP_DEBIT',\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN VOUCHER_TYPE IN ('RC', 'PY') AND VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                  IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //        "                 ELSE\n" +
                        //        "                  '0.0'\n" +
                        //        "               END AS 'CURRENTTRANS_DEBIT',\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN VOUCHER_TYPE IN ('RC', 'PY') AND VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                  IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //        "                 ELSE\n" +
                        //        "                  '0.0'\n" +
                        //        "               END AS 'CURRENTTRANS_CREDIT'\n" +
                        //        "          FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "\n" +
                        //        "          LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "          LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "\n" +
                        //        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "          LEFT JOIN PROJECT_BRANCH PB\n" +
                        //        "            ON PB.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "           AND PB.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "\n" +
                        //        "          LEFT JOIN MASTER_NATURE MN\n" +
                        //        "            ON MN.NATURE_ID = LG.NATURE_ID\n" +
                        //        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "         {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "         {  AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "           AND MT.STATUS = 1\n" +
                        //        "           AND ML.STATUS = 0\n" +
                        //        "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "           AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "         GROUP BY VT.LEDGER_ID, VT.VOUCHER_ID\n" +
                        //        "\n" +
                        //        "        UNION ALL\n" +
                        //        "\n" +
                        //        "        SELECT LG.GROUP_ID,\n" +
                        //        "               LG.SORT_ORDER,\n" +
                        //        "               ML.LEDGER_ID,\n" +
                        //        "               MN.NATURE_ID,\n" +
                        //        "               LG.GROUP_CODE,\n" +
                        //        "               LG.LEDGER_GROUP,\n" +
                        //        "               ML.LEDGER_CODE,\n" +
                        //        "               ML.LEDGER_NAME,\n" +
                        //        "               '' AS 'OP_CREDIT',\n" +
                        //        "               '' AS 'OP_DEBIT',\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                  IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //        "                 ELSE\n" +
                        //        "                  '0.0'\n" +
                        //        "               END AS 'CURRENTTRANS_DEBIT',\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                  IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //        "                 ELSE\n" +
                        //        "                  '0.0'\n" +
                        //        "               END AS 'CURRENTTRANS_CREDIT'\n" +
                        //        "          FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "          LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "          LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "\n" +
                        //        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "          LEFT JOIN PROJECT_BRANCH PB\n" +
                        //        "            ON PB.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "           AND PB.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "\n" +
                        //        "          LEFT JOIN MASTER_NATURE MN\n" +
                        //        "            ON MN.NATURE_ID = LG.NATURE_ID\n" +
                        //        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "         {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //        "           AND MT.STATUS = 1\n" +
                        //        "           AND ML.STATUS = 0\n" +
                        //        "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "           AND VOUCHER_TYPE IN ('JN','CN') AND VOUCHER_SUB_TYPE ='FD'\n" +
                        //        "           AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "         GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID, VT.TRANS_MODE\n" +
                        //        "\n" +

                        //         "        UNION ALL\n" +
                        //        "\n" +
                        //        "        SELECT LG.GROUP_ID,\n" +
                        //        "               LG.SORT_ORDER,\n" +
                        //        "               ML.LEDGER_ID,\n" +
                        //        "               MN.NATURE_ID,\n" +
                        //        "               LG.GROUP_CODE,\n" +
                        //        "               LG.LEDGER_GROUP,\n" +
                        //        "               ML.LEDGER_CODE,\n" +
                        //        "               ML.LEDGER_NAME,\n" +
                        //        "               '' AS 'OP_CREDIT',\n" +
                        //        "               '' AS 'OP_DEBIT',\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                  IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //        "                 ELSE\n" +
                        //        "                  '0.0'\n" +
                        //        "               END AS 'CURRENTTRANS_DEBIT',\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                  IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //        "                 ELSE\n" +
                        //        "                  '0.0'\n" +
                        //        "               END AS 'CURRENTTRANS_CREDIT'\n" +
                        //        "          FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "          LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "          LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "\n" +
                        //        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "          LEFT JOIN PROJECT_BRANCH PB\n" +
                        //        "            ON PB.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "           AND PB.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "\n" +
                        //        "          LEFT JOIN MASTER_NATURE MN\n" +
                        //        "            ON MN.NATURE_ID = LG.NATURE_ID\n" +
                        //        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "         {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //        "           AND MT.STATUS = 1\n" +
                        //        "           AND ML.STATUS = 0\n" +
                        //        "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "           AND VOUCHER_TYPE IN ('JN') AND VOUCHER_SUB_TYPE NOT IN('FD')\n" +
                        //        "           AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "         GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID, VT.TRANS_MODE\n" +
                        //        "\n" +
                        //        "        ) AS FN\n" +
                        //        " GROUP BY FN.GROUP_ID, FN.LEDGER_ID\n" +
                        //        "HAVING SUM(FN.OP_DEBIT) > 0 || SUM(FN.OP_CREDIT) > 0 || SUM(FN.CUR_DEBIT) > 0 || SUM(FN.CUR_CREDIT) > 0\n" +
                        //        " ORDER BY FN.SORT_ORDER";
                        #endregion

                        break;
                    }
                case ReportSQLCommand.FinalAccounts.TrialBalanceExcessDifference:
                    {
                        query = "SELECT CASE\n" +
                        "         WHEN SUM(IFNULL(FINAL.CREDIT, 0)) > SUM(IFNULL(FINAL.DEBIT, 0)) THEN\n" +
                        "          SUM(IFNULL(FINAL.CREDIT, 0)) - SUM(IFNULL(FINAL.DEBIT, 0))\n" +
                        "         ELSE\n" +
                        "          0.00\n" +
                        "       END AS CREDIT,\n" +
                        "       CASE\n" +
                        "         WHEN SUM(IFNULL(FINAL.DEBIT, 0)) > SUM(IFNULL(FINAL.CREDIT, 0)) THEN\n" +
                        "          SUM(IFNULL(FINAL.DEBIT, 0)) - SUM(IFNULL(FINAL.CREDIT, 0))\n" +
                        "         ELSE\n" +
                        "          0.00\n" +
                        "       END AS DEBIT\n" +
                        "  FROM (SELECT T.LEDGER_ID, T.RECEIPTAMT AS CREDIT, T.PAYMENTAMT AS DEBIT\n" +
                        "          FROM (SELECT ML.LEDGER_ID,\n" +
                        "                       LG.SORT_ORDER,\n" +
                        "                       CASE\n" +
                        "                         WHEN SUM(CASE\n" +
                        "                                    WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        "                                     VT.AMOUNT\n" +
                        "                                    ELSE\n" +
                        "                                     -VT.AMOUNT\n" +
                        "                                  END) < 0 THEN\n" +
                        "                          ABS(SUM(CASE\n" +
                        "                                    WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        "                                     VT.AMOUNT\n" +
                        "                                    ELSE\n" +
                        "                                     -VT.AMOUNT\n" +
                        "                                  END))\n" +
                        "                       END AS RECEIPTAMT,\n" +
                        "                       CASE\n" +
                        "                         WHEN SUM(CASE\n" +
                        "                                    WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        "                                     VT.AMOUNT\n" +
                        "                                    ELSE\n" +
                        "                                     -VT.AMOUNT\n" +
                        "                                  END) > 0 THEN\n" +
                        "                          ABS(SUM(CASE\n" +
                        "                                    WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        "                                     VT.AMOUNT\n" +
                        "                                    ELSE\n" +
                        "                                     -VT.AMOUNT\n" +
                        "                                  END))\n" +
                        "                       END AS PAYMENTAMT\n" +
                        "                  FROM MASTER_LEDGER_GROUP LG\n" +
                        "                 INNER JOIN MASTER_LEDGER_GROUP PG\n" +
                        "                    ON LG.PARENT_GROUP_ID = PG.GROUP_ID\n" +
                        "                  LEFT JOIN MASTER_LEDGER ML\n" +
                        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        "                      AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        "                    LEFT JOIN MASTER_PROJECT MP\n" +
                        "                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        "                  LEFT JOIN PROJECT_BRANCH PB\n" +
                        "                    ON PB.PROJECT_ID = MT.PROJECT_ID\n" +
                        "                   AND PB.BRANCH_ID = MT.BRANCH_ID\n" +
                        "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        "                    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        "                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "              { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        "                   AND MT.STATUS = 1\n" +
                        "                   AND VOUCHER_DATE <?DATE_FROM\n" +
                        "                   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        "                   AND LG.NATURE_ID NOT IN (3, 4)\n" +
                        "                 GROUP BY VT.LEDGER_ID) AS T\n" +
                        "         GROUP BY LEDGER_ID\n" +
                        "        UNION ALL\n" +
                        "\n" +
                        "        SELECT LEDGER_ID, CREDIT, DEBIT\n" +
                        "          FROM (SELECT ML.LEDGER_ID,\n" +
                        "                       SUM(If(TRANS_MODE = 'CR', AMOUNT, 0)) AS CREDIT,\n" +
                        "                       SUM(If(TRANS_MODE = 'DR', AMOUNT, 0)) AS DEBIT\n" +
                        "                  FROM LEDGER_BALANCE LB\n" +
                        "                 INNER JOIN MASTER_LEDGER ML\n" +
                        "                    ON ML.LEDGER_Id = LB.LEDGER_ID\n" +
                        "                 INNER JOIN MASTER_LEDGER_GROUP LG\n" +
                        "                    ON LG.GROUP_ID = ML.GROUP_ID\n" +
                        "                 Where Trans_flag = 'OP'\n" +
                        "                   AND LG.NATURE_ID IN (1, 2)\n" +
                        "                   AND PROJECT_ID IN (?PROJECT_ID)\n" +
                        "                 GROUP BY LEDGER_ID) AS T\n" +
                        "         GROUP BY LEDGER_ID) AS FINAL";
                        break;
                    }
                #endregion

                #region CurrentFinancialYear
                case ReportSQLCommand.FinalAccounts.IsFirstFinancialYear:
                    {
                        query = @"SELECT count(*) AS COUNT FROM ACCOUNTING_YEAR WHERE YEAR_FROM<=?DATE_FROM AND YEAR_TO>=?DATE_TO;";
                        break;
                    }
                #endregion

                #region BalanceSheet
                case ReportSQLCommand.FinalAccounts.BalanceSheet:
                    {
                        #region New Query
                        query = "SELECT\n" +
                                    "ML.LEDGER_ID,ML.GROUP_ID, LG.GROUP_CODE,LG.SORT_ORDER,\n" +
                                    "CASE\n" +
                                    "  WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                                    "   LG.LEDGER_GROUP\n" +
                                    "  ELSE\n" +
                                    "    PG.LEDGER_GROUP\n" +
                                    "END AS PARENT_GROUP,\n" +
                                    "IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,\n" +
                                    "   CASE\n" +
                                    "    WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                                    "     CONCAT(LG.LEDGER_GROUP)\n" +
                                    "    ELSE\n" +
                                    "     CONCAT('   ',LG.LEDGER_GROUP)\n" +
                                    "   END,LG.LEDGER_GROUP) AS LEDGER_GROUP,\n" +
                                    "IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,\n" +
                                    "   CASE\n" +
                                    "     WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                                    "       CONCAT('   ', ML.LEDGER_NAME)\n" +
                                    "    ELSE\n" +
                                    "       CONCAT('      ', ML.LEDGER_NAME)\n" +
                                    "    END,ML.LEDGER_NAME) AS LEDGER_NAME, ML.LEDGER_CODE,\n" +
                                    "SUM( IF(TRANS_MODE = 'CR', -IFNULL(LB.AMOUNT,0), IFNULL(LB.AMOUNT,0)) ) AMOUNT_ACTUAL\n" +
                                    "FROM (\n" +
                                     "SELECT LB1.BALANCE_DATE, LB1.PROJECT_ID,LB1.BRANCH_ID, PP.CUSTOMERID, LB1.LEDGER_ID, LB1.AMOUNT, LB1.TRANS_MODE\n" +
                                        "FROM LEDGER_BALANCE AS LB1\n" +
                                        " INNER JOIN MASTER_PROJECT PP ON PP.PROJECT_ID = LB1.PROJECT_ID\n" +
                                        " LEFT JOIN (SELECT LBA.PROJECT_ID, LBA.LEDGER_ID,LBA.BRANCH_ID, P.CUSTOMERID, MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                                                   "FROM LEDGER_BALANCE LBA\n" +
                                                   " INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                                                   " WHERE 1 = 1 AND LBA.BALANCE_DATE <= ?DATE_AS_ON AND LBA.PROJECT_ID IN (?PROJECT_ID) AND LBA.BRANCH_ID IN (?BRANCH_OFFICE_ID) { AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) }\n" +
                                                    "GROUP BY LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB2\n" +
                                        "ON LB1.BRANCH_ID = LB2.BRANCH_ID AND LB1.PROJECT_ID = LB2.PROJECT_ID AND LB1.LEDGER_ID = LB2.LEDGER_ID AND LB1.BRANCH_ID = LB2.BRANCH_ID\n" +
                                        "WHERE LB1.PROJECT_ID IN (?PROJECT_ID) AND LB1.BRANCH_ID IN (?BRANCH_OFFICE_ID) { AND PP.CUSTOMERID IN (?LEGAL_ENTITY_ID) } AND LB1.BALANCE_DATE = LB2.BAL_DATE) LB\n" +
                                    "INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = LB.LEDGER_ID\n" +
                                    "INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID\n" +
                                    "INNER JOIN MASTER_LEDGER_GROUP PG ON  PG.GROUP_ID = LG.PARENT_GROUP_ID\n" +
                                    "WHERE ML.GROUP_ID NOT IN (12,13,14) AND LG.NATURE_ID IN (3,4)  AND LB.PROJECT_ID IN (?PROJECT_ID) AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID) { AND LB.CUSTOMERID IN (?LEGAL_ENTITY_ID) } \n" +
                                    "GROUP BY LEDGER_ID";



                        #endregion
                        break;
                    }
                case ReportSQLCommand.FinalAccounts.BalanceSheetSAP:
                    {
                        query = "SELECT\n" +
                        " ML.LEDGER_ID,ML.GROUP_ID, IF(?SHOW_GENERALATE IN (0), LG.GROUP_CODE, CL.CON_LEDGER_CODE) AS GROUP_CODE,\n" +
                        " -- IF(?SHOW_GENERALATE IN (0,1),'',CL1.CON_LEDGER_CODE) AS PARENT_GROUP_CODE,\n" +
                        " CASE\n" +
                        "         WHEN PG.GROUP_ID IN (1,2,3,4) THEN\n" +
                        "          IF(?SHOW_GENERALATE IN (0), LG.GROUP_CODE,CL1.CON_LEDGER_CODE)\n" +
                        "          ELSE\n" +
                        "            IF(?SHOW_GENERALATE IN (0), PG.GROUP_CODE,CL1.CON_LEDGER_CODE) END PARENT_GROUP_CODE,\n" +
                        " IF(?SHOW_GENERALATE IN (0),  '',LEFT(IFNULL(CL1.CON_LEDGER_CODE,'999'),3)) AS PARENT_CODE1,LG.SORT_ORDER,\n" +
                       "CASE\n" +
                       "  WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                       "  IF(?SHOW_GENERALATE IN (0), LG.LEDGER_GROUP, IFNULL(CL1.CON_LEDGER_NAME, '-- UnMapped --')) \n" +
                       "  ELSE\n" +
                       "  IF(?SHOW_GENERALATE IN (0), PG.LEDGER_GROUP, IFNULL(CL1.CON_LEDGER_NAME, '-- UnMapped --')) \n" +
                       "END AS PARENT_GROUP,\n" +
                       "IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,\n" +
                       "   CASE\n" +
                       "    WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                       "  IF(?SHOW_GENERALATE IN (0), CONCAT(LG.LEDGER_GROUP), IFNULL(CONCAT(CL.CON_LEDGER_NAME),'-- UnMapped --'))   \n" +
                       "    ELSE\n" +
                       "    IF(?SHOW_GENERALATE IN (0), CONCAT('',LG.LEDGER_GROUP), CONCAT('',IFNULL(CL.CON_LEDGER_NAME, '-- UnMapped --')))  \n" +
                       "   END,IF(?SHOW_GENERALATE IN (0), LG.LEDGER_GROUP, CL.CON_LEDGER_NAME)) AS LEDGER_GROUP,\n" +
                       "IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,\n" +
                       "   CASE\n" +
                       "     WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                       "       CONCAT('', ML.LEDGER_NAME)\n" +
                       "    ELSE\n" +
                       "       CONCAT('', ML.LEDGER_NAME)\n" +
                       "    END,ML.LEDGER_NAME) AS LEDGER_NAME, IF(?SHOW_GENERALATE IN (0),ML.LEDGER_CODE,CL.CON_LEDGER_CODE) AS LEDGER_CODE,\n" +
                       "SUM( IF(TRANS_MODE = 'CR', -IFNULL(LB.AMOUNT,0), IFNULL(LB.AMOUNT,0)) ) AMOUNT_ACTUAL\n" +
                       "FROM (\n" +
                        "SELECT LB1.BALANCE_DATE, LB1.PROJECT_ID, LB1.BRANCH_ID, LB1.LEDGER_ID, LB1.AMOUNT, LB1.TRANS_MODE\n" +
                           "FROM LEDGER_BALANCE AS LB1\n" +
                           "LEFT JOIN (SELECT LBA.PROJECT_ID, LBA.LEDGER_ID,LBA.BRANCH_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                                      "FROM LEDGER_BALANCE LBA\n" +
                                      "WHERE 1 = 1 AND LBA.BALANCE_DATE <= ?DATE_AS_ON AND LBA.PROJECT_ID IN (?PROJECT_ID) AND LBA.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                                       "GROUP BY LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB2\n" +
                           "ON LB1.PROJECT_ID = LB2.PROJECT_ID AND LB1.LEDGER_ID = LB2.LEDGER_ID\n" +
                           "WHERE LB1.PROJECT_ID IN (?PROJECT_ID) AND LB1.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND LB1.BALANCE_DATE = LB2.BAL_DATE) LB\n" +
                       "INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = LB.LEDGER_ID\n" +
                       "INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUp_ID = ML.GROUP_ID\n" +
                       "INNER JOIN MASTER_LEDGER_GROUP PG ON  PG.GROUP_ID = LG.PARENT_GROUP_ID\n" +
                       "LEFT JOIN CONGREGATION_LEDGER_MAP CLM\n" +
                       "ON ML.LEDGER_ID = CLM.LEDGER_ID\n" +
                       "LEFT JOIN CONGREGATION_LEDGER AS CL\n" +
                       "ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID\n" +
                       "LEFT JOIN CONGREGATION_LEDGER AS CL1\n" +
                       "ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID\n" +
                       "WHERE ML.GROUP_ID NOT IN (12,13,14) AND LG.NATURE_ID IN (3,4) AND LB.PROJECT_ID IN (?PROJECT_ID) AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                       "GROUP BY LEDGER_ID;";
                        break;
                    }

                case ReportSQLCommand.FinalAccounts.BalanceSheetOpeningAmt:
                    {
                        query = "SELECT SUM( IF(LB.TRANS_MODE ='DR', AMOUNT, -AMOUNT )) OP_DIFFERENCE\n" +
                               "FROM LEDGER_BALANCE LB\n" +
                               "WHERE LB.TRANS_FLAG = 'OP' AND LB.PROJECT_ID IN (?PROJECT_ID) AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID);";
                        break;
                    }
                case ReportSQLCommand.FinalAccounts.BalanceSheetExcessDifference:
                    {
                        query = "SELECT SUM(AMOUNT_ACTUAL) AS IESUM\n" +
                                    "FROM (SELECT ML.LEDGER_ID,SUM( IF(TRANS_MODE = 'CR', IFNULL(LB.AMOUNT,0), -IFNULL(LB.AMOUNT,0)) ) AMOUNT_ACTUAL\n" +
                                    "FROM (\n" +
                                    "SELECT LB1.BALANCE_DATE, LB1.BRANCH_ID, LB1.PROJECT_ID, LB1.LEDGER_ID, LB1.AMOUNT, LB1.TRANS_MODE\n" +
                                        "FROM LEDGER_BALANCE AS LB1\n" +
                                        "LEFT JOIN (SELECT LBA.PROJECT_ID, LBA.LEDGER_ID,LBA.BRANCH_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                                                   "FROM LEDGER_BALANCE LBA\n" +
                                                   "WHERE 1 = 1 AND LBA.BALANCE_DATE <= ?DATE_FROM AND LBA.PROJECT_ID IN (?PROJECT_ID) AND LBA.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                                                    "GROUP BY LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB2\n" +
                                        "ON LB1.BRANCH_ID = LB2.BRANCH_ID AND LB1.PROJECT_ID = LB2.PROJECT_ID AND LB1.LEDGER_ID = LB2.LEDGER_ID\n" +
                                        "WHERE LB1.PROJECT_ID IN (?PROJECT_ID) AND LB1.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND LB1.BALANCE_DATE = LB2.BAL_DATE) LB\n" +
                                    "INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = LB.LEDGER_ID\n" +
                                    "INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID\n" +
                                    "WHERE LG.NATURE_ID IN (1,2)  AND LB.PROJECT_ID IN (?PROJECT_ID) AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID) \n" +
                                    "GROUP BY ML.LEDGER_ID) AS BALANCE_IE;";

                        //query = "SELECT CASE\n" +
                        //           "         WHEN SUM(IFNULL(FINAL.CREDIT, 0)) > SUM(IFNULL(FINAL.DEBIT, 0)) THEN\n" +
                        //           "          SUM(IFNULL(FINAL.CREDIT, 0)) - SUM(IFNULL(FINAL.DEBIT, 0))\n" +
                        //           "         ELSE\n" +
                        //           "          0.00\n" +
                        //           "       END AS CREDIT,\n" +
                        //           "       CASE\n" +
                        //           "         WHEN SUM(IFNULL(FINAL.DEBIT, 0)) > SUM(IFNULL(FINAL.CREDIT, 0)) THEN\n" +
                        //           "          SUM(IFNULL(FINAL.DEBIT, 0)) - SUM(IFNULL(FINAL.CREDIT, 0))\n" +
                        //           "         ELSE\n" +
                        //           "          0.00\n" +
                        //           "       END AS DEBIT\n" +
                        //           "  FROM (SELECT T.LEDGER_ID, T.RECEIPTAMT AS CREDIT, T.PAYMENTAMT AS DEBIT\n" +
                        //           "          FROM (SELECT ML.LEDGER_ID,\n" +
                        //           "                       LG.SORT_ORDER,\n" +
                        //           "                       CASE\n" +
                        //           "                         WHEN SUM(CASE\n" +
                        //           "                                    WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //           "                                     VT.AMOUNT\n" +
                        //           "                                    ELSE\n" +
                        //           "                                     -VT.AMOUNT\n" +
                        //           "                                  END) < 0 THEN\n" +
                        //           "                          ABS(SUM(CASE\n" +
                        //           "                                    WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //           "                                     VT.AMOUNT\n" +
                        //           "                                    ELSE\n" +
                        //           "                                     -VT.AMOUNT\n" +
                        //           "                                  END))\n" +
                        //           "                       END AS RECEIPTAMT,\n" +
                        //           "                       CASE\n" +
                        //           "                         WHEN SUM(CASE\n" +
                        //           "                                    WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //           "                                     VT.AMOUNT\n" +
                        //           "                                    ELSE\n" +
                        //           "                                     -VT.AMOUNT\n" +
                        //           "                                  END) > 0 THEN\n" +
                        //           "                          ABS(SUM(CASE\n" +
                        //           "                                    WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //           "                                     VT.AMOUNT\n" +
                        //           "                                    ELSE\n" +
                        //           "                                     -VT.AMOUNT\n" +
                        //           "                                  END))\n" +
                        //           "                       END AS PAYMENTAMT\n" +
                        //           "                  FROM MASTER_LEDGER_GROUP LG\n" +
                        //           "                 INNER JOIN MASTER_LEDGER_GROUP PG\n" +
                        //           "                    ON LG.PARENT_GROUP_ID = PG.GROUP_ID\n" +
                        //           "                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //           "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //           "                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        //           "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //           "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //           "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //           "                    AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //           "                    LEFT JOIN MASTER_PROJECT MP\n" +
                        //            "                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //            "                  LEFT JOIN PROJECT_BRANCH PB\n" +
                        //            "                    ON PB.PROJECT_ID = MT.PROJECT_ID\n" +
                        //            "                   AND PB.BRANCH_ID = MT.BRANCH_ID\n" +
                        //            "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //            "                    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //            "                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //            "               { AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //           "                   AND MT.STATUS = 1\n" +
                        //           "                   AND VOUCHER_DATE <=?DATE_FROM\n" +
                        //           "                   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //           "                   AND LG.NATURE_ID NOT IN (3, 4)\n" +
                        //           "                 GROUP BY VT.LEDGER_ID) AS T\n" +
                        //           "         GROUP BY LEDGER_ID\n" +
                        //           "        UNION ALL\n" +
                        //           "\n" +
                        //           "        SELECT LEDGER_ID, CREDIT, DEBIT\n" +
                        //           "          FROM (SELECT ML.LEDGER_ID,\n" +
                        //           "                       SUM(If(TRANS_MODE = 'CR', AMOUNT, 0)) AS CREDIT,\n" +
                        //           "                       SUM(If(TRANS_MODE = 'DR', AMOUNT, 0)) AS DEBIT\n" +
                        //           "                  FROM LEDGER_BALANCE LB\n" +
                        //           "                 INNER JOIN MASTER_LEDGER ML\n" +
                        //           "                    ON ML.LEDGER_Id = LB.LEDGER_ID\n" +
                        //           "                 INNER JOIN MASTER_LEDGER_GROUP LG\n" +
                        //           "                    ON LG.GROUP_ID = ML.GROUP_ID\n" +
                        //           "                 Where Trans_flag = 'OP'\n" +
                        //           "                   AND LG.NATURE_ID IN (1, 2)\n" +
                        //           "                   AND PROJECT_ID IN (?PROJECT_ID)\n" +
                        //           "                 GROUP BY LEDGER_ID) AS T\n" +
                        //           "         GROUP BY LEDGER_ID) AS FINAL";
                        break;
                    }

                #endregion

                #region Balanceschedules

                case ReportSQLCommand.FinalAccounts.BalanceSchedules:
                    {
                        //                        query = @"SELECT T2.GROUP_ID,
                        //                                       SUM(T2.POP_DEBIT) AS POP_DEBIT,
                        //                                       SUM(T2.POP_CREDIT) AS POP_CREDIT
                        //                                  FROM (SELECT 21 AS GROUP_ID,
                        //                                               SUM(CASE
                        //                                                     WHEN LB.TRANS_MODE = 'DR' THEN
                        //                                                      LB.AMOUNT
                        //                                                     ELSE
                        //                                                      0
                        //                                                   END) AS 'POP_DEBIT',
                        //                                               SUM(CASE
                        //                                                     WHEN LB.TRANS_MODE = 'CR' THEN
                        //                                                      LB.AMOUNT
                        //                                                     ELSE
                        //                                                      0
                        //                                                   END) AS 'POP_CREDIT'
                        //                                          FROM LEDGER_BALANCE AS LB
                        //                                          LEFT JOIN MASTER_LEDGER AS ML
                        //                                            ON LB.LEDGER_ID = ML.LEDGER_ID
                        //                                          LEFT JOIN MASTER_LEDGER_GROUP LG
                        //                                            ON LG.GROUP_ID = ML.GROUP_ID
                        //                                         WHERE PROJECT_ID IN (?PROJECT_ID)
                        //                                           AND TRANS_FLAG = 'OP'
                        //                                           AND LB.AMOUNT > 0
                        //                                           AND LG.GROUP_ID NOT IN (12, 14, 13)
                        //                                           AND LG.NATURE_ID IN (4)
                        //                                           AND LG.GROUP_ID IN (21)
                        //                                           AND LG.GROUP_ID NOT IN (11, 12, 13, 14, 18, 22)
                        //                                           AND BALANCE_DATE <=?YEAR_FROM
                        //                                         GROUP BY LG.GROUP_ID
                        //                                        UNION ALL
                        //                                        SELECT 21 AS GROUP_ID,
                        //                                               SUM(CASE
                        //                                                     WHEN LB.TRANS_MODE = 'DR' THEN
                        //                                                      LB.AMOUNT
                        //                                                     ELSE
                        //                                                      0
                        //                                                   END) AS 'POP_DEBIT',
                        //                                               SUM(CASE
                        //                                                     WHEN LB.TRANS_MODE = 'CR' THEN
                        //                                                      LB.AMOUNT
                        //                                                     ELSE
                        //                                                      0
                        //                                                   END) AS 'POP_CREDIT'
                        //                                          FROM LEDGER_BALANCE AS LB
                        //                                          LEFT JOIN MASTER_LEDGER AS ML
                        //                                            ON LB.LEDGER_ID = ML.LEDGER_ID
                        //                                          LEFT JOIN MASTER_LEDGER_GROUP LG
                        //                                            ON LG.GROUP_ID = ML.GROUP_ID
                        //                                         WHERE PROJECT_ID IN (?PROJECT_ID)
                        //                                           AND TRANS_FLAG = 'OP'
                        //                                           AND LB.AMOUNT > 0
                        //                                           AND LG.GROUP_ID NOT IN (12, 14, 13)
                        //                                           AND LG.NATURE_ID IN (1, 2)
                        //                                           AND LG.GROUP_ID NOT IN (11, 12, 13, 14, 18, 22)
                        //                                           AND BALANCE_DATE <=?YEAR_FROM
                        //                                         GROUP BY LG.GROUP_ID) AS T2
                        //                                 WHERE (T2.POP_DEBIT > 0 || T2.POP_CREDIT > 0)
                        //                                 GROUP BY T2.GROUP_ID ";
                        query = "SELECT\n" +
                                "                                                             SUM(FINAL.RECEIPTAMT) AS RECEIPTAMT,\n" +
                                "                                                             SUM(FINAL.PAYMENTAMT) AS PAYMENTAMT,\n" +
                                "                                                             SUM(FINAL.RPC_OP_TOTAL) AS RPC_OP_TOTAL,\n" +
                                "                                                             SUM(FINAL.CAP_TRANS_TOTAL) AS CAP_TRANS_TOTAL,\n" +
                                "                                                             SUM(FINAL.OP_TOTAL) AS OP_TOTAL,\n" +
                                "                                                             SUM(FINAL.IE_TOTAL) AS IE_TOTAL,\n" +
                                "                                                             SUM(FINAL.TOTAL) AS TOTAL,\n" +
                                "                                                             SUM(FINAL.PREV_TOTAL) AS PREV_TOTAL\n" +
                                "                                                              FROM (SELECT SUM(FNL.RECEIPTAMT) AS RECEIPTAMT,\n" +
                                "                                                                           SUM(FNL.PAYMENTAMT) AS PAYMENTAMT,\n" +
                                "                                                                           SUM(FNL.OP_TOTAL) AS RPC_OP_TOTAL,\n" +
                                "                                                                           SUM(FNL.OP_TRANS_TOTAL) AS CAP_TRANS_TOTAL,\n" +
                                "                                                                           SUM(FNL.OP_TOTAL) + SUM(FNL.OP_TRANS_TOTAL) AS OP_TOTAL,\n" +
                                "                                                                          ((CASE\n" +
                                "                                                                           WHEN  (SUM(FNL.RECEIPTAMT)>SUM(FNL.PAYMENTAMT))\n" +
                                "                                                                           THEN\n" +
                                "                                                                          (SUM(FNL.RECEIPTAMT) - SUM(FNL.PAYMENTAMT))\n" +
                                "                                                                          ELSE\n" +
                                "                                                                           ((SUM(FNL.PAYMENTAMT)) - SUM(FNL.RECEIPTAMT))\n" +
                                "                                                                             END)) AS IE_TOTAL,\n" +
                                "                                                                         ((CASE\n" +
                                "                                                                                 WHEN (SUM(FNL.RECEIPTAMT) > SUM(FNL.PAYMENTAMT)) THEN\n" +
                                "                                                                                  ((SUM(FNL.RECEIPTAMT)-SUM(FNL.PAYMENTAMT))+SUM(FNL.OP_TOTAL) + SUM(FNL.OP_TRANS_TOTAL)\n" +
                                "                                                                                  )\n" +
                                "                                                                                 WHEN (SUM(FNL.PAYMENTAMT) > SUM(FNL.RECEIPTAMT))\n" +
                                "                                                                                  THEN\n" +
                                "                                                                                  (-1*(SUM(FNL.PAYMENTAMT) - SUM(FNL.RECEIPTAMT))+(SUM(FNL.OP_TOTAL) + SUM(FNL.OP_TRANS_TOTAL))\n" +
                                "                                                                                  )\n" +
                                "                                                                                  WHEN (SUM(FNL.PAYMENTAMT) = SUM(FNL.RECEIPTAMT))\n" +
                                "                                                                                  THEN\n" +
                                "                                                                                  ((SUM(FNL.OP_TOTAL) + SUM(FNL.OP_TRANS_TOTAL))\n" +
                                "                                                                                  )\n" +
                                "                                                                                 ELSE 0.00\n" +
                                "                                                                               END)) AS TOTAL,\n" +
                                "                                                                                0.0 AS PREV_TOTAL\n" +
                                "                                                                                 FROM (SELECT IE.RECEIPTAMT,\n" +
                                "                                                                                   IE.PAYMENTAMT,\n" +
                                "                                                                                   0.0           AS OP_TOTAL,\n" +
                                "                                                                                   0.0           AS OP_TRANS_TOTAL\n" +
                                "                                                                              FROM (SELECT TEMP.LEDGER_ID,\n" +
                                "                                                                                           TEMP.GROUP_ID,\n" +
                                "                                                                                           TEMP.RECEIPTAMT,\n" +
                                "                                                                                           TEMP.PAYMENTAMT\n" +
                                "                                                                                      FROM (SELECT T.LEDGER_ID,\n" +
                                "                                                                                                   T.GROUP_ID,\n" +
                                "                                                                                                   SUM(T.RECEIPTAMT) AS RECEIPTAMT,\n" +
                                "                                                                                                   T.PAYMENTAMT\n" +
                                "                                                                                              FROM (SELECT ML.LEDGER_ID,\n" +
                                "                                                                                                           ML.GROUP_ID,\n" +
                                "                                                                                                           CASE\n" +
                                "                                                                                                             WHEN SUM(CASE\n" +
                                "                                                                                                                        WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                                                                                                         VT.AMOUNT\n" +
                                "                                                                                                                        ELSE\n" +
                                "                                                                                                                         -VT.AMOUNT\n" +
                                "                                                                                                                      END) < 0 THEN\n" +
                                "                                                                                                              ABS(SUM(CASE\n" +
                                "                                                                                                                        WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                                                                                                         VT.AMOUNT\n" +
                                "                                                                                                                        ELSE\n" +
                                "                                                                                                                         -VT.AMOUNT\n" +
                                "                                                                                                                      END))\n" +
                                "                                                                                                           END AS RECEIPTAMT,\n" +
                                "                                                                                                           0 AS 'PAYMENTAMT'\n" +
                                "                                                                                                      FROM MASTER_LEDGER_GROUP LG\n" +
                                "                                                                                                      LEFT JOIN MASTER_LEDGER ML\n" +
                                "                                                                                                        ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                                                                                                      LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                                                                                                        ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                                                                                                      LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                                                                                                        ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                                                                                                        AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                                                                                                     WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                                                                                                       AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                                "                                                                                                       AND MT.STATUS = 1\n" +
                                "                                                                                                       AND VOUCHER_DATE BETWEEN ?YEAR_FROM AND\n" +
                                "                                                                                                           ?DATE_AS_ON                -- Data As on ( year from and dateason )\n" +
                                "                                                                                                       AND LG.GROUP_ID NOT IN (12, 13)\n" +
                                "                                                                                                       AND LG.NATURE_ID NOT IN (3, 4)\n" +
                                "                                                                                                     GROUP BY VT.LEDGER_ID) AS T\n" +
                                "                                                                                             WHERE T.RECEIPTAMT > 0\n" +
                                "                                                                                            UNION ALL\n" +
                                "                                                                                            SELECT T1.LEDGER_ID,\n" +
                                "                                                                                                   T1.GROUP_ID,\n" +
                                "                                                                                                   T1.RECEIPTAMT,\n" +
                                "                                                                                                   SUM(T1.PAYMENTAMT) AS PAYMENTAMT\n" +
                                "                                                                                              FROM (SELECT ML.LEDGER_ID,\n" +
                                "                                                                                                           ML.GROUP_ID,\n" +
                                "                                                                                                           0 AS 'RECEIPTAMT',\n" +
                                "                                                                                                           CASE\n" +
                                "                                                                                                             WHEN SUM(CASE\n" +
                                "                                                                                                                        WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                                                                                                         VT.AMOUNT\n" +
                                "                                                                                                                        ELSE\n" +
                                "                                                                                                                         -VT.AMOUNT\n" +
                                "                                                                                                                      END) > 0 THEN\n" +
                                "                                                                                                              ABS(SUM(CASE\n" +
                                "                                                                                                                        WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                                                                                                         VT.AMOUNT\n" +
                                "                                                                                                                        ELSE\n" +
                                "                                                                                                                         -VT.AMOUNT\n" +
                                "                                                                                                                      END))\n" +
                                "                                                                                                           END AS PAYMENTAMT\n" +
                                "                                                                                                      FROM MASTER_LEDGER_GROUP LG\n" +
                                "                                                                                                      LEFT JOIN MASTER_LEDGER ML\n" +
                                "                                                                                                        ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                                                                                                      LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                                                                                                        ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                                                                                                      LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                                                                                                        ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                                                                                                        AND VT.BRANCH_ID=MT.BRANCH_ID\n" +
                                "                                                                                                     WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                                                                                                       AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                                "                                                                                                       AND MT.STATUS = 1\n" +
                                "                                                                                                       AND VOUCHER_DATE BETWEEN ?YEAR_FROM AND\n" +
                                "                                                                                                           ?DATE_AS_ON                      -- Data As on ( year from and dateason).....\n" +
                                "                                                                                                       AND LG.GROUP_ID NOT IN (12, 13)\n" +
                                "                                                                                                       AND LG.NATURE_ID NOT IN (3, 4)\n" +
                                "                                                                                                     GROUP BY VT.LEDGER_ID) AS T1\n" +
                                "                                                                                             WHERE T1.PAYMENTAMT > 0) AS TEMP\n" +
                                "                                                                                     WHERE TEMP.PAYMENTAMT > 0 || TEMP.RECEIPTAMT > 0\n" +
                                "                                                                                     GROUP BY TEMP.GROUP_ID) AS IE\n" +
                                "                                                                            UNION ALL\n" +
                                "                                                                            SELECT 0.0         AS RECEIPTAMT,\n" +
                                "                                                                                   0.0         AS PAYMENTAMT,\n" +
                                "                                                                                   OP.OP_TOTAL,\n" +
                                "                                                                                   0.0         AS OP_TRANS_TOTAL\n" +
                                "                                                                              FROM (SELECT T2.GROUP_ID,\n" +
                                "                                                                                           SUM(T2.POP_DEBIT) AS POP_DEBIT,\n" +
                                "                                                                                           SUM(T2.POP_CREDIT) AS POP_CREDIT,\n" +
                                "                                                                                           ((CASE\n" +
                                "                                                                                             WHEN SUM(T2.POP_DEBIT) > SUM(T2.POP_CREDIT) THEN\n" +
                                "                                                                                              SUM(T2.POP_CREDIT) - SUM(T2.POP_DEBIT)\n" +
                                "                                                                                             ELSE\n" +
                                "                                                                                              0.00\n" +
                                "                                                                                           END) + (CASE\n" +
                                "                                                                                             WHEN SUM(T2.POP_CREDIT) > SUM(T2.POP_DEBIT) THEN\n" +
                                "                                                                                              SUM(T2.POP_CREDIT) - SUM(T2.POP_DEBIT)\n" +
                                "                                                                                             ELSE\n" +
                                "                                                                                              0.00\n" +
                                "                                                                                           END)) AS OP_TOTAL\n" +
                                "                                                                                      FROM (SELECT 21 AS GROUP_ID,\n" +
                                "                                                                                                   SUM(CASE\n" +
                                "                                                                                                         WHEN LB.TRANS_MODE = 'DR' THEN\n" +
                                "                                                                                                          LB.AMOUNT\n" +
                                "                                                                                                         ELSE\n" +
                                "                                                                                                          0\n" +
                                "                                                                                                       END) AS 'POP_DEBIT',\n" +
                                "                                                                                                   SUM(CASE\n" +
                                "                                                                                                         WHEN LB.TRANS_MODE = 'CR' THEN\n" +
                                "                                                                                                          LB.AMOUNT\n" +
                                "                                                                                                         ELSE\n" +
                                "                                                                                                          0\n" +
                                "                                                                                                       END) AS 'POP_CREDIT'\n" +
                                "                                                                                              FROM LEDGER_BALANCE AS LB\n" +
                                "                                                                                              LEFT JOIN MASTER_LEDGER AS ML\n" +
                                "                                                                                                ON LB.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                                                                                              LEFT JOIN MASTER_LEDGER_GROUP LG\n" +
                                "                                                                                                ON LG.GROUP_ID = ML.GROUP_ID\n" +
                                "                                                                                             WHERE PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                                                                                               AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                                "                                                                                               AND TRANS_FLAG = 'OP'\n" +
                                "                                                                                               AND LB.AMOUNT > 0\n" +
                                "                                                                                               AND LG.GROUP_ID NOT IN (12, 14, 13)\n" +
                                "                                                                                               AND LG.NATURE_ID IN (4)\n" +
                                "                                                                                               AND LG.GROUP_ID IN (21)\n" +
                                "                                                                                               AND LG.GROUP_ID NOT IN\n" +
                                "                                                                                                   (11, 12, 13, 14, 18, 22)\n" +
                                "                                                                                               AND BALANCE_DATE <= ?DATE_TO         -- Data to for OpeningBal then MAKE IT NULL WHEN 2 PERIOD MAKE IT NULL\n" +
                                "                                                                                             GROUP BY LG.GROUP_ID\n" +
                                "                                                                                            UNION ALL\n" +
                                "                                                                                            SELECT 21 AS GROUP_ID,\n" +
                                "                                                                                                   SUM(CASE\n" +
                                "                                                                                                         WHEN LB.TRANS_MODE = 'DR' THEN\n" +
                                "                                                                                                          LB.AMOUNT\n" +
                                "                                                                                                         ELSE\n" +
                                "                                                                                                          0\n" +
                                "                                                                                                       END) AS 'POP_DEBIT',\n" +
                                "                                                                                                   SUM(CASE\n" +
                                "                                                                                                         WHEN LB.TRANS_MODE = 'CR' THEN\n" +
                                "                                                                                                          LB.AMOUNT\n" +
                                "                                                                                                         ELSE\n" +
                                "                                                                                                          0\n" +
                                "                                                                                                       END) AS 'POP_CREDIT'\n" +
                                "                                                                                              FROM LEDGER_BALANCE AS LB\n" +
                                "                                                                                              LEFT JOIN MASTER_LEDGER AS ML\n" +
                                "                                                                                                ON LB.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                                                                                              LEFT JOIN MASTER_LEDGER_GROUP LG\n" +
                                "                                                                                                ON LG.GROUP_ID = ML.GROUP_ID\n" +
                                "                                                                                             WHERE PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                                                                                             AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                                "                                                                                               AND TRANS_FLAG = 'OP'\n" +
                                "                                                                                               AND LB.AMOUNT > 0\n" +
                                "                                                                                               AND LG.GROUP_ID NOT IN (12, 14, 13)\n" +
                                "                                                                                               AND LG.NATURE_ID IN (1, 2)\n" +
                                "                                                                                               AND LG.GROUP_ID NOT IN\n" +
                                "                                                                                                   (11, 12, 13, 14, 18, 22)\n" +
                                "                                                                                               AND BALANCE_DATE <= ?DATE_TO                  -- Date To OpeningBal then WHEN IT IS 2 YEAR PERIOD MAKE IT NULL\n" +
                                "                                                                                             GROUP BY LG.GROUP_ID) AS T2\n" +
                                "                                                                                     WHERE (T2.POP_DEBIT > 0 || T2.POP_CREDIT > 0)\n" +
                                "                                                                                     GROUP BY T2.GROUP_ID) AS OP\n" +
                                "                                                                            UNION ALL\n" +
                                "                                                                            SELECT 0.00               AS RECEIPTAMT,\n" +
                                "                                                                                   0.00               AS PAYMENTAMT,\n" +
                                "                                                                                   0.0                AS OP_TOTAL,\n" +
                                "                                                                                   CAP.OP_TRANS_TOTAL\n" +
                                "                                                                              FROM (SELECT T1.GROUP_ID,\n" +
                                "                                                                                           SUM(T1.CAPITAL_DEBIT) AS CAPITAL_DEBIT,\n" +
                                "                                                                                           SUM(T1.CAPITAL_CREDIT) AS CAPITAL_CREDIT,\n" +
                                "                                                                                           ((CASE\n" +
                                "                                                                                             WHEN SUM(T1.CAPITAL_DEBIT) >\n" +
                                "                                                                                                  SUM(T1.CAPITAL_CREDIT) THEN\n" +
                                "                                                                                              SUM(T1.CAPITAL_CREDIT) -\n" +
                                "                                                                                              SUM(T1.CAPITAL_DEBIT)\n" +
                                "                                                                                             ELSE\n" +
                                "                                                                                              0.00\n" +
                                "                                                                                           END) + (CASE\n" +
                                "                                                                                             WHEN SUM(T1.CAPITAL_CREDIT) >\n" +
                                "                                                                                                  SUM(T1.CAPITAL_DEBIT) THEN\n" +
                                "                                                                                              SUM(T1.CAPITAL_CREDIT) -\n" +
                                "                                                                                              SUM(T1.CAPITAL_DEBIT)\n" +
                                "                                                                                             ELSE\n" +
                                "                                                                                              0.00\n" +
                                "                                                                                           END)) AS OP_TRANS_TOTAL\n" +
                                "                                                                                      FROM (SELECT LG.GROUP_ID,\n" +
                                "                                                                                                   SUM(CASE\n" +
                                "                                                                                                         WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                                                                                          VT.AMOUNT\n" +
                                "                                                                                                         ELSE\n" +
                                "                                                                                                          0\n" +
                                "                                                                                                       END) AS 'CAPITAL_DEBIT',\n" +
                                "                                                                                                   SUM(CASE\n" +
                                "                                                                                                         WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                                "                                                                                                          VT.AMOUNT\n" +
                                "                                                                                                         ELSE\n" +
                                "                                                                                                          0\n" +
                                "                                                                                                       END) AS 'CAPITAL_CREDIT'\n" +
                                "                                                                                              FROM MASTER_LEDGER_GROUP LG\n" +
                                "                                                                                              LEFT JOIN MASTER_LEDGER ML\n" +
                                "                                                                                                ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                                                                                              LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                                                                                                ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                                                                                              LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                                                                                                ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                                                                                                AND VT.BRANCH_ID=MT.BRANCH_ID\n" +
                                "                                                                                             WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                                                                                             AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                                "                                                                                               AND MT.STATUS = 1\n" +
                                "                                                                                               AND VOUCHER_DATE BETWEEN ?YEAR_FROM AND ?DATE_AS_ON -- Date as on ( year from and date as on)...\n" +
                                "                                                                                               AND LG.GROUP_ID NOT IN (12, 13)\n" +
                                "                                                                                               AND LG.GROUP_ID = 21) AS T1\n" +
                                "                                                                                     GROUP BY T1.GROUP_ID) AS CAP) AS FNL\n" +
                                "                                                                    UNION ALL\n" +
                                "                                                                    SELECT\n" +
                                "                                                                     0 AS RECEIPTAMT,\n" +
                                "                                                                     0 AS PAYMENTAMT,\n" +
                                "                                                                     0 AS RPC_OP_TOTAL,\n" +
                                "                                                                     0 AS CAP_TRANS_TOTAL,\n" +
                                "                                                                     CASE\n" +
                                "                                                                       WHEN SUM(PREVIOUS.OP_DEBIT) > SUM(PREVIOUS.OP_CREDIT) THEN\n" +
                                "                                                                        - (SUM(PREVIOUS.OP_DEBIT) - SUM(PREVIOUS.OP_CREDIT))\n" +
                                "                                                                       WHEN SUM(PREVIOUS.OP_CREDIT) > SUM(PREVIOUS.OP_DEBIT) THEN\n" +
                                "                                                                        SUM(PREVIOUS.OP_CREDIT) - SUM(PREVIOUS.OP_DEBIT)\n" +
                                "                                                                     END AS OP_TOTAL,\n" +
                                "                                                                     0 AS IE_TOTAL,\n" +
                                "                                                                     -- SUM(PREVIOUS.OP_DEBIT) AS 'OP_DEBIT',\n" +
                                "                                                                     -- SUM(PREVIOUS.OP_CREDIT) AS 'OP_CREDIT',\n" +
                                "                                                                     CASE\n" +
                                "                                                                       WHEN SUM(PREVIOUS.OP_DEBIT) > SUM(PREVIOUS.OP_CREDIT) THEN\n" +
                                "                                                                        - (SUM(PREVIOUS.OP_DEBIT) - SUM(PREVIOUS.OP_CREDIT))\n" +
                                "                                                                       WHEN SUM(PREVIOUS.OP_CREDIT) > SUM(PREVIOUS.OP_DEBIT) THEN\n" +
                                "                                                                        SUM(PREVIOUS.OP_CREDIT) - SUM(PREVIOUS.OP_DEBIT)\n" +
                                "                                                                     END AS TOTAL,\n" +
                                "                                                                     CASE\n" +
                                "                                                                       WHEN SUM(PREVIOUS.OP_DEBIT) > SUM(PREVIOUS.OP_CREDIT) THEN\n" +
                                "                                                                        - (SUM(PREVIOUS.OP_DEBIT) - SUM(PREVIOUS.OP_CREDIT))\n" +
                                "                                                                       WHEN SUM(PREVIOUS.OP_CREDIT) > SUM(PREVIOUS.OP_DEBIT) THEN\n" +
                                "                                                                        SUM(PREVIOUS.OP_CREDIT) - SUM(PREVIOUS.OP_DEBIT)\n" +
                                "                                                                     END AS PREV_TOTAL\n" +
                                "                                                                      FROM (SELECT LG.GROUP_ID,\n" +
                                "                                                                                   LG.SORT_ORDER,\n" +
                                "                                                                                   ML.LEDGER_ID,\n" +
                                "                                                                                   MN.NATURE_ID,\n" +
                                "                                                                                   LG.GROUP_CODE,\n" +
                                "                                                                                   LG.LEDGER_GROUP,\n" +
                                "                                                                                   ML.LEDGER_CODE,\n" +
                                "                                                                                   ML.LEDGER_NAME,\n" +
                                "                                                                                   SUM(CASE\n" +
                                "                                                                                         WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                                "                                                                                          LB2.AMOUNT\n" +
                                "                                                                                         ELSE\n" +
                                "                                                                                          0\n" +
                                "                                                                                       END) AS OP_DEBIT,\n" +
                                "                                                                                   SUM(CASE\n" +
                                "                                                                                         WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                                "                                                                                          LB2.AMOUNT\n" +
                                "                                                                                         ELSE\n" +
                                "                                                                                          0\n" +
                                "                                                                                       END) AS OP_CREDIT\n" +
                                "                                                                              FROM MASTER_LEDGER AS ML\n" +
                                "                                                                             INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                                "                                                                                ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                                                                             INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                                "                                                                                               LB.PROJECT_ID,\n" +
                                "                                                                                               LB.LEDGER_ID,\n" +
                                "                                                                                               LB.AMOUNT,\n" +
                                "                                                                                               LB.TRANS_MODE\n" +
                                "                                                                                          FROM LEDGER_BALANCE AS LB\n" +
                                "                                                                                          LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                                "                                                                                                           LBA.LEDGER_ID,\n" +
                                "                                                                                                           MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                                "                                                                                                      FROM LEDGER_BALANCE LBA\n" +
                                "                                                                                                     WHERE 1 = 1\n" +
                                "                                                                                                       AND LBA.BALANCE_DATE <=\n" +
                                "                                                                                                           ?YEAR_TO               -- Year from 1 date reducing for DateTO\n" +
                                "                                                                                                     GROUP BY LBA.PROJECT_ID,\n" +
                                "                                                                                                              LBA.LEDGER_ID) AS LB1\n" +
                                "                                                                                            ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                                "                                                                                           AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                                "                                                                                           AND LB.AMOUNT > 0\n" +
                                "                                                                                         WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                                                                                           AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                                "                                                                                ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                                "                                                                              LEFT JOIN MASTER_NATURE MN\n" +
                                "                                                                                ON MN.NATURE_ID = LG.NATURE_ID\n" +
                                "                                                                             WHERE LG.GROUP_ID IN (SELECT LG.GROUP_ID\n" +
                                "                                                                                                     FROM MASTER_LEDGER ML\n" +
                                "                                                                                                    INNER JOIN PROJECT_LEDGER PL\n" +
                                "                                                                                                       ON ML.LEDGER_ID = PL.LEDGER_ID\n" +
                                "                                                                                                    INNER JOIN MASTER_LEDGER_GROUP LG\n" +
                                "                                                                                                       ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                                                                                                    WHERE PL.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                                                                                                      AND LG.NATURE_ID IN (1, 2)\n" +
                                "                                                                                                      AND ML.STATUS = 0)\n" +
                                "                                                                               AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                                "                                                                               AND ML.LEDGER_ID NOT IN (3)\n" +
                                "                                                                               AND ML.STATUS = 0\n" +
                                "                                                                            UNION ALL\n" +
                                "                                                                            SELECT LG.GROUP_ID,\n" +
                                "                                                                                   LG.SORT_ORDER,\n" +
                                "                                                                                   ML.LEDGER_ID,\n" +
                                "                                                                                   MN.NATURE_ID,\n" +
                                "                                                                                   LG.GROUP_CODE,\n" +
                                "                                                                                   LG.LEDGER_GROUP,\n" +
                                "                                                                                   ML.LEDGER_CODE,\n" +
                                "                                                                                   ML.LEDGER_NAME,\n" +
                                "                                                                                   SUM(CASE\n" +
                                "                                                                                         WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                                "                                                                                          LB2.AMOUNT\n" +
                                "                                                                                         ELSE\n" +
                                "                                                                                          0\n" +
                                "                                                                                       END) AS OP_DEBIT,\n" +
                                "                                                                                   SUM(CASE\n" +
                                "                                                                                         WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                                "                                                                                          LB2.AMOUNT\n" +
                                "                                                                                         ELSE\n" +
                                "                                                                                          0\n" +
                                "                                                                                       END) AS OP_CREDIT\n" +
                                "                                                                              FROM MASTER_LEDGER AS ML\n" +
                                "                                                                             INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                                "                                                                                ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                                                                             INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                                "                                                                                                LB.PROJECT_ID,\n" +
                                "                                                                                                LB.LEDGER_ID,\n" +
                                "                                                                                                LB.AMOUNT,\n" +
                                "                                                                                                LB.TRANS_MODE\n" +
                                "                                                                                           FROM LEDGER_BALANCE AS LB\n" +
                                "                                                                                           LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                                "                                                                                                            LBA.LEDGER_ID,\n" +
                                "                                                                                                            MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                                "                                                                                                       FROM LEDGER_BALANCE LBA\n" +
                                "                                                                                                      WHERE 1 = 1\n" +
                                "                                                                                                        AND LBA.BALANCE_DATE <=\n" +
                                "                                                                                                            ?YEAR_TO        -- Year from 1 date reducing for DateTo\n" +
                                "                                                                                                      GROUP BY LBA.PROJECT_ID,\n" +
                                "                                                                                                               LBA.LEDGER_ID) AS LB1\n" +
                                "                                                                                             ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                                "                                                                                            AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                                "                                                                                            AND LB.AMOUNT > 0\n" +
                                "                                                                                          WHERE LB.PROJECT_ID IN (?PROJECT_ID) AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                                "                                                                                            AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                                "                                                                                ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                                "                                                                              LEFT JOIN MASTER_NATURE MN\n" +
                                "                                                                                ON MN.NATURE_ID = LG.NATURE_ID\n" +
                                "                                                                             WHERE LG.GROUP_ID IN (SELECT LG.GROUP_ID\n" +
                                "                                                                                                     FROM MASTER_LEDGER ML\n" +
                                "                                                                                                    INNER JOIN PROJECT_LEDGER PL\n" +
                                "                                                                                                       ON ML.LEDGER_ID = PL.LEDGER_ID\n" +
                                "                                                                                                    INNER JOIN MASTER_LEDGER_GROUP LG\n" +
                                "                                                                                                       ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                                                                                                    WHERE PL.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                                                                                                      AND LG.NATURE_ID IN (4)\n" +
                                "                                                                                                      AND ML.STATUS = 0)\n" +
                                "                                                                               AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                                "                                                                               AND ML.LEDGER_ID IN (3)\n" +
                                "                                                                               AND ML.STATUS = 0) AS PREVIOUS) AS FINAL";
                        break;
                    }
                case ReportSQLCommand.FinalAccounts.BalanceScheduleIncome:
                    {
                        query = @" SELECT SUM(T.RECEIPTAMT) AS RECEIPTAMT
                                          FROM (SELECT CASE
                                                         WHEN SUM(CASE
                                                                    WHEN VT.TRANS_MODE = 'DR' THEN
                                                                     VT.AMOUNT
                                                                    ELSE
                                                                     -VT.AMOUNT
                                                                  END) < 0 THEN
                                                          ABS(SUM(CASE
                                                                    WHEN VT.TRANS_MODE = 'DR' THEN
                                                                     VT.AMOUNT
                                                                    ELSE
                                                                     -VT.AMOUNT
                                                                  END))
                                                       END AS RECEIPTAMT

                                                  FROM MASTER_LEDGER_GROUP LG

                                                  LEFT JOIN MASTER_LEDGER ML
                                                    ON ML.GROUP_ID = LG.GROUP_ID
                                                  LEFT JOIN VOUCHER_TRANS VT
                                                    ON VT.LEDGER_ID = ML.LEDGER_ID
                                                  LEFT JOIN VOUCHER_MASTER_TRANS MT
                                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID
                                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                                                   AND MT.STATUS = 1
                                                   AND VOUCHER_DATE <= ?DATE_AS_ON
                                                   AND LG.GROUP_ID NOT IN (12, 13)
                                                   AND LG.NATURE_ID NOT IN(3,4)
                                                 GROUP BY VT.LEDGER_ID) AS T
                                         WHERE T.RECEIPTAMT > 0";
                        break;
                    }
                case ReportSQLCommand.FinalAccounts.BalanceScheduleExpence:
                    {
                        query = "SELECT " +
                        "  SUM(T.PAYMENTAMT) AS PAYMENTAMT\n" +
                        "  FROM (SELECT \n" +
                        "               CASE\n" +
                        "                 WHEN SUM(CASE\n" +
                        "                            WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        "                             VT.AMOUNT\n" +
                        "                            ELSE\n" +
                        "                             -VT.AMOUNT\n" +
                        "                          END) > 0 THEN\n" +
                        "                  ABS(SUM(CASE\n" +
                        "                            WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        "                             VT.AMOUNT\n" +
                        "                            ELSE\n" +
                        "                             -VT.AMOUNT\n" +
                        "                          END))\n" +
                        "               END AS PAYMENTAMT\n" +
                        "\n" +
                        "          FROM MASTER_LEDGER_GROUP LG\n" +
                        "\n" +
                        "          LEFT JOIN MASTER_LEDGER ML\n" +
                        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        "          LEFT JOIN VOUCHER_TRANS VT\n" +
                        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "           AND MT.STATUS = 1\n" +
                        "           AND VOUCHER_DATE  <= ?DATE_AS_ON\n" +
                        "           AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        "           AND LG.NATURE_ID NOT IN (3, 4)\n" +
                        "         GROUP BY VT.LEDGER_ID) AS T\n" +
                        " WHERE T.PAYMENTAMT > 0";
                        break;
                    }
                case ReportSQLCommand.FinalAccounts.BalanceCapital:
                    {
                        query = @"SELECT T2.GROUP_ID,
                                        SUM(T2.CAPITAL_DEBIT) AS CAPITAL_DEBIT,
                                        SUM(T2.CAPITAL_CREDIT) AS CAPITAL_CREDIT
                                    FROM (SELECT LG.GROUP_ID,
                                                SUM(CASE
                                                        WHEN VT.TRANS_MODE = 'DR' THEN
                                                        VT.AMOUNT
                                                        ELSE
                                                        0
                                                    END) AS 'CAPITAL_DEBIT',
                                                SUM(CASE
                                                        WHEN VT.TRANS_MODE = 'CR' THEN
                                                        VT.AMOUNT
                                                        ELSE
                                                        0
                                                    END) AS 'CAPITAL_CREDIT'
                                            FROM MASTER_LEDGER_GROUP LG
                                            LEFT JOIN MASTER_LEDGER ML
                                                ON ML.GROUP_ID = LG.GROUP_ID
                                            LEFT JOIN VOUCHER_TRANS VT
                                                ON VT.LEDGER_ID = ML.LEDGER_ID
                                            LEFT JOIN VOUCHER_MASTER_TRANS MT
                                                ON VT.VOUCHER_ID = MT.VOUCHER_ID
                                            WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                                            AND MT.STATUS = 1
                                            AND VOUCHER_DATE <= ?DATE_AS_ON
                                            AND LG.GROUP_ID NOT IN (12, 13)
                                            AND LG.GROUP_ID = 21) AS T2
                                    GROUP BY T2.GROUP_ID ";

                        break;
                    }
                #endregion

                #region BalanceSheetGroup

                case ReportSQLCommand.FinalAccounts.BalanceSheetGroups:
                    {
                        #region New Query

                        query = "SELECT F.GROUP_ID,\n" +
                                    "       F.LEDGER_ID,\n" +
                                    "       F.GROUP_CODE,\n" +
                                    "       F.LEDGER_GROUP,\n" +
                                    "       F.LEDGER_CODE,\n" +
                                    "       F.LEDGER_NAME,\n" +
                                    "       SUM(F.OP_TOTAL) AS OP_TOTAL,\n" +
                                    "       SUM(F.POP_TOTAL) AS POP_TOTAL\n" +
                                    "  FROM (SELECT F2.GROUP_ID,\n" +
                                    "               F2.LEDGER_ID,\n" +
                                    "               F2.GROUP_CODE,\n" +
                                    "               F2.LEDGER_GROUP,\n" +
                                    "               F2.LEDGER_CODE,\n" +
                                    "               F2.LEDGER_NAME,\n" +
                                    "               SUM(F2.OP_TOTAL) AS OP_TOTAL,\n" +
                                    "               SUM(F2.POP_TOTAL) AS POP_TOTAL\n" +
                                    "          FROM (SELECT T1.GROUP_ID,\n" +
                                    "                       T1.LEDGER_ID,\n" +
                                    "                       T1.GROUP_CODE,\n" +
                                    "                       T1.LEDGER_GROUP,\n" +
                                    "                       T1.LEDGER_CODE,\n" +
                                    "                       T1.LEDGER_NAME,\n" +
                                    "                       CASE\n" +
                                    "                         WHEN SUM(T1.OP_DEBIT) > SUM(T1.OP_CREDIT) THEN\n" +
                                    "                          SUM(T1.OP_DEBIT) - SUM(T1.OP_CREDIT)\n" +
                                    "                         ELSE\n" +
                                    "                          0.00\n" +
                                    "                       END AS OP_DEBIT,\n" +
                                    "                       CASE\n" +
                                    "                         WHEN SUM(T1.OP_CREDIT) > SUM(T1.OP_DEBIT) THEN\n" +
                                    "                          SUM(T1.OP_CREDIT) - SUM(T1.OP_DEBIT)\n" +
                                    "                         ELSE\n" +
                                    "                          0.00\n" +
                                    "                       END AS OP_CREDIT,\n" +
                                    "                       '' AS 'POP_DEBIT',\n" +
                                    "                       '' AS 'POP_CREDIT',\n" +
                                    "                       ((CASE\n" +
                                    "                         WHEN SUM(T1.OP_DEBIT) > SUM(T1.OP_CREDIT) THEN\n" +
                                    "                          SUM(T1.OP_DEBIT) - SUM(T1.OP_CREDIT)\n" +
                                    "                         ELSE\n" +
                                    "                          0.00\n" +
                                    "                       END) + (CASE\n" +
                                    "                         WHEN SUM(T1.OP_CREDIT) > SUM(T1.OP_DEBIT) THEN\n" +
                                    "                          SUM(T1.OP_DEBIT) - SUM(T1.OP_CREDIT)\n" +
                                    "                         ELSE\n" +
                                    "                          0.00\n" +
                                    "                       END)) AS OP_TOTAL,\n" +
                                    "                       '' AS 'POP_TOTAL'\n" +
                                    "                  FROM (SELECT ML.GROUP_ID,\n" +
                                    "                               LG.GROUP_CODE,\n" +
                                    "                               'Current Assets' AS LEDGER_GROUP,\n" +
                                    "                               ML.LEDGER_ID,\n" +
                                    "                               ML.LEDGER_CODE,\n" +
                                    "                               ML.LEDGER_NAME,\n" +
                                    "                               SUM(CASE\n" +
                                    "                                     WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                                    "                                      LB2.AMOUNT\n" +
                                    "                                     ELSE\n" +
                                    "                                      0\n" +
                                    "                                   END) AS OP_DEBIT,\n" +
                                    "                               SUM(CASE\n" +
                                    "                                     WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                                    "                                      LB2.AMOUNT\n" +
                                    "                                     ELSE\n" +
                                    "                                      0\n" +
                                    "                                   END) AS OP_CREDIT,\n" +
                                    "                               '' AS 'POP_DEBIT',\n" +
                                    "                               '' AS 'POP_CREDIT',\n" +
                                    "                               '' AS 'OP_TOTAL',\n" +
                                    "                               '' AS 'POP_TOTAL'\n" +
                                    "                          FROM MASTER_LEDGER AS ML\n" +
                                    "                         INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                                    "                            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                    "                         INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                                    "                                           LB.PROJECT_ID,\n" +
                                    "                                           LB.LEDGER_ID,\n" +
                                    "                                           LB.AMOUNT,\n" +
                                    "                                           LB.TRANS_MODE\n" +
                                    "                                      FROM LEDGER_BALANCE AS LB\n" +
                                    "                                      LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                                    "                                                       LBA.LEDGER_ID,\n" +
                                    "                                                       MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                                    "                                                  FROM LEDGER_BALANCE LBA\n" +
                                    "                                                 WHERE 1 = 1\n" +
                                    "                                                   AND LBA.BALANCE_DATE <= ?DATE_AS_ON -- Data As On\n" +
                                    "                                                 GROUP BY LBA.PROJECT_ID,\n" +
                                    "                                                          LBA.LEDGER_ID) AS LB1\n" +
                                    "                                        ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                                    "                                       AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                                    "                                     WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "                                     {  AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                    "                                       AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                                    "                            ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                                    "                         WHERE 1 = 1\n" +
                                    "                           AND LG.GROUP_ID IN (11)\n" +
                                    "                         GROUP BY LG.GROUP_ID\n" +
                                    "                        UNION ALL\n" +
                                    "                        SELECT ML.GROUP_ID,\n" +
                                    "                               LG.GROUP_CODE,\n" +
                                    "                               'Current Assets' AS LEDGER_GROUP,\n" +
                                    "                               ML.LEDGER_ID,\n" +
                                    "                               ML.LEDGER_CODE,\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN ML.GROUP_ID = 13 THEN\n" +
                                    "                                  'Cash on Hand'\n" +
                                    "                                 WHEN ML.GROUP_ID = 12 THEN\n" +
                                    "                                  'Cash at Bank'\n" +
                                    "                                 WHEN ML.GROUP_ID = 14 THEN\n" +
                                    "                                  'Fixed Deposits'\n" +
                                    "                               END AS LEDGER_NAME,\n" +
                                    "                               --   ML.LEDGER_NAME,\n" +
                                    "                               SUM(CASE\n" +
                                    "                                     WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                                    "                                      LB2.AMOUNT\n" +
                                    "                                     ELSE\n" +
                                    "                                      0\n" +
                                    "                                   END) AS OP_DEBIT,\n" +
                                    "                               SUM(CASE\n" +
                                    "                                     WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                                    "                                      LB2.AMOUNT\n" +
                                    "                                     ELSE\n" +
                                    "                                      0\n" +
                                    "                                   END) AS OP_CREDIT,\n" +
                                    "                               '' AS 'POP_DEBIT',\n" +
                                    "                               '' AS 'POP_CREDIT',\n" +
                                    "                               '' AS 'OP_TOTAL',\n" +
                                    "                               '' AS 'POP_TOTAL'\n" +
                                    "                          FROM MASTER_LEDGER AS ML\n" +
                                    "                         INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                                    "                            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                    "                         INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                                    "                                            LB.PROJECT_ID,\n" +
                                    "                                            LB.LEDGER_ID,\n" +
                                    "                                            LB.AMOUNT,\n" +
                                    "                                            LB.TRANS_MODE\n" +
                                    "                                       FROM LEDGER_BALANCE AS LB\n" +
                                    "                                       LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                                    "                                                        LBA.LEDGER_ID,\n" +
                                    "                                                        MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                                    "                                                   FROM LEDGER_BALANCE LBA\n" +
                                    "                                                  WHERE 1 = 1\n" +
                                    "                                                    AND LBA.BALANCE_DATE <= ?DATE_AS_ON -- Data As On\n" +
                                    "                                                  GROUP BY LBA.PROJECT_ID,\n" +
                                    "                                                           LBA.LEDGER_ID) AS LB1\n" +
                                    "                                         ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                                    "                                        AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                                    "                                      WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "                                      {  AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                    "                                        AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                                    "                            ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                                    "                         WHERE 1 = 1\n" +
                                    "                           AND LG.GROUP_ID IN (12, 13, 14)\n" +
                                    "                         GROUP BY LG.GROUP_ID) AS T1\n" +
                                    "                 WHERE T1.OP_DEBIT > 0 || T1.OP_CREDIT > 0\n" +
                                    "                 GROUP BY T1.GROUP_ID\n" +
                                    "                UNION ALL\n" +
                                    "                SELECT T2.GROUP_ID,\n" +
                                    "                       T2.LEDGER_ID,\n" +
                                    "                       T2.GROUP_CODE,\n" +
                                    "                       T2.LEDGER_GROUP,\n" +
                                    "                       T2.LEDGER_CODE,\n" +
                                    "                       T2.LEDGER_NAME,\n" +
                                    "                       0 AS 'OP_DEBIT',\n" +
                                    "                       0 AS 'OP_CREDIT',\n" +
                                    "                       CASE\n" +
                                    "                         WHEN SUM(T2.POP_DEBIT) > SUM(T2.POP_CREDIT) THEN\n" +
                                    "                          SUM(T2.POP_DEBIT) - SUM(T2.POP_CREDIT)\n" +
                                    "                         ELSE\n" +
                                    "                          0.00\n" +
                                    "                       END AS POP_DEBIT,\n" +
                                    "                       CASE\n" +
                                    "                         WHEN SUM(T2.POP_CREDIT) > SUM(T2.POP_DEBIT) THEN\n" +
                                    "                          SUM(T2.POP_CREDIT) - SUM(T2.POP_DEBIT)\n" +
                                    "                         ELSE\n" +
                                    "                          0.00\n" +
                                    "                       END AS POP_CREDIT,\n" +
                                    "                       '' AS 'OP_TOTAL',\n" +
                                    "                       ((CASE\n" +
                                    "                         WHEN SUM(T2.POP_DEBIT) > SUM(T2.POP_CREDIT) THEN\n" +
                                    "                          (SUM(T2.POP_DEBIT) - SUM(T2.POP_CREDIT))\n" +
                                    "                         ELSE\n" +
                                    "                          0.00\n" +
                                    "                       END) + CASE\n" +
                                    "                         WHEN SUM(T2.POP_CREDIT) > SUM(T2.POP_DEBIT) THEN\n" +
                                    "                          SUM(T2.POP_DEBIT) - SUM(T2.POP_CREDIT)\n" +
                                    "                         ELSE\n" +
                                    "                          0.00\n" +
                                    "                       END) AS POP_TOTAL\n" +
                                    "                  FROM (SELECT ML.GROUP_ID,\n" +
                                    "                               ML.LEDGER_ID,\n" +
                                    "                               LG.GROUP_CODE,\n" +
                                    "                               'Current Assets' AS LEDGER_GROUP,\n" +
                                    "                               ML.LEDGER_CODE,\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN ML.GROUP_ID = 13 THEN\n" +
                                    "                                  'Cash on Hand'\n" +
                                    "                                 WHEN ML.GROUP_ID = 12 THEN\n" +
                                    "                                  'Cash at Bank'\n" +
                                    "                                 WHEN ML.GROUP_ID = 14 THEN\n" +
                                    "                                  'Fixed Deposits'\n" +
                                    "                               END AS LEDGER_NAME,\n" +
                                    "                               --    ML.LEDGER_NAME,\n" +
                                    "                               0 AS 'OP_DEBIT',\n" +
                                    "                               0 AS 'OP_CREDIT',\n" +
                                    "                               SUM(CASE\n" +
                                    "                                     WHEN LB.TRANS_MODE = 'DR' THEN\n" +
                                    "                                      LB.AMOUNT\n" +
                                    "                                     ELSE\n" +
                                    "                                      0\n" +
                                    "                                   END) AS 'POP_DEBIT',\n" +
                                    "                               SUM(CASE\n" +
                                    "                                     WHEN LB.TRANS_MODE = 'CR' THEN\n" +
                                    "                                      LB.AMOUNT\n" +
                                    "                                     ELSE\n" +
                                    "                                      0\n" +
                                    "                                   END) AS 'POP_CREDIT',\n" +
                                    "                               '' AS 'OP_TOTAL',\n" +
                                    "                               '' AS 'POP_TOTAL'\n" +
                                    "                          FROM LEDGER_BALANCE AS LB\n" +
                                    "                          LEFT JOIN MASTER_LEDGER AS ML\n" +
                                    "                            ON LB.LEDGER_ID = ML.LEDGER_ID\n" +
                                    "                          LEFT JOIN MASTER_LEDGER_GROUP LG\n" +
                                    "                            ON LG.GROUP_ID = ML.GROUP_ID\n" +
                                    "                         WHERE PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "                          { AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                    "                           AND TRANS_FLAG = 'OP'\n" +
                                    "                           AND LB.AMOUNT > 0\n" +
                                    "                           AND LG.GROUP_ID IN (11, 12, 13, 14)\n" +
                                    "                           AND BALANCE_DATE < ?DATE_AS_ON -- Data As On\n" +
                                    "                         GROUP BY LG.GROUP_ID\n" +
                                    "                        UNION ALL\n" +
                                    "                        SELECT ML.GROUP_ID,\n" +
                                    "                               ML.LEDGER_ID,\n" +
                                    "                               LG.GROUP_CODE,\n" +
                                    "                               'Current Assets' AS LEDGER_GROUP,\n" +
                                    "                               ML.LEDGER_CODE,\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN ML.GROUP_ID = 13 THEN\n" +
                                    "                                  'Cash on Hand'\n" +
                                    "                                 WHEN ML.GROUP_ID = 12 THEN\n" +
                                    "                                  'Cash at Bank'\n" +
                                    "                                 WHEN ML.GROUP_ID = 14 THEN\n" +
                                    "                                  'Fixed Deposits'\n" +
                                    "                               END AS LEDGER_NAME,\n" +
                                    "                               --    ML.LEDGER_NAME,\n" +
                                    "                               '' AS 'OP_DEBIT',\n" +
                                    "                               '' AS 'OP_CREDIT',\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN VOUCHER_TYPE IN ('RC') AND\n" +
                                    "                                      VT.TRANS_MODE = 'DR' THEN\n" +
                                    "                                  IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                                    "                                 ELSE\n" +
                                    "                                  '0.0'\n" +
                                    "                               END AS 'POP_DEBIT',\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN VOUCHER_TYPE IN ('PY') AND\n" +
                                    "                                      VT.TRANS_MODE = 'CR' THEN\n" +
                                    "                                  IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                                    "                                 ELSE\n" +
                                    "                                  '0'\n" +
                                    "                               END AS 'POP_CREDIT',\n" +
                                    "                               '' AS 'OP_TOTAL',\n" +
                                    "                               '' AS 'POP_TOTAL'\n" +
                                    "                          FROM MASTER_LEDGER_GROUP LG\n" +
                                    "                          LEFT JOIN MASTER_LEDGER ML\n" +
                                    "                            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                    "                          LEFT JOIN VOUCHER_TRANS VT\n" +
                                    "                            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                    "                          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                    "                            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                    "                           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                    "                         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "                         {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                    "                           AND MT.STATUS = 1\n" +
                                    "                           AND LG.GROUP_ID IN (12, 13, 14)\n" +
                                    "                           AND VOUCHER_DATE < ?YEAR_FROM -- yearfrom\n" +
                                    "                         GROUP BY VT.LEDGER_ID, VT.VOUCHER_ID\n" +
                                    "                        UNION ALL\n" +
                                    "                        SELECT ML.GROUP_ID,\n" +
                                    "                               ML.LEDGER_ID,\n" +
                                    "                               LG.GROUP_CODE,\n" +
                                    "                               'Current Assets' AS LEDGER_GROUP,\n" +
                                    "                               ML.LEDGER_CODE,\n" +
                                    "                               ML.LEDGER_NAME,\n" +
                                    "                               '' AS 'OP_DEBIT',\n" +
                                    "                               '' AS 'OP_CREDIT',\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN VOUCHER_TYPE IN ('PY') AND\n" +
                                    "                                      VT.TRANS_MODE = 'DR' THEN\n" +
                                    "                                  IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                                    "                                 ELSE\n" +
                                    "                                  '0.0'\n" +
                                    "                               END AS 'POP_DEBIT',\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN VOUCHER_TYPE IN ('RC') AND\n" +
                                    "                                      VT.TRANS_MODE = 'CR' THEN\n" +
                                    "                                  IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                                    "                                 ELSE\n" +
                                    "                                  '0'\n" +
                                    "                               END AS 'POP_CREDIT',\n" +
                                    "                               '' AS 'OP_TOTAL',\n" +
                                    "                               '' AS 'POP_TOTAL'\n" +
                                    "                          FROM MASTER_LEDGER_GROUP LG\n" +
                                    "                          LEFT JOIN MASTER_LEDGER ML\n" +
                                    "                            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                    "                          LEFT JOIN VOUCHER_TRANS VT\n" +
                                    "                            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                    "                          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                    "                            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                    "                           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                    "                         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "                         {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                    "                           AND MT.STATUS = 1\n" +
                                    "                           AND LG.GROUP_ID IN (11)\n" +
                                    "                           AND VOUCHER_DATE < ?YEAR_FROM -- yearfrom\n" +
                                    "                         GROUP BY VT.LEDGER_ID\n" +
                                    "                        UNION ALL\n" +
                                    "                        SELECT ML.GROUP_ID,\n" +
                                    "                               ML.LEDGER_ID,\n" +
                                    "                               LG.GROUP_CODE,\n" +
                                    "                               'Current Assets' AS LEDGER_GROUP,\n" +
                                    "                               ML.LEDGER_CODE,\n" +
                                    "                               ML.LEDGER_NAME,\n" +
                                    "                               '' AS 'OP_DEBIT',\n" +
                                    "                               '' AS 'OP_CREDIT',\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN VOUCHER_TYPE IN ('JN') AND\n" +
                                    "                                      VT.TRANS_MODE = 'DR' THEN\n" +
                                    "                                  IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                                    "                                 ELSE\n" +
                                    "                                  '0.0'\n" +
                                    "                               END AS 'POP_DEBIT',\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN VOUCHER_TYPE IN ('JN') AND\n" +
                                    "                                      VT.TRANS_MODE = 'CR' THEN\n" +
                                    "                                  IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                                    "                                 ELSE\n" +
                                    "                                  '0.0'\n" +
                                    "                               END AS 'POP_CREDIT',\n" +
                                    "                               '' AS 'OP_TOTAL',\n" +
                                    "                               '' AS 'POP_TOTAL'\n" +
                                    "                          FROM MASTER_LEDGER_GROUP LG\n" +
                                    "                          LEFT JOIN MASTER_LEDGER ML\n" +
                                    "                            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                    "                          LEFT JOIN VOUCHER_TRANS VT\n" +
                                    "                            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                    "                          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                    "                            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                    "                         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "                         {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                    "                           AND MT.STATUS = 1\n" +
                                    "                           AND LG.GROUP_ID IN (11)\n" +
                                    "                           AND VOUCHER_DATE < ?YEAR_FROM -- yearfrom\n" +
                                    "                           AND VOUCHER_TYPE IN ('JN')\n" +
                                    "                         GROUP BY VT.LEDGER_ID) AS T2\n" +
                                    "                 WHERE (T2.POP_DEBIT > 0 || T2.POP_CREDIT > 0)\n" +
                                    "                 GROUP BY T2.GROUP_ID) AS F2\n" +
                                    "         WHERE F2.OP_DEBIT > 0 || F2.OP_CREDIT > 0 || F2.POP_DEBIT >\n" +
                                    "               0 || F2.POP_CREDIT > 0\n" +
                                    "         GROUP BY F2.GROUP_ID\n" +
                                    "        UNION ALL\n" +
                                    "        SELECT F1.GROUP_ID,\n" +
                                    "               F1.LEDGER_ID,\n" +
                                    "               F1.GROUP_CODE,\n" +
                                    "               F1.LEDGER_GROUP,\n" +
                                    "               F1.LEDGER_CODE,\n" +
                                    "               F1.LEDGER_NAME AS LEDGER_NAME,\n" +
                                    "               SUM(F1.OP_TOTAL) AS OP_TOTAL,\n" +
                                    "               SUM(F1.POP_TOTAL) AS POP_TOTAL\n" +
                                    "          from (SELECT TEMP.GROUP_ID, -- Asset Transaction with Opeing Amount\n" +
                                    "                       TEMP.LEDGER_ID,\n" +
                                    "                       TEMP.GROUP_CODE,\n" +
                                    "                       TEMP.LEDGER_GROUP,\n" +
                                    "                       TEMP.LEDGER_CODE,\n" +
                                    "                       TEMP.LEDGER_NAME,\n" +
                                    "                       SUM(OP_DEBIT) AS 'OP_DEBIT',\n" +
                                    "                       SUM(OP_CREDIT) AS 'OP_CREDIT',\n" +
                                    "                       SUM(POP_DEBIT) AS 'POP_DEBIT',\n" +
                                    "                       SUM(POP_CREDIT) AS 'POP_CREDIT',\n" +
                                    "                       SUM(OP_TOTAL) AS 'OP_TOTAL',\n" +
                                    "                       SUM(POP_TOTAL) AS 'POP_TOTAL'\n" +
                                    "                  FROM (SELECT T.GROUP_ID, -- Asset Transaction with Opeing Amount\n" +
                                    "                               T.LEDGER_ID,\n" +
                                    "                               T.GROUP_CODE,\n" +
                                    "                               T.LEDGER_GROUP,\n" +
                                    "                               T.LEDGER_CODE,\n" +
                                    "                               T.LEDGER_NAME,\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN SUM(T.OP_DEBIT) > SUM(T.OP_CREDIT) THEN\n" +
                                    "                                  SUM(T.OP_DEBIT) - SUM(T.OP_CREDIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END AS OP_DEBIT,\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN SUM(T.OP_CREDIT) > SUM(T.OP_DEBIT) THEN\n" +
                                    "                                  SUM(T.OP_CREDIT) - SUM(T.OP_DEBIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END AS OP_CREDIT,\n" +
                                    "                               0 AS 'POP_DEBIT',\n" +
                                    "                               0 AS 'POP_CREDIT',\n" +
                                    "                               ((CASE\n" +
                                    "                                 WHEN SUM(T.OP_DEBIT) > SUM(T.OP_CREDIT) THEN\n" +
                                    "                                  SUM(T.OP_DEBIT) - SUM(T.OP_CREDIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END) + (CASE\n" +
                                    "                                 WHEN SUM(T.OP_CREDIT) > SUM(T.OP_DEBIT) THEN\n" +
                                    "                                  SUM(T.OP_DEBIT) - SUM(T.OP_CREDIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END)) AS OP_TOTAL,\n" +
                                    "                               0 AS 'POP_TOTAL'\n" +
                                    "                          FROM (SELECT LG.GROUP_ID,\n" +
                                    "                                       LG.GROUP_CODE,\n" +
                                    "                                       LG.LEDGER_GROUP,\n" +
                                    "                                       ML.LEDGER_ID,\n" +
                                    "                                       ML.LEDGER_CODE,\n" +
                                    "                                       ML.LEDGER_NAME,\n" +
                                    "                                       SUM(CASE\n" +
                                    "                                             WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                                    "                                              LB2.AMOUNT\n" +
                                    "                                             ELSE\n" +
                                    "                                              0\n" +
                                    "                                           END) AS OP_DEBIT,\n" +
                                    "                                       SUM(CASE\n" +
                                    "                                             WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                                    "                                              LB2.AMOUNT\n" +
                                    "                                             ELSE\n" +
                                    "                                              0\n" +
                                    "                                           END) AS OP_CREDIT,\n" +
                                    "                                       0 AS 'POP_DEBIT',\n" +
                                    "                                       0 AS 'POP_CREDIT',\n" +
                                    "                                       0 AS 'OP_TOTAL',\n" +
                                    "                                       0 AS 'POP_TOTAL'\n" +
                                    "                                  FROM MASTER_LEDGER AS ML\n" +
                                    "                                 INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                                    "                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                    "                                 INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                                    "                                                   LB.PROJECT_ID,\n" +
                                    "                                                   LB.LEDGER_ID,\n" +
                                    "                                                   LB.AMOUNT,\n" +
                                    "                                                   LB.TRANS_MODE\n" +
                                    "                                              FROM LEDGER_BALANCE AS LB\n" +
                                    "                                              LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                                    "                                                               LBA.LEDGER_ID,\n" +
                                    "                                                               MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                                    "                                                          FROM LEDGER_BALANCE LBA\n" +
                                    "                                                         WHERE 1 = 1\n" +
                                    "                                                           AND LBA.BALANCE_DATE <= ?DATE_AS_ON -- Data As On\n" +
                                    "                                                         GROUP BY LBA.PROJECT_ID,\n" +
                                    "                                                                  LBA.LEDGER_ID) AS LB1\n" +
                                    "                                                ON LB.PROJECT_ID =\n" +
                                    "                                                   LB1.PROJECT_ID\n" +
                                    "                                               AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                                    "                                             WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "                                             {  AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                    "                                               AND LB.BALANCE_DATE =\n" +
                                    "                                                   LB1.BAL_DATE) LB2\n" +
                                    "                                    ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                                    "                                 WHERE 1 = 1\n" +
                                    "                                   AND LG.GROUP_ID NOT IN (11,12,13,14,15,18,21,22,153,154)\n" +
                                    "                                   AND LG.NATURE_ID IN (3)\n" +
                                    "                                 GROUP BY LG.GROUP_ID) AS T\n" +
                                    "                         WHERE T.OP_DEBIT > 0 || T.OP_CREDIT > 0\n" +
                                    "                         GROUP BY T.GROUP_ID\n" +
                                    "                        UNION ALL -- liability Transaction with Opening Bal Amount\n" +
                                    "                        SELECT T.GROUP_ID,\n" +
                                    "                               T.LEDGER_ID,\n" +
                                    "                               T.GROUP_CODE,\n" +
                                    "                               T.LEDGER_GROUP,\n" +
                                    "                               T.LEDGER_CODE,\n" +
                                    "                               T.LEDGER_NAME,\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN SUM(T.OP_DEBIT) > SUM(T.OP_CREDIT) THEN\n" +
                                    "                                  SUM(T.OP_DEBIT) - SUM(T.OP_CREDIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END AS OP_DEBIT,\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN SUM(T.OP_CREDIT) > SUM(T.OP_DEBIT) THEN\n" +
                                    "                                  SUM(T.OP_CREDIT) - SUM(T.OP_DEBIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END AS OP_CREDIT,\n" +
                                    "                               0 AS 'POP_DEBIT',\n" +
                                    "                               0 AS 'POP_CREDIT',\n" +
                                    "                               ((CASE\n" +
                                    "                                 WHEN SUM(T.OP_DEBIT) > SUM(T.OP_CREDIT) THEN\n" +
                                    "                                  SUM(T.OP_CREDIT) - SUM(T.OP_DEBIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END) + (CASE\n" +
                                    "                                 WHEN SUM(T.OP_CREDIT) > SUM(T.OP_DEBIT) THEN\n" +
                                    "                                  SUM(T.OP_CREDIT) - SUM(T.OP_DEBIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END)) AS OP_TOTAL,\n" +
                                    "                               0 AS 'POP_TOTAL'\n" +
                                    "                          FROM (SELECT LG.GROUP_ID,\n" +
                                    "                                       LG.GROUP_CODE,\n" +
                                    "                                       LG.LEDGER_GROUP,\n" +
                                    "                                       ML.LEDGER_ID,\n" +
                                    "                                       ML.LEDGER_CODE,\n" +
                                    "                                       ML.LEDGER_NAME,\n" +
                                    "                                       SUM(CASE\n" +
                                    "                                             WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                                    "                                              LB2.AMOUNT\n" +
                                    "                                             ELSE\n" +
                                    "                                              0\n" +
                                    "                                           END) AS OP_DEBIT,\n" +
                                    "                                       SUM(CASE\n" +
                                    "                                             WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                                    "                                              LB2.AMOUNT\n" +
                                    "                                             ELSE\n" +
                                    "                                              0\n" +
                                    "                                           END) AS OP_CREDIT,\n" +
                                    "                                       0 AS 'POP_DEBIT',\n" +
                                    "                                       0 AS 'POP_CREDIT',\n" +
                                    "                                       0 AS 'OP_TOTAL',\n" +
                                    "                                       0 AS 'POP_TOTAL'\n" +
                                    "                                  FROM MASTER_LEDGER AS ML\n" +
                                    "                                 INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                                    "                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                    "                                 INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                                    "                                                   LB.PROJECT_ID,\n" +
                                    "                                                   LB.LEDGER_ID,\n" +
                                    "                                                   LB.AMOUNT,\n" +
                                    "                                                   LB.TRANS_MODE\n" +
                                    "                                              FROM LEDGER_BALANCE AS LB\n" +
                                    "                                              LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                                    "                                                               LBA.LEDGER_ID,\n" +
                                    "                                                               MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                                    "                                                          FROM LEDGER_BALANCE LBA\n" +
                                    "                                                         WHERE 1 = 1\n" +
                                    "                                                           AND LBA.BALANCE_DATE <= ?DATE_AS_ON -- Data As On\n" +
                                    "                                                         GROUP BY LBA.PROJECT_ID,\n" +
                                    "                                                                  LBA.LEDGER_ID) AS LB1\n" +
                                    "                                                ON LB.PROJECT_ID =\n" +
                                    "                                                   LB1.PROJECT_ID\n" +
                                    "                                               AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                                    "                                             WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "                                              { AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                    "                                               AND LB.BALANCE_DATE =\n" +
                                    "                                                   LB1.BAL_DATE) LB2\n" +
                                    "                                    ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                                    "                                 WHERE 1 = 1\n" +
                                    "                                   AND LG.GROUP_ID NOT IN (11,12,13,14,15,18,21,22,153,154)\n" +
                                    "                                   AND LG.NATURE_ID IN (4)\n" +
                                    "                                 GROUP BY LG.GROUP_ID) AS T\n" +
                                    "                         WHERE T.OP_DEBIT > 0 || T.OP_CREDIT > 0\n" +
                                    "                         GROUP BY T.GROUP_ID) AS TEMP\n" +
                                    "                 GROUP BY TEMP.GROUP_ID\n" +
                                    "                UNION ALL\n" +
                                    "                SELECT TEMP1.GROUP_ID, -- Asset Transaction with Opeing Amount\n" +
                                    "                       TEMP1.LEDGER_ID,\n" +
                                    "                       TEMP1.GROUP_CODE,\n" +
                                    "                       TEMP1.LEDGER_GROUP,\n" +
                                    "                       TEMP1.LEDGER_CODE,\n" +
                                    "                       TEMP1.LEDGER_NAME,\n" +
                                    "                       SUM(OP_DEBIT) AS 'OP_DEBIT',\n" +
                                    "                       SUM(OP_CREDIT) AS 'OP_CREDIT',\n" +
                                    "                       SUM(POP_DEBIT) AS 'POP_DEBIT',\n" +
                                    "                       SUM(POP_CREDIT) AS 'POP_CREDIT',\n" +
                                    "                       SUM(OP_TOTAL) AS 'OP_TOTAL',\n" +
                                    "                       SUM(POP_TOTAL) AS 'POP_TOTAL'\n" +
                                    "                  FROM (SELECT T1.GROUP_ID,\n" +
                                    "                               T1.LEDGER_ID,\n" +
                                    "                               T1.GROUP_CODE,\n" +
                                    "                               T1.LEDGER_GROUP,\n" +
                                    "                               T1.LEDGER_CODE,\n" +
                                    "                               T1.LEDGER_NAME,\n" +
                                    "                               0 AS 'OP_DEBIT',\n" +
                                    "                               0 AS 'OP_CREDIT',\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN SUM(T1.POP_DEBIT) > SUM(T1.POP_CREDIT) THEN\n" +
                                    "                                  SUM(T1.POP_DEBIT) - SUM(T1.POP_CREDIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END AS POP_DEBIT,\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN SUM(T1.POP_CREDIT) > SUM(T1.POP_DEBIT) THEN\n" +
                                    "                                  SUM(T1.POP_CREDIT) - SUM(T1.POP_DEBIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END AS POP_CREDIT,\n" +
                                    "                               0 AS 'OP_TOTAL',\n" +
                                    "                               ((CASE\n" +
                                    "                                 WHEN SUM(T1.POP_DEBIT) > SUM(T1.POP_CREDIT) THEN\n" +
                                    "                                  SUM(T1.POP_DEBIT) - SUM(T1.POP_CREDIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END) + (CASE\n" +
                                    "                                 WHEN SUM(T1.POP_CREDIT) > SUM(T1.POP_DEBIT) THEN\n" +
                                    "                                  SUM(T1.POP_DEBIT) - SUM(T1.POP_CREDIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END)) AS POP_TOTAL\n" +
                                    "                          FROM (SELECT LG.GROUP_ID,\n" +
                                    "                                       ML.LEDGER_ID,\n" +
                                    "                                       LG.GROUP_CODE,\n" +
                                    "                                       LG.LEDGER_GROUP,\n" +
                                    "                                       ML.LEDGER_CODE,\n" +
                                    "                                       ML.LEDGER_NAME,\n" +
                                    "                                       0 AS 'OP_DEBIT',\n" +
                                    "                                       0 AS 'OP_CREDIT',\n" +
                                    "                                       SUM(CASE\n" +
                                    "                                             WHEN LB.TRANS_MODE = 'DR' THEN\n" +
                                    "                                              LB.AMOUNT\n" +
                                    "                                             ELSE\n" +
                                    "                                              0\n" +
                                    "                                           END) AS 'POP_DEBIT',\n" +
                                    "                                       SUM(CASE\n" +
                                    "                                             WHEN LB.TRANS_MODE = 'CR' THEN\n" +
                                    "                                              LB.AMOUNT\n" +
                                    "                                             ELSE\n" +
                                    "                                              0\n" +
                                    "                                           END) AS 'POP_CREDIT',\n" +
                                    "                                       '' AS 'OP_TOTAL',\n" +
                                    "                                       '' AS 'POP_TOTAL'\n" +
                                    "                                  FROM LEDGER_BALANCE AS LB\n" +
                                    "                                  LEFT JOIN MASTER_LEDGER AS ML\n" +
                                    "                                    ON LB.LEDGER_ID = ML.LEDGER_ID\n" +
                                    "                                  LEFT JOIN MASTER_LEDGER_GROUP LG\n" +
                                    "                                    ON LG.GROUP_ID = ML.GROUP_ID\n" +
                                    "                                 WHERE PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "                                  { AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                    "                                   AND TRANS_FLAG = 'OP'\n" +
                                    "                                   AND LB.AMOUNT > 0\n" +
                                    "                                   AND LG.GROUP_ID NOT IN (12, 14, 13)\n" +
                                    "                                   AND LG.NATURE_ID IN (3)\n" +
                                    "                                   AND LG.GROUP_ID NOT IN (11, 12, 13, 14, 18, 21, 22, 153, 154)\n" +
                                    "                                   AND BALANCE_DATE < ?DATE_AS_ON -- Data As On\n" +
                                    "                                 GROUP BY LG.GROUP_ID\n" +
                                    "                                UNION ALL\n" +
                                    "                                SELECT LG.GROUP_ID,\n" +
                                    "                                       ML.LEDGER_ID,\n" +
                                    "                                       LG.GROUP_CODE,\n" +
                                    "                                       LG.LEDGER_GROUP,\n" +
                                    "                                       ML.LEDGER_CODE,\n" +
                                    "                                       ML.LEDGER_NAME,\n" +
                                    "                                       0 AS 'OP_DEBIT',\n" +
                                    "                                       0 AS 'OP_CREDIT',\n" +
                                    "                                       CASE\n" +
                                    "                                         WHEN VOUCHER_TYPE IN ('PY') AND\n" +
                                    "                                              VT.TRANS_MODE = 'DR' THEN\n" +
                                    "                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                                    "                                         ELSE\n" +
                                    "                                          '0.0'\n" +
                                    "                                       END AS 'POP_DEBIT',\n" +
                                    "                                       CASE\n" +
                                    "                                         WHEN VOUCHER_TYPE IN ('RC') AND\n" +
                                    "                                              VT.TRANS_MODE = 'CR' THEN\n" +
                                    "                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                                    "                                         ELSE\n" +
                                    "                                          '0'\n" +
                                    "                                       END AS 'POP_CREDIT',\n" +
                                    "                                       '' AS 'OP_TOTAL',\n" +
                                    "                                       '' AS 'POP_TOTAL'\n" +
                                    "                                  FROM MASTER_LEDGER_GROUP LG\n" +
                                    "                                  LEFT JOIN MASTER_LEDGER ML\n" +
                                    "                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                    "                                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                    "                                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                    "                                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                    "                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                    "                                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                    "                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "                                 {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                    "                                   AND MT.STATUS = 1\n" +
                                    "                                   AND LG.NATURE_ID IN (3)\n" +
                                    "                                   AND VOUCHER_DATE < ?YEAR_FROM -- yearfrom\n" +
                                    "                                   AND LG.GROUP_ID NOT IN (11, 12, 13, 14, 18, 21, 22, 153, 154)\n" +
                                    "                                 GROUP BY VT.LEDGER_ID, VT.VOUCHER_ID\n" +
                                    "                                UNION ALL\n" +
                                    "                                SELECT LG.GROUP_ID,\n" +
                                    "                                       ML.LEDGER_ID,\n" +
                                    "                                       LG.GROUP_CODE,\n" +
                                    "                                       LG.LEDGER_GROUP,\n" +
                                    "                                       ML.LEDGER_CODE,\n" +
                                    "                                       ML.LEDGER_NAME,\n" +
                                    "                                       0 AS 'OP_DEBIT',\n" +
                                    "                                       0 AS 'OP_CREDIT',\n" +
                                    "                                       CASE\n" +
                                    "                                         WHEN VOUCHER_TYPE IN ('JN') AND\n" +
                                    "                                              VT.TRANS_MODE = 'DR' THEN\n" +
                                    "                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                                    "                                         ELSE\n" +
                                    "                                          '0.0'\n" +
                                    "                                       END AS 'POP_DEBIT',\n" +
                                    "                                       CASE\n" +
                                    "                                         WHEN VOUCHER_TYPE IN ('JN') AND\n" +
                                    "                                              VT.TRANS_MODE = 'CR' THEN\n" +
                                    "                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                                    "                                         ELSE\n" +
                                    "                                          '0.0'\n" +
                                    "                                       END AS 'POP_CREDIT',\n" +
                                    "                                       '' AS 'OP_TOTAL',\n" +
                                    "                                       '' AS 'POP_TOTAL'\n" +
                                    "                                  FROM MASTER_LEDGER_GROUP LG\n" +
                                    "                                  LEFT JOIN MASTER_LEDGER ML\n" +
                                    "                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                    "                                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                    "                                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                    "                                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                    "                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                    "                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "                                   AND MT.STATUS = 1\n" +
                                    "                                   AND LG.NATURE_ID IN (3)\n" +
                                    "                                   AND VOUCHER_DATE < ?YEAR_FROM -- yearfrom\n" +
                                    "                                   AND VOUCHER_TYPE in ('JN')\n" +
                                    "                                   AND LG.GROUP_ID NOT IN (11, 12, 13, 14, 18, 21, 22, 153, 154)\n" +
                                    "                                 GROUP BY VT.LEDGER_ID, VT.VOUCHER_ID) AS T1\n" +
                                    "                         WHERE (T1.POP_DEBIT > 0 || T1.POP_CREDIT > 0)\n" +
                                    "                         GROUP BY T1.GROUP_ID\n" +
                                    "                        UNION ALL\n" +
                                    "                        SELECT T1.GROUP_ID,\n" +
                                    "                               T1.LEDGER_ID,\n" +
                                    "                               T1.GROUP_CODE,\n" +
                                    "                               T1.LEDGER_GROUP,\n" +
                                    "                               T1.LEDGER_CODE,\n" +
                                    "                               T1.LEDGER_NAME,\n" +
                                    "                               0 AS 'OP_DEBIT',\n" +
                                    "                               0 AS 'OP_CREDIT',\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN SUM(T1.POP_DEBIT) > SUM(T1.POP_CREDIT) THEN\n" +
                                    "                                  SUM(T1.POP_DEBIT) - SUM(T1.POP_CREDIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END AS POP_DEBIT,\n" +
                                    "                               CASE\n" +
                                    "                                 WHEN SUM(T1.POP_CREDIT) > SUM(T1.POP_DEBIT) THEN\n" +
                                    "                                  SUM(T1.POP_CREDIT) - SUM(T1.POP_DEBIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END AS POP_CREDIT,\n" +
                                    "                               0 AS 'OP_TOTAL',\n" +
                                    "                               ((CASE\n" +
                                    "                                 WHEN SUM(T1.POP_DEBIT) > SUM(T1.POP_CREDIT) THEN\n" +
                                    "                                  SUM(T1.POP_CREDIT) - SUM(T1.POP_DEBIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END) + (CASE\n" +
                                    "                                 WHEN SUM(T1.POP_CREDIT) > SUM(T1.POP_DEBIT) THEN\n" +
                                    "                                  SUM(T1.POP_CREDIT) - SUM(T1.POP_DEBIT)\n" +
                                    "                                 ELSE\n" +
                                    "                                  0.00\n" +
                                    "                               END)) AS POP_TOTAL\n" +
                                    "                          FROM (SELECT LG.GROUP_ID,\n" +
                                    "                                       ML.LEDGER_ID,\n" +
                                    "                                       LG.GROUP_CODE,\n" +
                                    "                                       LG.LEDGER_GROUP,\n" +
                                    "                                       ML.LEDGER_CODE,\n" +
                                    "                                       ML.LEDGER_NAME,\n" +
                                    "                                       0 AS 'OP_DEBIT',\n" +
                                    "                                       0 AS 'OP_CREDIT',\n" +
                                    "                                       SUM(CASE\n" +
                                    "                                             WHEN LB.TRANS_MODE = 'DR' THEN\n" +
                                    "                                              LB.AMOUNT\n" +
                                    "                                             ELSE\n" +
                                    "                                              0\n" +
                                    "                                           END) AS 'POP_DEBIT',\n" +
                                    "                                       SUM(CASE\n" +
                                    "                                             WHEN LB.TRANS_MODE = 'CR' THEN\n" +
                                    "                                              LB.AMOUNT\n" +
                                    "                                             ELSE\n" +
                                    "                                              0\n" +
                                    "                                           END) AS 'POP_CREDIT',\n" +
                                    "                                       '' AS 'OP_TOTAL',\n" +
                                    "                                       '' AS 'POP_TOTAL'\n" +
                                    "                                  FROM LEDGER_BALANCE AS LB\n" +
                                    "                                  LEFT JOIN MASTER_LEDGER AS ML\n" +
                                    "                                    ON LB.LEDGER_ID = ML.LEDGER_ID\n" +
                                    "                                  LEFT JOIN MASTER_LEDGER_GROUP LG\n" +
                                    "                                    ON LG.GROUP_ID = ML.GROUP_ID\n" +
                                    "                                 WHERE PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "                                   AND TRANS_FLAG = 'OP'\n" +
                                    "                                   AND LB.AMOUNT > 0\n" +
                                    "                                   AND LG.GROUP_ID NOT IN (12, 14, 13)\n" +
                                    "                                   AND LG.NATURE_ID IN (4)\n" +
                                    "                                   AND LG.GROUP_ID NOT IN (11, 12, 13, 14, 18, 21, 22, 153, 154)\n" +
                                    "                                   AND BALANCE_DATE < ?DATE_AS_ON -- Data As On\n" +
                                    "                                 GROUP BY LG.GROUP_ID\n" +
                                    "                                UNION ALL\n" +
                                    "                                SELECT LG.GROUP_ID,\n" +
                                    "                                       ML.LEDGER_ID,\n" +
                                    "                                       LG.GROUP_CODE,\n" +
                                    "                                       LG.LEDGER_GROUP,\n" +
                                    "                                       ML.LEDGER_CODE,\n" +
                                    "                                       ML.LEDGER_NAME,\n" +
                                    "                                       0 AS 'OP_DEBIT',\n" +
                                    "                                       0 AS 'OP_CREDIT',\n" +
                                    "                                       CASE\n" +
                                    "                                         WHEN VOUCHER_TYPE IN ('PY') AND\n" +
                                    "                                              VT.TRANS_MODE = 'DR' THEN\n" +
                                    "                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                                    "                                         ELSE\n" +
                                    "                                          '0.0'\n" +
                                    "                                       END AS 'POP_DEBIT',\n" +
                                    "                                       CASE\n" +
                                    "                                         WHEN VOUCHER_TYPE IN ('RC') AND\n" +
                                    "                                              VT.TRANS_MODE = 'CR' THEN\n" +
                                    "                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                                    "                                         ELSE\n" +
                                    "                                          '0'\n" +
                                    "                                       END AS 'POP_CREDIT',\n" +
                                    "                                       '' AS 'OP_TOTAL',\n" +
                                    "                                       '' AS 'POP_TOTAL'\n" +
                                    "                                  FROM MASTER_LEDGER_GROUP LG\n" +
                                    "                                  LEFT JOIN MASTER_LEDGER ML\n" +
                                    "                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                    "                                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                    "                                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                    "                                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                    "                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                    "                                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                    "                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "                                 {  AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                    "                                   AND MT.STATUS = 1\n" +
                                    "                                   AND LG.NATURE_ID IN (4)\n" +
                                    "                                   AND VOUCHER_DATE < ?YEAR_FROM -- yearfrom\n" +
                                    "                                   AND LG.GROUP_ID NOT IN\n" +
                                    "                                       (11, 12, 13, 14, 18, 21, 22, 153, 154)\n" +
                                    "                                 GROUP BY VT.LEDGER_ID, VT.VOUCHER_ID\n" +
                                    "                                UNION ALL\n" +
                                    "                                SELECT LG.GROUP_ID,\n" +
                                    "                                       ML.LEDGER_ID,\n" +
                                    "                                       LG.GROUP_CODE,\n" +
                                    "                                       LG.LEDGER_GROUP,\n" +
                                    "                                       ML.LEDGER_CODE,\n" +
                                    "                                       ML.LEDGER_NAME,\n" +
                                    "                                       0 AS 'OP_DEBIT',\n" +
                                    "                                       0 AS 'OP_CREDIT',\n" +
                                    "                                       CASE\n" +
                                    "                                         WHEN VOUCHER_TYPE IN ('JN') AND\n" +
                                    "                                              VT.TRANS_MODE = 'DR' THEN\n" +
                                    "                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                                    "                                         ELSE\n" +
                                    "                                          '0.0'\n" +
                                    "                                       END AS 'POP_DEBIT',\n" +
                                    "                                       CASE\n" +
                                    "                                         WHEN VOUCHER_TYPE IN ('JN') AND\n" +
                                    "                                              VT.TRANS_MODE = 'CR' THEN\n" +
                                    "                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                                    "                                         ELSE\n" +
                                    "                                          '0.0'\n" +
                                    "                                       END AS 'POP_CREDIT',\n" +
                                    "                                       '' AS 'OP_TOTAL',\n" +
                                    "                                       '' AS 'POP_TOTAL'\n" +
                                    "                                  FROM MASTER_LEDGER_GROUP LG\n" +
                                    "                                  LEFT JOIN MASTER_LEDGER ML\n" +
                                    "                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                    "                                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                    "                                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                    "                                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                    "                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                    "                                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                    "                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "                                {   AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                    "                                   AND MT.STATUS = 1\n" +
                                    "                                   AND LG.NATURE_ID IN (4)\n" +
                                    "                                   AND VOUCHER_DATE < ?YEAR_FROM -- yearfrom\n" +
                                    "                                   AND VOUCHER_TYPE in ('JN')\n" +
                                    "                                   AND LG.GROUP_ID NOT IN (11, 12, 13, 14, 18, 21, 22, 153, 154)\n" +
                                    "                                 GROUP BY VT.LEDGER_ID, VT.VOUCHER_ID) AS T1\n" +
                                    "                         WHERE (T1.POP_DEBIT > 0 || T1.POP_CREDIT > 0)\n" +
                                    "                         GROUP BY T1.GROUP_ID) AS TEMP1\n" +
                                    "                 GROUP BY TEMP1.GROUP_ID) AS F1\n" +
                                    "         GROUP BY F1.GROUP_ID) AS F\n" +
                                    " INNER JOIN MASTER_PROJECT\n" +
                                    " WHERE PROJECT_ID IN (?PROJECT_ID)\n" +
                                    " {  AND CUSTOMERID IN (?LEGAL_ENTITY_ID) }\n" +
                                    " GROUP BY F.GROUP_ID";


                        #endregion

                        #region Old Query
                        //query = "SELECT F.GROUP_ID,\n" +
                        //                                "                                    F.LEDGER_ID,\n" +
                        //                                "                                    F.GROUP_CODE,\n" +
                        //                                "                                    F.LEDGER_GROUP,\n" +
                        //                                "                                    F.LEDGER_CODE,\n" +
                        //                                "                                    F.LEDGER_NAME,\n" +
                        //                                "                                    SUM(F.OP_TOTAL) AS OP_TOTAL,\n" +
                        //                                "                                    SUM(F.POP_TOTAL) AS POP_TOTAL\n" +
                        //                                "                               FROM (SELECT F2.GROUP_ID,\n" +
                        //                                "                                            F2.LEDGER_ID,\n" +
                        //                                "                                            F2.GROUP_CODE,\n" +
                        //                                "                                            F2.LEDGER_GROUP,\n" +
                        //                                "                                            F2.LEDGER_CODE,\n" +
                        //                                "                                            F2.LEDGER_NAME,\n" +
                        //                                "                                            SUM(F2.OP_TOTAL) AS OP_TOTAL,\n" +
                        //                                "                                            SUM(F2.POP_TOTAL) AS POP_TOTAL\n" +
                        //                                "                                       FROM (SELECT T1.GROUP_ID,\n" +
                        //                                "                                                    T1.LEDGER_ID,\n" +
                        //                                "                                                    T1.GROUP_CODE,\n" +
                        //                                "                                                    T1.LEDGER_GROUP,\n" +
                        //                                "                                                    T1.LEDGER_CODE,\n" +
                        //                                "                                                    T1.LEDGER_NAME,\n" +
                        //                                "                                                    CASE\n" +
                        //                                "                                                      WHEN SUM(T1.OP_DEBIT) > SUM(T1.OP_CREDIT) THEN\n" +
                        //                                "                                                       SUM(T1.OP_DEBIT) - SUM(T1.OP_CREDIT)\n" +
                        //                                "                                                      ELSE\n" +
                        //                                "                                                       0.00\n" +
                        //                                "                                                    END AS OP_DEBIT,\n" +
                        //                                "                                                    CASE\n" +
                        //                                "                                                      WHEN SUM(T1.OP_CREDIT) > SUM(T1.OP_DEBIT) THEN\n" +
                        //                                "                                                       SUM(T1.OP_CREDIT) - SUM(T1.OP_DEBIT)\n" +
                        //                                "                                                      ELSE\n" +
                        //                                "                                                       0.00\n" +
                        //                                "                                                    END AS OP_CREDIT,\n" +
                        //                                "                                                    '' AS 'POP_DEBIT',\n" +
                        //                                "                                                    '' AS 'POP_CREDIT',\n" +
                        //                                "                                                    ((CASE\n" +
                        //                                "                                                      WHEN SUM(T1.OP_DEBIT) > SUM(T1.OP_CREDIT) THEN\n" +
                        //                                "                                                       SUM(T1.OP_DEBIT) - SUM(T1.OP_CREDIT)\n" +
                        //                                "                                                      ELSE\n" +
                        //                                "                                                       0.00\n" +
                        //                                "                                                    END) + (CASE\n" +
                        //                                "                                                      WHEN SUM(T1.OP_CREDIT) > SUM(T1.OP_DEBIT) THEN\n" +
                        //                                "                                                       SUM(T1.OP_DEBIT) - SUM(T1.OP_CREDIT)\n" +
                        //                                "                                                      ELSE\n" +
                        //                                "                                                       0.00\n" +
                        //                                "                                                    END)) AS OP_TOTAL,\n" +
                        //                                "                                                    '' AS 'POP_TOTAL'\n" +
                        //                                "                                               FROM (SELECT ML.GROUP_ID,\n" +
                        //                                "                                                            LG.GROUP_CODE,\n" +
                        //                                "                                                            'Current Assets' AS LEDGER_GROUP,\n" +
                        //                                "                                                            ML.LEDGER_ID,\n" +
                        //                                "                                                            ML.LEDGER_CODE,\n" +
                        //                                "                                                            ML.LEDGER_NAME,\n" +
                        //                                "                                                            SUM(CASE\n" +
                        //                                "                                                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //                                "                                                                   LB2.AMOUNT\n" +
                        //                                "                                                                  ELSE\n" +
                        //                                "                                                                   0\n" +
                        //                                "                                                                END) AS OP_DEBIT,\n" +
                        //                                "                                                            SUM(CASE\n" +
                        //                                "                                                                  WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        //                                "                                                                   LB2.AMOUNT\n" +
                        //                                "                                                                  ELSE\n" +
                        //                                "                                                                   0\n" +
                        //                                "                                                                END) AS OP_CREDIT,\n" +
                        //                                "                                                            '' AS 'POP_DEBIT',\n" +
                        //                                "                                                            '' AS 'POP_CREDIT',\n" +
                        //                                "                                                            '' AS 'OP_TOTAL',\n" +
                        //                                "                                                            '' AS 'POP_TOTAL'\n" +
                        //                                "                                                       FROM MASTER_LEDGER AS ML\n" +
                        //                                "                                                      INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        //                                "                                                         ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //                                "                                                      INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                        //                                "                                                                        LB.PROJECT_ID,\n" +
                        //                                "                                                                        LB.LEDGER_ID,\n" +
                        //                                "                                                                        LB.AMOUNT,\n" +
                        //                                "                                                                        LB.TRANS_MODE\n" +
                        //                                "                                                                   FROM LEDGER_BALANCE AS LB\n" +
                        //                                "                                                                   LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                        //                                "                                                                                    LBA.LEDGER_ID,\n" +
                        //                                "                                                                                    MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //                                "                                                                               FROM LEDGER_BALANCE LBA\n" +
                        //                                "                                                                              WHERE 1 = 1\n" +
                        //                                "                                                                                AND LBA.BALANCE_DATE <=\n" +
                        //                                "                                                                                    ?DATE_AS_ON  -- Data As On\n" +
                        //                                "                                                                              GROUP BY LBA.PROJECT_ID,\n" +
                        //                                "                                                                                       LBA.LEDGER_ID) AS LB1\n" +
                        //                                "                                                                     ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        //                                "                                                                    AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //                                "                                                                  WHERE LB.PROJECT_ID IN (?PROJECT_ID) AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //                                "                                                                    AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                        //                                "                                                         ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        //                                "                                                      WHERE 1 = 1\n" +
                        //                                "                                                        AND LG.GROUP_ID IN (11)\n" +
                        //                                "                                                      GROUP BY LG.GROUP_ID\n" +
                        //                                "                                                     UNION ALL\n" +
                        //                                "                                                     SELECT ML.GROUP_ID,\n" +
                        //                                "                                                            LG.GROUP_CODE,\n" +
                        //                                "                                                            'Current Assets' AS LEDGER_GROUP,\n" +
                        //                                "                                                            ML.LEDGER_ID,\n" +
                        //                                "                                                            ML.LEDGER_CODE,\n" +
                        //                                "                                                            ML.LEDGER_NAME,\n" +
                        //                                "                                                            SUM(CASE\n" +
                        //                                "                                                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //                                "                                                                   LB2.AMOUNT\n" +
                        //                                "                                                                  ELSE\n" +
                        //                                "                                                                   0\n" +
                        //                                "                                                                END) AS OP_DEBIT,\n" +
                        //                                "                                                            SUM(CASE\n" +
                        //                                "                                                                  WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        //                                "                                                                   LB2.AMOUNT\n" +
                        //                                "                                                                  ELSE\n" +
                        //                                "                                                                   0\n" +
                        //                                "                                                                END) AS OP_CREDIT,\n" +
                        //                                "                                                            '' AS 'POP_DEBIT',\n" +
                        //                                "                                                            '' AS 'POP_CREDIT',\n" +
                        //                                "                                                            '' AS 'OP_TOTAL',\n" +
                        //                                "                                                            '' AS 'POP_TOTAL'\n" +
                        //                                "                                                       FROM MASTER_LEDGER AS ML\n" +
                        //                                "                                                      INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        //                                "                                                         ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //                                "                                                      INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                        //                                "                                                                         LB.PROJECT_ID,\n" +
                        //                                "                                                                         LB.LEDGER_ID,\n" +
                        //                                "                                                                         LB.AMOUNT,\n" +
                        //                                "                                                                         LB.TRANS_MODE\n" +
                        //                                "                                                                    FROM LEDGER_BALANCE AS LB\n" +
                        //                                "                                                                    LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                        //                                "                                                                                     LBA.LEDGER_ID,\n" +
                        //                                "                                                                                     MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //                                "                                                                                FROM LEDGER_BALANCE LBA\n" +
                        //                                "                                                                               WHERE 1 = 1\n" +
                        //                                "                                                                                 AND LBA.BALANCE_DATE <=\n" +
                        //                                "                                                                                     ?DATE_AS_ON -- Data As On\n" +
                        //                                "                                                                               GROUP BY LBA.PROJECT_ID,\n" +
                        //                                "                                                                                        LBA.LEDGER_ID) AS LB1\n" +
                        //                                "                                                                      ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        //                                "                                                                     AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //                                "                                                                   WHERE LB.PROJECT_ID IN (?PROJECT_ID) AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //                                "                                                                     AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                        //                                "                                                         ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        //                                "                                                      WHERE 1 = 1\n" +
                        //                                "                                                        AND LG.GROUP_ID IN (12, 13, 14)\n" +
                        //                                "                                                      GROUP BY LG.GROUP_ID) AS T1\n" +
                        //                                "                                              WHERE T1.OP_DEBIT > 0 || T1.OP_CREDIT > 0\n" +
                        //                                "                                              GROUP BY T1.GROUP_ID\n" +
                        //                                "                                             UNION ALL\n" +
                        //                                "                                             SELECT T2.GROUP_ID,\n" +
                        //                                "                                                    T2.LEDGER_ID,\n" +
                        //                                "                                                    T2.GROUP_CODE,\n" +
                        //                                "                                                    T2.LEDGER_GROUP,\n" +
                        //                                "                                                    T2.LEDGER_CODE,\n" +
                        //                                "                                                    T2.LEDGER_NAME,\n" +
                        //                                "                                                    0 AS 'OP_DEBIT',\n" +
                        //                                "                                                    0 AS 'OP_CREDIT',\n" +
                        //                                "                                                    CASE\n" +
                        //                                "                                                      WHEN SUM(T2.POP_DEBIT) > SUM(T2.POP_CREDIT) THEN\n" +
                        //                                "                                                       SUM(T2.POP_DEBIT) - SUM(T2.POP_CREDIT)\n" +
                        //                                "                                                      ELSE\n" +
                        //                                "                                                       0.00\n" +
                        //                                "                                                    END AS POP_DEBIT,\n" +
                        //                                "                                                    CASE\n" +
                        //                                "                                                      WHEN SUM(T2.POP_CREDIT) > SUM(T2.POP_DEBIT) THEN\n" +
                        //                                "                                                       SUM(T2.POP_CREDIT) - SUM(T2.POP_DEBIT)\n" +
                        //                                "                                                      ELSE\n" +
                        //                                "                                                       0.00\n" +
                        //                                "                                                    END AS POP_CREDIT,\n" +
                        //                                "                                                    '' AS 'OP_TOTAL',\n" +
                        //                                "                                                    ((CASE\n" +
                        //                                "                                                      WHEN SUM(T2.POP_DEBIT) > SUM(T2.POP_CREDIT) THEN\n" +
                        //                                "                                                       (SUM(T2.POP_DEBIT) - SUM(T2.POP_CREDIT))\n" +
                        //                                "                                                      ELSE\n" +
                        //                                "                                                       0.00\n" +
                        //                                "                                                    END) + CASE\n" +
                        //                                "                                                      WHEN SUM(T2.POP_CREDIT) > SUM(T2.POP_DEBIT) THEN\n" +
                        //                                "                                                       SUM(T2.POP_DEBIT) - SUM(T2.POP_CREDIT)\n" +
                        //                                "                                                      ELSE\n" +
                        //                                "                                                       0.00\n" +
                        //                                "                                                    END) AS POP_TOTAL\n" +
                        //                                "                                               FROM (SELECT ML.GROUP_ID,\n" +
                        //                                "                                                            ML.LEDGER_ID,\n" +
                        //                                "                                                            LG.GROUP_CODE,\n" +
                        //                                "                                                            'Current Assets' AS LEDGER_GROUP,\n" +
                        //                                "                                                            ML.LEDGER_CODE,\n" +
                        //                                "                                                            ML.LEDGER_NAME,\n" +
                        //                                "                                                            0 AS 'OP_DEBIT',\n" +
                        //                                "                                                            0 AS 'OP_CREDIT',\n" +
                        //                                "                                                            SUM(CASE\n" +
                        //                                "                                                                  WHEN LB.TRANS_MODE = 'DR' THEN\n" +
                        //                                "                                                                   LB.AMOUNT\n" +
                        //                                "                                                                  ELSE\n" +
                        //                                "                                                                   0\n" +
                        //                                "                                                                END) AS 'POP_DEBIT',\n" +
                        //                                "                                                            SUM(CASE\n" +
                        //                                "                                                                  WHEN LB.TRANS_MODE = 'CR' THEN\n" +
                        //                                "                                                                   LB.AMOUNT\n" +
                        //                                "                                                                  ELSE\n" +
                        //                                "                                                                   0\n" +
                        //                                "                                                                END) AS 'POP_CREDIT',\n" +
                        //                                "                                                            '' AS 'OP_TOTAL',\n" +
                        //                                "                                                            '' AS 'POP_TOTAL'\n" +
                        //                                "                                                       FROM LEDGER_BALANCE AS LB\n" +
                        //                                "                                                       LEFT JOIN MASTER_LEDGER AS ML\n" +
                        //                                "                                                         ON LB.LEDGER_ID = ML.LEDGER_ID\n" +
                        //                                "                                                       LEFT JOIN MASTER_LEDGER_GROUP LG\n" +
                        //                                "                                                         ON LG.GROUP_ID = ML.GROUP_ID\n" +
                        //                                "                                                      WHERE PROJECT_ID IN (?PROJECT_ID) AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //                                "                                                        AND TRANS_FLAG = 'OP'\n" +
                        //                                "                                                        AND LB.AMOUNT > 0\n" +
                        //                                "                                                        AND LG.GROUP_ID IN (11, 12, 13, 14)\n" +
                        //                                "                                                        AND BALANCE_DATE < ?DATE_AS_ON -- Data As On\n" +
                        //                                "                                                      GROUP BY LG.GROUP_ID\n" +
                        //                                "                                                     UNION ALL\n" +
                        //                                "                                                     SELECT ML.GROUP_ID,\n" +
                        //                                "                                                            ML.LEDGER_ID,\n" +
                        //                                "                                                            LG.GROUP_CODE,\n" +
                        //                                "                                                            'Current Assets' AS LEDGER_GROUP,\n" +
                        //                                "                                                            ML.LEDGER_CODE,\n" +
                        //                                "                                                            ML.LEDGER_NAME,\n" +
                        //                                "                                                            '' AS 'OP_DEBIT',\n" +
                        //                                "                                                            '' AS 'OP_CREDIT',\n" +
                        //                                "                                                            CASE\n" +
                        //                                "                                                              WHEN VOUCHER_TYPE IN ('RC') AND\n" +
                        //                                "                                                                   VT.TRANS_MODE = 'DR' THEN\n" +
                        //                                "                                                               IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //                                "                                                              ELSE\n" +
                        //                                "                                                               '0.0'\n" +
                        //                                "                                                            END AS 'POP_DEBIT',\n" +
                        //                                "                                                            CASE\n" +
                        //                                "                                                              WHEN VOUCHER_TYPE IN ('PY') AND\n" +
                        //                                "                                                                   VT.TRANS_MODE = 'CR' THEN\n" +
                        //                                "                                                               IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //                                "                                                              ELSE\n" +
                        //                                "                                                               '0'\n" +
                        //                                "                                                            END AS 'POP_CREDIT',\n" +
                        //                                "                                                            '' AS 'OP_TOTAL',\n" +
                        //                                "                                                            '' AS 'POP_TOTAL'\n" +
                        //                                "                                                       FROM MASTER_LEDGER_GROUP LG\n" +
                        //                                "                                                       LEFT JOIN MASTER_LEDGER ML\n" +
                        //                                "                                                         ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //                                "                                                       LEFT JOIN VOUCHER_TRANS VT\n" +
                        //                                "                                                         ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //                                "                                                       LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //                                "                                                         ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //                                "                                                         AND VT.BRANCH_ID=MT.BRANCH_ID\n" +
                        //                                "                                                      WHERE MT.PROJECT_ID IN (?PROJECT_ID) AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //                                "                                                        AND MT.STATUS = 1\n" +
                        //                                "                                                        AND LG.GROUP_ID IN (12, 13, 14)\n" +
                        //                                "                                                        AND VOUCHER_DATE < ?YEAR_FROM -- yearfrom\n" +
                        //                                "                                                      GROUP BY VT.LEDGER_ID, VT.VOUCHER_ID\n" +
                        //                                "                                                     UNION ALL\n" +
                        //                                "                                                     SELECT ML.GROUP_ID,\n" +
                        //                                "                                                            ML.LEDGER_ID,\n" +
                        //                                "                                                            LG.GROUP_CODE,\n" +
                        //                                "                                                            'Current Assets' AS LEDGER_GROUP,\n" +
                        //                                "                                                            ML.LEDGER_CODE,\n" +
                        //                                "                                                            ML.LEDGER_NAME,\n" +
                        //                                "                                                            '' AS 'OP_DEBIT',\n" +
                        //                                "                                                            '' AS 'OP_CREDIT',\n" +
                        //                                "                                                            CASE\n" +
                        //                                "                                                              WHEN VOUCHER_TYPE IN ('PY') AND\n" +
                        //                                "                                                                   VT.TRANS_MODE = 'DR' THEN\n" +
                        //                                "                                                               IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //                                "                                                              ELSE\n" +
                        //                                "                                                               '0.0'\n" +
                        //                                "                                                            END AS 'POP_DEBIT',\n" +
                        //                                "                                                            CASE\n" +
                        //                                "                                                              WHEN VOUCHER_TYPE IN ('RC') AND\n" +
                        //                                "                                                                   VT.TRANS_MODE = 'CR' THEN\n" +
                        //                                "                                                               IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //                                "                                                              ELSE\n" +
                        //                                "                                                               '0'\n" +
                        //                                "                                                            END AS 'POP_CREDIT',\n" +
                        //                                "                                                            '' AS 'OP_TOTAL',\n" +
                        //                                "                                                            '' AS 'POP_TOTAL'\n" +
                        //                                "                                                       FROM MASTER_LEDGER_GROUP LG\n" +
                        //                                "                                                       LEFT JOIN MASTER_LEDGER ML\n" +
                        //                                "                                                         ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //                                "                                                       LEFT JOIN VOUCHER_TRANS VT\n" +
                        //                                "                                                         ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //                                "                                                       LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //                                "                                                         ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //                                "                                                         AND VT.BRANCH_ID=MT.BRANCH_ID\n" +
                        //                                "                                                      WHERE MT.PROJECT_ID IN (?PROJECT_ID) AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //                                "                                                        AND MT.STATUS = 1\n" +
                        //                                "                                                        AND LG.GROUP_ID IN (11)\n" +
                        //                                "                                                        AND VOUCHER_DATE <?YEAR_FROM -- yearfrom\n" +
                        //                                "                                                      GROUP BY VT.LEDGER_ID\n" +
                        //                                "                                                     UNION ALL\n" +
                        //                                "                                                     SELECT ML.GROUP_ID,\n" +
                        //                                "                                                            ML.LEDGER_ID,\n" +
                        //                                "                                                            LG.GROUP_CODE,\n" +
                        //                                "                                                            'Current Assets' AS LEDGER_GROUP,\n" +
                        //                                "                                                            ML.LEDGER_CODE,\n" +
                        //                                "                                                            ML.LEDGER_NAME,\n" +
                        //                                "                                                            '' AS 'OP_DEBIT',\n" +
                        //                                "                                                            '' AS 'OP_CREDIT',\n" +
                        //                                "                                                            CASE\n" +
                        //                                "                                                              WHEN VOUCHER_TYPE IN ('JN') AND\n" +
                        //                                "                                                                   VT.TRANS_MODE = 'DR' THEN\n" +
                        //                                "                                                               IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //                                "                                                              ELSE\n" +
                        //                                "                                                               '0.0'\n" +
                        //                                "                                                            END AS 'POP_DEBIT',\n" +
                        //                                "                                                            CASE\n" +
                        //                                "                                                              WHEN VOUCHER_TYPE IN ('JN') AND\n" +
                        //                                "                                                                   VT.TRANS_MODE = 'CR' THEN\n" +
                        //                                "                                                               IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //                                "                                                              ELSE\n" +
                        //                                "                                                               '0.0'\n" +
                        //                                "                                                            END AS 'POP_CREDIT',\n" +
                        //                                "                                                            '' AS 'OP_TOTAL',\n" +
                        //                                "                                                            '' AS 'POP_TOTAL'\n" +
                        //                                "                                                       FROM MASTER_LEDGER_GROUP LG\n" +
                        //                                "                                                       LEFT JOIN MASTER_LEDGER ML\n" +
                        //                                "                                                         ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //                                "                                                       LEFT JOIN VOUCHER_TRANS VT\n" +
                        //                                "                                                         ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //                                "                                                       LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //                                "                                                         ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //                                "                                                      WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //                                "                                                        AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //                                "                                                        AND MT.STATUS = 1\n" +
                        //                                "                                                        AND LG.GROUP_ID IN (11)\n" +
                        //                                "                                                        AND VOUCHER_DATE < ?YEAR_FROM -- yearfrom\n" +
                        //                                "                                                        AND VOUCHER_TYPE IN ('JN')\n" +
                        //                                "                                                      GROUP BY VT.LEDGER_ID) AS T2\n" +
                        //                                "                                              WHERE (T2.POP_DEBIT > 0 || T2.POP_CREDIT > 0)\n" +
                        //                                "                                              GROUP BY T2.GROUP_ID) AS F2\n" +
                        //                                "                                      WHERE F2.OP_DEBIT > 0 || F2.OP_CREDIT > 0 || F2.POP_DEBIT >\n" +
                        //                                "                                            0 || F2.POP_CREDIT > 0\n" +
                        //                                "                                      GROUP BY F2.GROUP_ID\n" +
                        //                                "                                     UNION ALL\n" +
                        //                                "                                          SELECT F1.GROUP_ID,\n" +
                        //                                "                                               F1.LEDGER_ID,\n" +
                        //                                "                                               F1.GROUP_CODE,\n" +
                        //                                "                                               F1.LEDGER_GROUP,\n" +
                        //                                "                                               F1.LEDGER_CODE,\n" +
                        //                                "                                               F1.LEDGER_NAME AS LEDGER_NAME,\n" +
                        //                                "                                               SUM(F1.OP_TOTAL) AS OP_TOTAL,\n" +
                        //                                "                                               SUM(F1.POP_TOTAL) AS POP_TOTAL\n" +
                        //                                "                                          from (SELECT TEMP.GROUP_ID, -- Asset Transaction with Opeing Amount\n" +
                        //                                "                                                       TEMP.LEDGER_ID,\n" +
                        //                                "                                                       TEMP.GROUP_CODE,\n" +
                        //                                "                                                       TEMP.LEDGER_GROUP,\n" +
                        //                                "                                                       TEMP.LEDGER_CODE,\n" +
                        //                                "                                                       TEMP.LEDGER_NAME,\n" +
                        //                                "                                                       SUM(OP_DEBIT) AS 'OP_DEBIT',\n" +
                        //                                "                                                       SUM(OP_CREDIT) AS 'OP_CREDIT',\n" +
                        //                                "                                                       SUM(POP_DEBIT) AS 'POP_DEBIT',\n" +
                        //                                "                                                       SUM(POP_CREDIT) AS 'POP_CREDIT',\n" +
                        //                                "                                                       SUM(OP_TOTAL) AS 'OP_TOTAL',\n" +
                        //                                "                                                       SUM(POP_TOTAL) AS 'POP_TOTAL'\n" +
                        //                                "                                                  FROM (SELECT T.GROUP_ID, -- Asset Transaction with Opeing Amount\n" +
                        //                                "                                                               T.LEDGER_ID,\n" +
                        //                                "                                                               T.GROUP_CODE,\n" +
                        //                                "                                                               T.LEDGER_GROUP,\n" +
                        //                                "                                                               T.LEDGER_CODE,\n" +
                        //                                "                                                               T.LEDGER_NAME,\n" +
                        //                                "                                                               CASE\n" +
                        //                                "                                                                 WHEN SUM(T.OP_DEBIT) > SUM(T.OP_CREDIT) THEN\n" +
                        //                                "                                                                  SUM(T.OP_DEBIT) - SUM(T.OP_CREDIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END AS OP_DEBIT,\n" +
                        //                                "                                                               CASE\n" +
                        //                                "                                                                 WHEN SUM(T.OP_CREDIT) > SUM(T.OP_DEBIT) THEN\n" +
                        //                                "                                                                  SUM(T.OP_CREDIT) - SUM(T.OP_DEBIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END AS OP_CREDIT,\n" +
                        //                                "                                                               0 AS 'POP_DEBIT',\n" +
                        //                                "                                                               0 AS 'POP_CREDIT',\n" +
                        //                                "                                                               ((CASE\n" +
                        //                                "                                                                 WHEN SUM(T.OP_DEBIT) > SUM(T.OP_CREDIT) THEN\n" +
                        //                                "                                                                  SUM(T.OP_DEBIT) - SUM(T.OP_CREDIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END) + (CASE\n" +
                        //                                "                                                                 WHEN SUM(T.OP_CREDIT) > SUM(T.OP_DEBIT) THEN\n" +
                        //                                "                                                                  SUM(T.OP_DEBIT) - SUM(T.OP_CREDIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END)) AS OP_TOTAL,\n" +
                        //                                "                                                               0 AS 'POP_TOTAL'\n" +
                        //                                "                                                          FROM (SELECT LG.GROUP_ID,\n" +
                        //                                "                                                                       LG.GROUP_CODE,\n" +
                        //                                "                                                                       LG.LEDGER_GROUP,\n" +
                        //                                "                                                                       ML.LEDGER_ID,\n" +
                        //                                "                                                                       ML.LEDGER_CODE,\n" +
                        //                                "                                                                       ML.LEDGER_NAME,\n" +
                        //                                "                                                                       SUM(CASE\n" +
                        //                                "                                                                             WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //                                "                                                                              LB2.AMOUNT\n" +
                        //                                "                                                                             ELSE\n" +
                        //                                "                                                                              0\n" +
                        //                                "                                                                           END) AS OP_DEBIT,\n" +
                        //                                "                                                                       SUM(CASE\n" +
                        //                                "                                                                             WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        //                                "                                                                              LB2.AMOUNT\n" +
                        //                                "                                                                             ELSE\n" +
                        //                                "                                                                              0\n" +
                        //                                "                                                                           END) AS OP_CREDIT,\n" +
                        //                                "                                                                       0 AS 'POP_DEBIT',\n" +
                        //                                "                                                                       0 AS 'POP_CREDIT',\n" +
                        //                                "                                                                       0 AS 'OP_TOTAL',\n" +
                        //                                "                                                                       0 AS 'POP_TOTAL'\n" +
                        //                                "                                                                  FROM MASTER_LEDGER AS ML\n" +
                        //                                "                                                                 INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        //                                "                                                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //                                "                                                                 INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                        //                                "                                                                                   LB.PROJECT_ID,\n" +
                        //                                "                                                                                   LB.LEDGER_ID,\n" +
                        //                                "                                                                                   LB.AMOUNT,\n" +
                        //                                "                                                                                   LB.TRANS_MODE\n" +
                        //                                "                                                                              FROM LEDGER_BALANCE AS LB\n" +
                        //                                "                                                                              LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                        //                                "                                                                                               LBA.LEDGER_ID,\n" +
                        //                                "                                                                                               MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //                                "                                                                                          FROM LEDGER_BALANCE LBA\n" +
                        //                                "                                                                                         WHERE 1 = 1\n" +
                        //                                "                                                                                           AND LBA.BALANCE_DATE <=\n" +
                        //                                "                                                                                               ?DATE_AS_ON -- Data As On\n" +
                        //                                "                                                                                         GROUP BY LBA.PROJECT_ID,\n" +
                        //                                "                                                                                                  LBA.LEDGER_ID) AS LB1\n" +
                        //                                "                                                                                ON LB.PROJECT_ID =\n" +
                        //                                "                                                                                   LB1.PROJECT_ID\n" +
                        //                                "                                                                               AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //                                "                                                                             WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //                                "                                                                               AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //                                "                                                                               AND LB.BALANCE_DATE =\n" +
                        //                                "                                                                                   LB1.BAL_DATE) LB2\n" +
                        //                                "                                                                    ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        //                                "                                                                 WHERE 1 = 1\n" +
                        //                                "                                                                   AND LG.GROUP_ID NOT IN (11,\n" +
                        //                                "                                                                                           12,\n" +
                        //                                "                                                                                           13,\n" +
                        //                                "                                                                                           14,\n" +
                        //                                "                                                                                           15,\n" +
                        //                                "                                                                                           18,\n" +
                        //                                "                                                                                           21,\n" +
                        //                                "                                                                                           22,\n" +
                        //                                "                                                                                           153,\n" +
                        //                                "                                                                                           154)\n" +
                        //                                "                                                                   AND LG.NATURE_ID IN (3)\n" +
                        //                                "                                                                 GROUP BY LG.GROUP_ID) AS T\n" +
                        //                                "                                                         WHERE T.OP_DEBIT > 0 || T.OP_CREDIT > 0\n" +
                        //                                "                                                         GROUP BY T.GROUP_ID\n" +
                        //                                "                                                        UNION ALL -- liability Transaction with Opening Bal Amount\n" +
                        //                                "                                                        SELECT T.GROUP_ID,\n" +
                        //                                "                                                               T.LEDGER_ID,\n" +
                        //                                "                                                               T.GROUP_CODE,\n" +
                        //                                "                                                               T.LEDGER_GROUP,\n" +
                        //                                "                                                               T.LEDGER_CODE,\n" +
                        //                                "                                                               T.LEDGER_NAME,\n" +
                        //                                "                                                               CASE\n" +
                        //                                "                                                                 WHEN SUM(T.OP_DEBIT) > SUM(T.OP_CREDIT) THEN\n" +
                        //                                "                                                                  SUM(T.OP_DEBIT) - SUM(T.OP_CREDIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END AS OP_DEBIT,\n" +
                        //                                "                                                               CASE\n" +
                        //                                "                                                                 WHEN SUM(T.OP_CREDIT) > SUM(T.OP_DEBIT) THEN\n" +
                        //                                "                                                                  SUM(T.OP_CREDIT) - SUM(T.OP_DEBIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END AS OP_CREDIT,\n" +
                        //                                "                                                               0 AS 'POP_DEBIT',\n" +
                        //                                "                                                               0 AS 'POP_CREDIT',\n" +
                        //                                "                                                               ((CASE\n" +
                        //                                "                                                                 WHEN SUM(T.OP_DEBIT) > SUM(T.OP_CREDIT) THEN\n" +
                        //                                "                                                                  SUM(T.OP_CREDIT) - SUM(T.OP_DEBIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END) + (CASE\n" +
                        //                                "                                                                 WHEN SUM(T.OP_CREDIT) > SUM(T.OP_DEBIT) THEN\n" +
                        //                                "                                                                  SUM(T.OP_CREDIT) - SUM(T.OP_DEBIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END)) AS OP_TOTAL,\n" +
                        //                                "                                                               0 AS 'POP_TOTAL'\n" +
                        //                                "                                                          FROM (SELECT LG.GROUP_ID,\n" +
                        //                                "                                                                       LG.GROUP_CODE,\n" +
                        //                                "                                                                       LG.LEDGER_GROUP,\n" +
                        //                                "                                                                       ML.LEDGER_ID,\n" +
                        //                                "                                                                       ML.LEDGER_CODE,\n" +
                        //                                "                                                                       ML.LEDGER_NAME,\n" +
                        //                                "                                                                       SUM(CASE\n" +
                        //                                "                                                                             WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //                                "                                                                              LB2.AMOUNT\n" +
                        //                                "                                                                             ELSE\n" +
                        //                                "                                                                              0\n" +
                        //                                "                                                                           END) AS OP_DEBIT,\n" +
                        //                                "                                                                       SUM(CASE\n" +
                        //                                "                                                                             WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        //                                "                                                                              LB2.AMOUNT\n" +
                        //                                "                                                                             ELSE\n" +
                        //                                "                                                                              0\n" +
                        //                                "                                                                           END) AS OP_CREDIT,\n" +
                        //                                "                                                                       0 AS 'POP_DEBIT',\n" +
                        //                                "                                                                       0 AS 'POP_CREDIT',\n" +
                        //                                "                                                                       0 AS 'OP_TOTAL',\n" +
                        //                                "                                                                       0 AS 'POP_TOTAL'\n" +
                        //                                "                                                                  FROM MASTER_LEDGER AS ML\n" +
                        //                                "                                                                 INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        //                                "                                                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //                                "                                                                 INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                        //                                "                                                                                   LB.PROJECT_ID,\n" +
                        //                                "                                                                                   LB.LEDGER_ID,\n" +
                        //                                "                                                                                   LB.AMOUNT,\n" +
                        //                                "                                                                                   LB.TRANS_MODE\n" +
                        //                                "                                                                              FROM LEDGER_BALANCE AS LB\n" +
                        //                                "                                                                              LEFT JOIN (SELECT LBA.PROJECT_ID,\n" +
                        //                                "                                                                                               LBA.LEDGER_ID,\n" +
                        //                                "                                                                                               MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //                                "                                                                                          FROM LEDGER_BALANCE LBA\n" +
                        //                                "                                                                                         WHERE 1 = 1\n" +
                        //                                "                                                                                           AND LBA.BALANCE_DATE <=\n" +
                        //                                "                                                                                               ?DATE_AS_ON -- Data As On\n" +
                        //                                "                                                                                         GROUP BY LBA.PROJECT_ID,\n" +
                        //                                "                                                                                                  LBA.LEDGER_ID) AS LB1\n" +
                        //                                "                                                                                ON LB.PROJECT_ID =\n" +
                        //                                "                                                                                   LB1.PROJECT_ID\n" +
                        //                                "                                                                               AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //                                "                                                                             WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //                                "                                                                             AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //                                "                                                                               AND LB.BALANCE_DATE =\n" +
                        //                                "                                                                                   LB1.BAL_DATE) LB2\n" +
                        //                                "                                                                    ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        //                                "                                                                 WHERE 1 = 1\n" +
                        //                                "                                                                   AND LG.GROUP_ID NOT IN (11,\n" +
                        //                                "                                                                                           12,\n" +
                        //                                "                                                                                           13,\n" +
                        //                                "                                                                                           14,\n" +
                        //                                "                                                                                           15,\n" +
                        //                                "                                                                                           18,\n" +
                        //                                "                                                                                           21,\n" +
                        //                                "                                                                                           22,\n" +
                        //                                "                                                                                           153,\n" +
                        //                                "                                                                                           154)\n" +
                        //                                "                                                                   AND LG.NATURE_ID IN (4)\n" +
                        //                                "                                                                 GROUP BY LG.GROUP_ID) AS T\n" +
                        //                                "                                                         WHERE T.OP_DEBIT > 0 || T.OP_CREDIT > 0\n" +
                        //                                "                                                         GROUP BY T.GROUP_ID) AS TEMP\n" +
                        //                                "                                                 GROUP BY TEMP.GROUP_ID\n" +
                        //                                "                                                UNION ALL\n" +
                        //                                "                                                SELECT TEMP1.GROUP_ID, -- Asset Transaction with Opeing Amount\n" +
                        //                                "                                                       TEMP1.LEDGER_ID,\n" +
                        //                                "                                                       TEMP1.GROUP_CODE,\n" +
                        //                                "                                                       TEMP1.LEDGER_GROUP,\n" +
                        //                                "                                                       TEMP1.LEDGER_CODE,\n" +
                        //                                "                                                       TEMP1.LEDGER_NAME,\n" +
                        //                                "                                                       SUM(OP_DEBIT) AS 'OP_DEBIT',\n" +
                        //                                "                                                       SUM(OP_CREDIT) AS 'OP_CREDIT',\n" +
                        //                                "                                                       SUM(POP_DEBIT) AS 'POP_DEBIT',\n" +
                        //                                "                                                       SUM(POP_CREDIT) AS 'POP_CREDIT',\n" +
                        //                                "                                                       SUM(OP_TOTAL) AS 'OP_TOTAL',\n" +
                        //                                "                                                       SUM(POP_TOTAL) AS 'POP_TOTAL'\n" +
                        //                                "                                                  FROM (SELECT T1.GROUP_ID,\n" +
                        //                                "                                                               T1.LEDGER_ID,\n" +
                        //                                "                                                               T1.GROUP_CODE,\n" +
                        //                                "                                                               T1.LEDGER_GROUP,\n" +
                        //                                "                                                               T1.LEDGER_CODE,\n" +
                        //                                "                                                               T1.LEDGER_NAME,\n" +
                        //                                "                                                               0 AS 'OP_DEBIT',\n" +
                        //                                "                                                               0 AS 'OP_CREDIT',\n" +
                        //                                "                                                               CASE\n" +
                        //                                "                                                                 WHEN SUM(T1.POP_DEBIT) > SUM(T1.POP_CREDIT) THEN\n" +
                        //                                "                                                                  SUM(T1.POP_DEBIT) - SUM(T1.POP_CREDIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END AS POP_DEBIT,\n" +
                        //                                "                                                               CASE\n" +
                        //                                "                                                                 WHEN SUM(T1.POP_CREDIT) > SUM(T1.POP_DEBIT) THEN\n" +
                        //                                "                                                                  SUM(T1.POP_CREDIT) - SUM(T1.POP_DEBIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END AS POP_CREDIT,\n" +
                        //                                "                                                               0 AS 'OP_TOTAL',\n" +
                        //                                "                                                               ((CASE\n" +
                        //                                "                                                                 WHEN SUM(T1.POP_DEBIT) > SUM(T1.POP_CREDIT) THEN\n" +
                        //                                "                                                                  SUM(T1.POP_DEBIT) - SUM(T1.POP_CREDIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END) + (CASE\n" +
                        //                                "                                                                 WHEN SUM(T1.POP_CREDIT) > SUM(T1.POP_DEBIT) THEN\n" +
                        //                                "                                                                  SUM(T1.POP_DEBIT) - SUM(T1.POP_CREDIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END)) AS POP_TOTAL\n" +
                        //                                "                                                          FROM (SELECT LG.GROUP_ID,\n" +
                        //                                "                                                                       ML.LEDGER_ID,\n" +
                        //                                "                                                                       LG.GROUP_CODE,\n" +
                        //                                "                                                                       LG.LEDGER_GROUP,\n" +
                        //                                "                                                                       ML.LEDGER_CODE,\n" +
                        //                                "                                                                       ML.LEDGER_NAME,\n" +
                        //                                "                                                                       0 AS 'OP_DEBIT',\n" +
                        //                                "                                                                       0 AS 'OP_CREDIT',\n" +
                        //                                "                                                                       SUM(CASE\n" +
                        //                                "                                                                             WHEN LB.TRANS_MODE = 'DR' THEN\n" +
                        //                                "                                                                              LB.AMOUNT\n" +
                        //                                "                                                                             ELSE\n" +
                        //                                "                                                                              0\n" +
                        //                                "                                                                           END) AS 'POP_DEBIT',\n" +
                        //                                "                                                                       SUM(CASE\n" +
                        //                                "                                                                             WHEN LB.TRANS_MODE = 'CR' THEN\n" +
                        //                                "                                                                              LB.AMOUNT\n" +
                        //                                "                                                                             ELSE\n" +
                        //                                "                                                                              0\n" +
                        //                                "                                                                           END) AS 'POP_CREDIT',\n" +
                        //                                "                                                                       '' AS 'OP_TOTAL',\n" +
                        //                                "                                                                       '' AS 'POP_TOTAL'\n" +
                        //                                "                                                                  FROM LEDGER_BALANCE AS LB\n" +
                        //                                "                                                                  LEFT JOIN MASTER_LEDGER AS ML\n" +
                        //                                "                                                                    ON LB.LEDGER_ID = ML.LEDGER_ID\n" +
                        //                                "                                                                  LEFT JOIN MASTER_LEDGER_GROUP LG\n" +
                        //                                "                                                                    ON LG.GROUP_ID = ML.GROUP_ID\n" +
                        //                                "                                                                 WHERE PROJECT_ID IN (?PROJECT_ID)\n" +
                        //                                "                                                                 AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //                                "                                                                   AND TRANS_FLAG = 'OP'\n" +
                        //                                "                                                                   AND LB.AMOUNT > 0\n" +
                        //                                "                                                                   AND LG.GROUP_ID NOT IN (12, 14, 13)\n" +
                        //                                "                                                                   AND LG.NATURE_ID IN (3)\n" +
                        //                                "                                                                   AND LG.GROUP_ID NOT IN\n" +
                        //                                "                                                                       (11, 12, 13, 14, 18, 21, 22, 153, 154)\n" +
                        //                                "                                                                   AND BALANCE_DATE < ?DATE_AS_ON -- Data As On\n" +
                        //                                "                                                                 GROUP BY LG.GROUP_ID\n" +
                        //                                "                                                                UNION ALL\n" +
                        //                                "                                                                SELECT LG.GROUP_ID,\n" +
                        //                                "                                                                       ML.LEDGER_ID,\n" +
                        //                                "                                                                       LG.GROUP_CODE,\n" +
                        //                                "                                                                       LG.LEDGER_GROUP,\n" +
                        //                                "                                                                       ML.LEDGER_CODE,\n" +
                        //                                "                                                                       ML.LEDGER_NAME,\n" +
                        //                                "                                                                       0 AS 'OP_DEBIT',\n" +
                        //                                "                                                                       0 AS 'OP_CREDIT',\n" +
                        //                                "                                                                       CASE\n" +
                        //                                "                                                                         WHEN VOUCHER_TYPE IN ('PY') AND\n" +
                        //                                "                                                                              VT.TRANS_MODE = 'DR' THEN\n" +
                        //                                "                                                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //                                "                                                                         ELSE\n" +
                        //                                "                                                                          '0.0'\n" +
                        //                                "                                                                       END AS 'POP_DEBIT',\n" +
                        //                                "                                                                       CASE\n" +
                        //                                "                                                                         WHEN VOUCHER_TYPE IN ('RC') AND\n" +
                        //                                "                                                                              VT.TRANS_MODE = 'CR' THEN\n" +
                        //                                "                                                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //                                "                                                                         ELSE\n" +
                        //                                "                                                                          '0'\n" +
                        //                                "                                                                       END AS 'POP_CREDIT',\n" +
                        //                                "                                                                       '' AS 'OP_TOTAL',\n" +
                        //                                "                                                                       '' AS 'POP_TOTAL'\n" +
                        //                                "                                                                  FROM MASTER_LEDGER_GROUP LG\n" +
                        //                                "                                                                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //                                "                                                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //                                "                                                                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        //                                "                                                                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //                                "                                                                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //                                "                                                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //                                "                                                                    AND VT.BRANCH_ID=MT.BRANCH_ID\n" +
                        //                                "                                                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //                                "                                                                 AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //                                "                                                                   AND MT.STATUS = 1\n" +
                        //                                "                                                                   AND LG.NATURE_ID IN (3)\n" +
                        //                                "                                                                   AND VOUCHER_DATE < ?YEAR_FROM -- yearfrom\n" +
                        //                                "                                                                   AND LG.GROUP_ID NOT IN\n" +
                        //                                "                                                                       (11, 12, 13, 14, 18, 21, 22, 153, 154)\n" +
                        //                                "                                                                 GROUP BY VT.LEDGER_ID, VT.VOUCHER_ID\n" +
                        //                                "                                                                UNION ALL\n" +
                        //                                "                                                                SELECT LG.GROUP_ID,\n" +
                        //                                "                                                                       ML.LEDGER_ID,\n" +
                        //                                "                                                                       LG.GROUP_CODE,\n" +
                        //                                "                                                                       LG.LEDGER_GROUP,\n" +
                        //                                "                                                                       ML.LEDGER_CODE,\n" +
                        //                                "                                                                       ML.LEDGER_NAME,\n" +
                        //                                "                                                                       0 AS 'OP_DEBIT',\n" +
                        //                                "                                                                       0 AS 'OP_CREDIT',\n" +
                        //                                "                                                                       CASE\n" +
                        //                                "                                                                         WHEN VOUCHER_TYPE IN ('JN') AND\n" +
                        //                                "                                                                              VT.TRANS_MODE = 'DR' THEN\n" +
                        //                                "                                                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //                                "                                                                         ELSE\n" +
                        //                                "                                                                          '0.0'\n" +
                        //                                "                                                                       END AS 'POP_DEBIT',\n" +
                        //                                "                                                                       CASE\n" +
                        //                                "                                                                         WHEN VOUCHER_TYPE IN ('JN') AND\n" +
                        //                                "                                                                              VT.TRANS_MODE = 'CR' THEN\n" +
                        //                                "                                                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //                                "                                                                         ELSE\n" +
                        //                                "                                                                          '0.0'\n" +
                        //                                "                                                                       END AS 'POP_CREDIT',\n" +
                        //                                "                                                                       '' AS 'OP_TOTAL',\n" +
                        //                                "                                                                       '' AS 'POP_TOTAL'\n" +
                        //                                "                                                                  FROM MASTER_LEDGER_GROUP LG\n" +
                        //                                "                                                                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //                                "                                                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //                                "                                                                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        //                                "                                                                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //                                "                                                                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //                                "                                                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //                                "                                                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //                                "                                                                   AND MT.STATUS = 1\n" +
                        //                                "                                                                   AND LG.NATURE_ID IN (3)\n" +
                        //                                "                                                                   AND VOUCHER_DATE < ?YEAR_FROM -- yearfrom\n" +
                        //                                "                                                                   AND VOUCHER_TYPE in ('JN')\n" +
                        //                                "                                                                   AND LG.GROUP_ID NOT IN\n" +
                        //                                "                                                                       (11, 12, 13, 14, 18, 21, 22, 153, 154)\n" +
                        //                                "                                                                 GROUP BY VT.LEDGER_ID, VT.VOUCHER_ID) AS T1\n" +
                        //                                "                                                         WHERE (T1.POP_DEBIT > 0 || T1.POP_CREDIT > 0)\n" +
                        //                                "                                                         GROUP BY T1.GROUP_ID\n" +
                        //                                "                                                        UNION ALL\n" +
                        //                                "                                                        SELECT T1.GROUP_ID,\n" +
                        //                                "                                                               T1.LEDGER_ID,\n" +
                        //                                "                                                               T1.GROUP_CODE,\n" +
                        //                                "                                                               T1.LEDGER_GROUP,\n" +
                        //                                "                                                               T1.LEDGER_CODE,\n" +
                        //                                "                                                               T1.LEDGER_NAME,\n" +
                        //                                "                                                               0 AS 'OP_DEBIT',\n" +
                        //                                "                                                               0 AS 'OP_CREDIT',\n" +
                        //                                "                                                               CASE\n" +
                        //                                "                                                                 WHEN SUM(T1.POP_DEBIT) > SUM(T1.POP_CREDIT) THEN\n" +
                        //                                "                                                                  SUM(T1.POP_DEBIT) - SUM(T1.POP_CREDIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END AS POP_DEBIT,\n" +
                        //                                "                                                               CASE\n" +
                        //                                "                                                                 WHEN SUM(T1.POP_CREDIT) > SUM(T1.POP_DEBIT) THEN\n" +
                        //                                "                                                                  SUM(T1.POP_CREDIT) - SUM(T1.POP_DEBIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END AS POP_CREDIT,\n" +
                        //                                "                                                               0 AS 'OP_TOTAL',\n" +
                        //                                "                                                               ((CASE\n" +
                        //                                "                                                                 WHEN SUM(T1.POP_DEBIT) > SUM(T1.POP_CREDIT) THEN\n" +
                        //                                "                                                                  SUM(T1.POP_CREDIT) - SUM(T1.POP_DEBIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END) + (CASE\n" +
                        //                                "                                                                 WHEN SUM(T1.POP_CREDIT) > SUM(T1.POP_DEBIT) THEN\n" +
                        //                                "                                                                  SUM(T1.POP_CREDIT) - SUM(T1.POP_DEBIT)\n" +
                        //                                "                                                                 ELSE\n" +
                        //                                "                                                                  0.00\n" +
                        //                                "                                                               END)) AS POP_TOTAL\n" +
                        //                                "                                                          FROM (SELECT LG.GROUP_ID,\n" +
                        //                                "                                                                       ML.LEDGER_ID,\n" +
                        //                                "                                                                       LG.GROUP_CODE,\n" +
                        //                                "                                                                       LG.LEDGER_GROUP,\n" +
                        //                                "                                                                       ML.LEDGER_CODE,\n" +
                        //                                "                                                                       ML.LEDGER_NAME,\n" +
                        //                                "                                                                       0 AS 'OP_DEBIT',\n" +
                        //                                "                                                                       0 AS 'OP_CREDIT',\n" +
                        //                                "                                                                       SUM(CASE\n" +
                        //                                "                                                                             WHEN LB.TRANS_MODE = 'DR' THEN\n" +
                        //                                "                                                                              LB.AMOUNT\n" +
                        //                                "                                                                             ELSE\n" +
                        //                                "                                                                              0\n" +
                        //                                "                                                                           END) AS 'POP_DEBIT',\n" +
                        //                                "                                                                       SUM(CASE\n" +
                        //                                "                                                                             WHEN LB.TRANS_MODE = 'CR' THEN\n" +
                        //                                "                                                                              LB.AMOUNT\n" +
                        //                                "                                                                             ELSE\n" +
                        //                                "                                                                              0\n" +
                        //                                "                                                                           END) AS 'POP_CREDIT',\n" +
                        //                                "                                                                       '' AS 'OP_TOTAL',\n" +
                        //                                "                                                                       '' AS 'POP_TOTAL'\n" +
                        //                                "                                                                  FROM LEDGER_BALANCE AS LB\n" +
                        //                                "                                                                  LEFT JOIN MASTER_LEDGER AS ML\n" +
                        //                                "                                                                    ON LB.LEDGER_ID = ML.LEDGER_ID\n" +
                        //                                "                                                                  LEFT JOIN MASTER_LEDGER_GROUP LG\n" +
                        //                                "                                                                    ON LG.GROUP_ID = ML.GROUP_ID\n" +
                        //                                "                                                                 WHERE PROJECT_ID IN (?PROJECT_ID)\n" +
                        //                                "                                                                   AND TRANS_FLAG = 'OP'\n" +
                        //                                "                                                                   AND LB.AMOUNT > 0\n" +
                        //                                "                                                                   AND LG.GROUP_ID NOT IN (12, 14, 13)\n" +
                        //                                "                                                                   AND LG.NATURE_ID IN (4)\n" +
                        //                                "                                                                   AND LG.GROUP_ID NOT IN\n" +
                        //                                "                                                                       (11, 12, 13, 14, 18, 21, 22, 153, 154)\n" +
                        //                                "                                                                   AND BALANCE_DATE < ?DATE_AS_ON -- Data As On\n" +
                        //                                "                                                                 GROUP BY LG.GROUP_ID\n" +
                        //                                "                                                                UNION ALL\n" +
                        //                                "                                                                SELECT LG.GROUP_ID,\n" +
                        //                                "                                                                       ML.LEDGER_ID,\n" +
                        //                                "                                                                       LG.GROUP_CODE,\n" +
                        //                                "                                                                       LG.LEDGER_GROUP,\n" +
                        //                                "                                                                       ML.LEDGER_CODE,\n" +
                        //                                "                                                                       ML.LEDGER_NAME,\n" +
                        //                                "                                                                       0 AS 'OP_DEBIT',\n" +
                        //                                "                                                                       0 AS 'OP_CREDIT',\n" +
                        //                                "                                                                       CASE\n" +
                        //                                "                                                                         WHEN VOUCHER_TYPE IN ('PY') AND\n" +
                        //                                "                                                                              VT.TRANS_MODE = 'DR' THEN\n" +
                        //                                "                                                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //                                "                                                                         ELSE\n" +
                        //                                "                                                                          '0.0'\n" +
                        //                                "                                                                       END AS 'POP_DEBIT',\n" +
                        //                                "                                                                       CASE\n" +
                        //                                "                                                                         WHEN VOUCHER_TYPE IN ('RC') AND\n" +
                        //                                "                                                                              VT.TRANS_MODE = 'CR' THEN\n" +
                        //                                "                                                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //                                "                                                                         ELSE\n" +
                        //                                "                                                                          '0'\n" +
                        //                                "                                                                       END AS 'POP_CREDIT',\n" +
                        //                                "                                                                       '' AS 'OP_TOTAL',\n" +
                        //                                "                                                                       '' AS 'POP_TOTAL'\n" +
                        //                                "                                                                  FROM MASTER_LEDGER_GROUP LG\n" +
                        //                                "                                                                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //                                "                                                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //                                "                                                                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        //                                "                                                                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //                                "                                                                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //                                "                                                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //                                "                                                                    AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //                                "                                                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //                                "                                                                   AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //                                "                                                                   AND MT.STATUS = 1\n" +
                        //                                "                                                                   AND LG.NATURE_ID IN (4)\n" +
                        //                                "                                                                   AND VOUCHER_DATE < ?YEAR_FROM -- yearfrom\n" +
                        //                                "                                                                   AND LG.GROUP_ID NOT IN\n" +
                        //                                "                                                                       (11, 12, 13, 14, 18, 21, 22, 153, 154)\n" +
                        //                                "                                                                 GROUP BY VT.LEDGER_ID, VT.VOUCHER_ID\n" +
                        //                                "                                                                UNION ALL\n" +
                        //                                "                                                                SELECT LG.GROUP_ID,\n" +
                        //                                "                                                                       ML.LEDGER_ID,\n" +
                        //                                "                                                                       LG.GROUP_CODE,\n" +
                        //                                "                                                                       LG.LEDGER_GROUP,\n" +
                        //                                "                                                                       ML.LEDGER_CODE,\n" +
                        //                                "                                                                       ML.LEDGER_NAME,\n" +
                        //                                "                                                                       0 AS 'OP_DEBIT',\n" +
                        //                                "                                                                       0 AS 'OP_CREDIT',\n" +
                        //                                "                                                                       CASE\n" +
                        //                                "                                                                         WHEN VOUCHER_TYPE IN ('JN') AND\n" +
                        //                                "                                                                              VT.TRANS_MODE = 'DR' THEN\n" +
                        //                                "                                                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //                                "                                                                         ELSE\n" +
                        //                                "                                                                          '0.0'\n" +
                        //                                "                                                                       END AS 'POP_DEBIT',\n" +
                        //                                "                                                                       CASE\n" +
                        //                                "                                                                         WHEN VOUCHER_TYPE IN ('JN') AND\n" +
                        //                                "                                                                              VT.TRANS_MODE = 'CR' THEN\n" +
                        //                                "                                                                          IFNULL(SUM(VT.AMOUNT), 0.0)\n" +
                        //                                "                                                                         ELSE\n" +
                        //                                "                                                                          '0.0'\n" +
                        //                                "                                                                       END AS 'POP_CREDIT',\n" +
                        //                                "                                                                       '' AS 'OP_TOTAL',\n" +
                        //                                "                                                                       '' AS 'POP_TOTAL'\n" +
                        //                                "                                                                  FROM MASTER_LEDGER_GROUP LG\n" +
                        //                                "                                                                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //                                "                                                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //                                "                                                                  LEFT JOIN VOUCHER_TRANS VT\n" +
                        //                                "                                                                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //                                "                                                                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //                                "                                                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //                                "                                                                    AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //                                "                                                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //                                "                                                                   AND MT.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //                                "                                                                   AND MT.STATUS = 1\n" +
                        //                                "                                                                   AND LG.NATURE_ID IN (4)\n" +
                        //                                "                                                                   AND VOUCHER_DATE < ?YEAR_FROM -- yearfrom\n" +
                        //                                "                                                                   AND VOUCHER_TYPE in ('JN')\n" +
                        //                                "                                                                   AND LG.GROUP_ID NOT IN\n" +
                        //                                "                                                                       (11, 12, 13, 14, 18, 21, 22, 153, 154)\n" +
                        //                                "                                                                 GROUP BY VT.LEDGER_ID, VT.VOUCHER_ID) AS T1\n" +
                        //                                "                                                         WHERE (T1.POP_DEBIT > 0 || T1.POP_CREDIT > 0)\n" +
                        //                                "                                                         GROUP BY T1.GROUP_ID\n" +
                        //                                "                                                        ) AS TEMP1\n" +
                        //                                "                                                 GROUP BY TEMP1.GROUP_ID) AS F1\n" +
                        //                                "                                         GROUP BY F1.GROUP_ID) AS F\n" +
                        //                                "                              GROUP BY F.GROUP_ID";
                        #endregion

                        break;
                    }

                #endregion

                #region Income
                case ReportSQLCommand.FinalAccounts.Income:
                    {
                        //04/11/2019 IF(?BEGIN_FROM = ?DATE_FROM, IFNULL(LB.AMOUNT, 0), 0)
                        //LEFT JOIN LEDGER_BALANCE LB ON LB.LEDGER_ID = ML.LEDGER_ID AND LB.PROJECT_ID = MT.PROJECT_ID AND LB.TRANS_FLAG = 'OP'
                        //AND LB.TRANS_MODE = 'CR' AND LB.PROJECT_ID IN (?PROJECT_ID) AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)
                        query = @" SELECT T.LEDGER_ID,
                                               T.GROUP_ID,
                                               T.GROUP_CODE,
                                               T.PARENT_GROUP,
                                               T.PARENT_GROUP_ID,
                                               T.LEDGER_GROUP,
                                               T.LEDGER_CODE,
                                               T.LEDGER_NAME,
                                               T.RECEIPTAMT,T.SORT_ORDER
                                          FROM (SELECT ML.LEDGER_ID,
                                                       ML.GROUP_ID,
                                                       LG.GROUP_CODE,
                                                        CASE
                                WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN
                                LG.LEDGER_GROUP
                                ELSE
                                PG.LEDGER_GROUP
                                END AS PARENT_GROUP,
                                       IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,
                                       CASE
                                         WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN
                                          CONCAT(LG.LEDGER_GROUP)
                                         ELSE
                                       CONCAT('   ',LG.LEDGER_GROUP)
                                       END,LG.LEDGER_GROUP) AS LEDGER_GROUP,

                                      IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,
                                          CASE
                                            WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN
                                             CONCAT('   ', ML.LEDGER_NAME)
                                            ELSE
                                             CONCAT('      ', ML.LEDGER_NAME)
                                         END,
                                         ML.LEDGER_NAME) AS LEDGER_NAME,
                                                       ML.LEDGER_CODE,LG.SORT_ORDER,
                                                       (IFNULL(CASE
                                                         WHEN SUM(CASE
                                                                    WHEN MT.TRANS_MODE = 'DR' THEN
                                                                     MT.AMOUNT
                                                                    ELSE
                                                                     -MT.AMOUNT
                                                                  END) < 0 THEN
                                                          ABS(SUM(CASE
                                                                    WHEN MT.TRANS_MODE = 'DR' THEN
                                                                     MT.AMOUNT
                                                                    ELSE
                                                                     -MT.AMOUNT
                                                                  END))
                                                       END,0))  AS RECEIPTAMT

                                                  FROM MASTER_LEDGER_GROUP LG
                                                    INNER JOIN MASTER_LEDGER_GROUP PG
                                                     ON LG.PARENT_GROUP_ID=PG.GROUP_ID
                                                  LEFT JOIN MASTER_LEDGER ML
                                                    ON ML.GROUP_ID = LG.GROUP_ID
                                                  LEFT JOIN (SELECT VM.PROJECT_ID, VT.VOUCHER_ID, VT.LEDGER_ID, VT.AMOUNT, VT.TRANS_MODE
                                                        FROM VOUCHER_MASTER_TRANS VM
                                                        INNER JOIN VOUCHER_TRANS VT ON VT.VOUCHER_ID = VM.VOUCHER_ID AND VT.BRANCH_ID =VM.BRANCH_ID
                                                        WHERE VM.PROJECT_ID IN (?PROJECT_ID) AND VM.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND VM.STATUS = 1
                                                        AND VM.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO) AS MT
                                                    ON MT.LEDGER_ID = ML.LEDGER_ID
                                                  WHERE LG.GROUP_ID NOT IN (12, 13) AND LG.NATURE_ID NOT IN(3,4)
                                                  GROUP BY ML.LEDGER_ID) AS T
                                         WHERE T.RECEIPTAMT > 0  ORDER BY SORT_ORDER";

                        //query = "SELECT T.LEDGER_ID,\n" +
                        //        "       T.GROUP_ID,\n" +
                        //        "       T.GROUP_CODE,\n" +
                        //        "       T.PARENT_GROUP,\n" +
                        //        "       T.LEDGER_GROUP,\n" +
                        //        "       T.LEDGER_CODE,\n" +
                        //        "       T.LEDGER_NAME,\n" +
                        //        "       T.RECEIPTAMT,\n" +
                        //        "       T.SORT_ORDER\n" +
                        //        "  FROM (SELECT ML.LEDGER_ID,\n" +
                        //        "               ML.GROUP_ID,\n" +
                        //        "               LG.GROUP_CODE,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                        //        "                  LG.LEDGER_GROUP\n" +
                        //        "                 ELSE\n" +
                        //        "                  PG.LEDGER_GROUP\n" +
                        //        "               END AS PARENT_GROUP,\n" +
                        //        "               IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,\n" +
                        //        "                  CASE\n" +
                        //        "                    WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                        //        "                     CONCAT(LG.LEDGER_GROUP)\n" +
                        //        "                    ELSE\n" +
                        //        "                     CONCAT('   ', LG.LEDGER_GROUP)\n" +
                        //        "                  END,\n" +
                        //        "                  LG.LEDGER_GROUP) AS LEDGER_GROUP,\n" +
                        //        "\n" +
                        //        "               IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,\n" +
                        //        "                  CASE\n" +
                        //        "                    WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                        //        "                     CONCAT('   ', ML.LEDGER_NAME)\n" +
                        //        "                    ELSE\n" +
                        //        "                     CONCAT('      ', ML.LEDGER_NAME)\n" +
                        //        "                  END,\n" +
                        //        "                  ML.LEDGER_NAME) AS LEDGER_NAME,\n" +
                        //        "               ML.LEDGER_CODE,\n" +
                        //        "               LG.SORT_ORDER,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN SUM(CASE\n" +
                        //        "                            WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                             VT.AMOUNT\n" +
                        //        "                            ELSE\n" +
                        //        "                             -VT.AMOUNT\n" +
                        //        "                          END) < 0 THEN\n" +
                        //        "                  ABS(SUM(CASE\n" +
                        //        "                            WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                             VT.AMOUNT\n" +
                        //        "                            ELSE\n" +
                        //        "                             -VT.AMOUNT\n" +
                        //        "                          END))\n" +
                        //        "               END AS RECEIPTAMT\n" +
                        //        "\n" +
                        //        "          FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "         INNER JOIN MASTER_LEDGER_GROUP PG\n" +
                        //        "            ON LG.PARENT_GROUP_ID = PG.GROUP_ID\n" +
                        //        "          LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "          LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "           AND MT.BRANCH_ID = VT.BRANCH_ID\n" +
                        //        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "         {  AND vt.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //        "         {  AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }\n" +
                        //        "               AND MT.STATUS = 1\n" +
                        //        "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "           AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "           AND LG.NATURE_ID NOT IN (3, 4)\n" +
                        //        "         GROUP BY VT.LEDGER_ID,MIP.CUSTOMERID) AS T\n" +
                        //        " WHERE T.RECEIPTAMT > 0\n" +
                        //        " ORDER BY SORT_ORDER";

                        break;
                    }
                #endregion

                #region Income Expenditure
                case ReportSQLCommand.FinalAccounts.IncomeExpenditure:
                    {
                        query = @"SELECT T.LEDGER_ID,
                                       T.GROUP_ID,
                                       T.GROUP_CODE,
                                       T.LEDGER_GROUP,
                                       T.LEDGER_CODE  AS PAYLEDGER_CODE,
                                       T.LEDGER_NAME  AS PAYLEDGER_NAME,
                                       T.PAYMENTAMT,
                                       T.LEDGER_CODE,
                                       T.LEDGER_NAME,
                                       T.RECEIPTAMT
                                    FROM (SELECT ML.LEDGER_ID,
                                               ML.GROUP_ID,
                                               LG.GROUP_CODE,
                                               LG.LEDGER_GROUP,
                                               ML.LEDGER_CODE,
                                               ML.LEDGER_NAME,
                                               CASE
                                                 WHEN SUM(CASE
                                                            WHEN VT.TRANS_MODE = 'DR' THEN
                                                             VT.AMOUNT
                                                            ELSE
                                                             -VT.AMOUNT
                                                          END) > 0 THEN
                                                  ABS(SUM(CASE
                                                            WHEN VT.TRANS_MODE = 'DR' THEN
                                                             VT.AMOUNT
                                                            ELSE
                                                             -VT.AMOUNT
                                                          END))
                                               END AS RECEIPTAMT,
                                               CASE
                                                 WHEN SUM(CASE
                                                            WHEN VT.TRANS_MODE = 'DR' THEN
                                                             VT.AMOUNT
                                                            ELSE
                                                             -VT.AMOUNT
                                                          END) < 0 THEN
                                                  ABS(SUM(CASE
                                                            WHEN VT.TRANS_MODE = 'DR' THEN
                                                             VT.AMOUNT
                                                            ELSE
                                                             -VT.AMOUNT
                                                          END))
                                               END AS PAYMENTAMT,
                                               CASE
                                                 WHEN VT.AMOUNT < 0 THEN
                                                  LEDGER_NAME = NULL AND LEDGER_CODE = NULL
                                               END
                                          FROM MASTER_LEDGER_GROUP LG
                                          LEFT JOIN MASTER_LEDGER ML
                                            ON ML.GROUP_ID = LG.GROUP_ID
                                          LEFT JOIN VOUCHER_TRANS VT
                                            ON VT.LEDGER_ID = ML.LEDGER_ID
                                          LEFT JOIN VOUCHER_MASTER_TRANS MT
                                            ON VT.VOUCHER_ID = MT.VOUCHER_ID
                                         WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                                           AND MT.STATUS = 1
                                           AND LG.GROUP_ID = 18
                                           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                                           AND LG.GROUP_ID NOT IN (12, 13)
                                           AND LG.NATURE_ID IN (1, 2)
                                         GROUP BY VT.LEDGER_ID
                                        UNION ALL
                                        SELECT ML.LEDGER_ID,
                                               ML.GROUP_ID,
                                               LG.GROUP_CODE,
                                               LG.LEDGER_GROUP,
                                               ML.LEDGER_CODE,
                                               ML.LEDGER_NAME,
                                               CASE
                                                 WHEN SUM(CASE
                                                            WHEN VT.TRANS_MODE = 'DR' THEN
                                                             VT.AMOUNT
                                                            ELSE
                                                             -VT.AMOUNT
                                                          END) < 0 THEN
                                                  ABS(SUM(CASE
                                                            WHEN VT.TRANS_MODE = 'DR' THEN
                                                             VT.AMOUNT
                                                            ELSE
                                                             -VT.AMOUNT
                                                          END))
                                               END AS RECEIPTAMT,
                                               CASE
                                                 WHEN SUM(CASE
                                                            WHEN VT.TRANS_MODE = 'DR' THEN
                                                             VT.AMOUNT
                                                            ELSE
                                                             -VT.AMOUNT
                                                          END) > 0 THEN
                                                  ABS(SUM(CASE
                                                            WHEN VT.TRANS_MODE = 'DR' THEN
                                                             VT.AMOUNT
                                                            ELSE
                                                             -VT.AMOUNT
                                                          END))
                                               END AS PAYMENTAMT,
                                               CASE
                                                 WHEN VT.AMOUNT > 0 THEN
                                                  LEDGER_NAME = NULL AND LEDGER_CODE = NULL
                                               END
                                          FROM MASTER_LEDGER_GROUP LG
                                          LEFT JOIN MASTER_LEDGER ML
                                            ON ML.GROUP_ID = LG.GROUP_ID
                                          LEFT JOIN VOUCHER_TRANS VT
                                            ON VT.LEDGER_ID = ML.LEDGER_ID
                                          LEFT JOIN VOUCHER_MASTER_TRANS MT
                                            ON VT.VOUCHER_ID = MT.VOUCHER_ID
                                         WHERE MT.PROJECT_ID IN (?PROJECT_ID)
                                           AND MT.STATUS = 1
                                           AND LG.GROUP_ID = 19
                                           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                                           AND LG.GROUP_ID NOT IN (12, 13)
                                           AND LG.NATURE_ID IN (1, 2)
                                         GROUP BY VT.LEDGER_ID) AS T ";
                        break;
                    }
                #endregion

                #region Expendiure
                case ReportSQLCommand.FinalAccounts.Expenditure:
                    {
                        query = "SELECT T.LEDGER_ID,\n" +
                       "       T.GROUP_ID,\n" +
                       "       T.GROUP_CODE,\n" +
                       "       T.PARENT_GROUP,\n" +
                       "       T.PARENT_GROUP_ID,\n" +
                       "       T.LEDGER_GROUP,\n" +
                       "       T.LEDGER_CODE,\n" +
                       "       T.LEDGER_NAME,\n" +
                       "       T.PAYMENTAMT,T.SORT_ORDER\n" +
                       "  FROM (SELECT ML.LEDGER_ID,\n" +
                       "               ML.GROUP_ID,\n" +
                       "               LG.GROUP_CODE,\n" +
                       "CASE\n" +
                        "       WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                       "        LG.LEDGER_GROUP\n" +
                       "        ELSE\n" +
                       "        PG.LEDGER_GROUP\n" +
                       "        END AS PARENT_GROUP,\n" +
                       "               IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,\n" +
                       "               CASE\n" +
                       "                 WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                       "                  CONCAT(LG.LEDGER_GROUP)\n" +
                       "                 ELSE\n" +
                       "               CONCAT('   ',LG.LEDGER_GROUP)\n" +
                       "               END,LG.LEDGER_GROUP) AS LEDGER_GROUP,\n" +
                       "              IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,\n" +
                       "                  CASE\n" +
                       "                    WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                       "                     CONCAT('   ', ML.LEDGER_NAME)\n" +
                       "                    ELSE\n" +
                       "                     CONCAT('      ', ML.LEDGER_NAME)\n" +
                       "                 END,\n" +
                       "                 ML.LEDGER_NAME) AS LEDGER_NAME,\n" +
                       "               ML.LEDGER_CODE,LG.SORT_ORDER,\n" +
                       "               IFNULL((CASE\n" +
                       "                 WHEN SUM(CASE\n" +
                       "                            WHEN MT.TRANS_MODE = 'DR' THEN\n" +
                       "                             MT.AMOUNT\n" +
                       "                            ELSE\n" +
                       "                             -MT.AMOUNT\n" +
                       "                          END) > 0 THEN\n" +
                       "                  ABS(SUM(CASE\n" +
                       "                            WHEN MT.TRANS_MODE = 'DR' THEN\n" +
                       "                             MT.AMOUNT\n" +
                       "                            ELSE\n" +
                       "                             -MT.AMOUNT\n" +
                       "                          END))\n" +
                            //"               END),0) + IF(?BEGIN_FROM = ?DATE_FROM, IFNULL(LB.AMOUNT, 0), 0) AS PAYMENTAMT\n" + 04/11/2019
                       "               END),0) AS PAYMENTAMT\n" +
                       " FROM MASTER_LEDGER_GROUP LG\n" +
                       " INNER JOIN MASTER_LEDGER_GROUP PG\n" +
                       "           ON LG.PARENT_GROUP_ID=PG.GROUP_ID\n" +
                       " LEFT JOIN MASTER_LEDGER ML\n" +
                       "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                       " LEFT JOIN (SELECT VM.PROJECT_ID, VT.VOUCHER_ID, VT.LEDGER_ID, VT.AMOUNT, VT.TRANS_MODE\n" +
                       "                        FROM VOUCHER_MASTER_TRANS VM\n" +
                       "                        INNER JOIN VOUCHER_TRANS VT ON VT.VOUCHER_ID = VM.VOUCHER_ID AND VT.BRANCH_ID =VM.BRANCH_ID\n" +
                       "                        WHERE VM.PROJECT_ID IN (?PROJECT_ID) AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND VM.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND VM.STATUS = 1\n" +
                       "                        AND VM.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO) AS MT\n" +
                       " ON MT.LEDGER_ID = ML.LEDGER_ID\n" +
                            //" LEFT JOIN LEDGER_BALANCE LB ON LB.LEDGER_ID = ML.LEDGER_ID AND LB.PROJECT_ID= MT.PROJECT_ID AND LB.TRANS_FLAG = 'OP'\n" +
                            //" AND LB.TRANS_MODE = 'DR' AND LB.PROJECT_ID IN (?PROJECT_ID) AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                       "         WHERE LG.GROUP_ID NOT IN (12, 13)\n" +
                       "           AND LG.NATURE_ID NOT IN (3, 4)\n" +
                       "         GROUP BY ML.LEDGER_ID) AS T\n" +
                       " WHERE T.PAYMENTAMT > 0 ORDER BY T.SORT_ORDER";

                        //query = "SELECT T.LEDGER_ID,\n" +
                        //        "       T.GROUP_ID,\n" +
                        //        "       T.GROUP_CODE,\n" +
                        //        "       T.PARENT_GROUP,\n" +
                        //        "       T.LEDGER_GROUP,\n" +
                        //        "       T.LEDGER_CODE,\n" +
                        //        "       T.LEDGER_NAME,\n" +
                        //        "       T.PAYMENTAMT,\n" +
                        //        "       T.SORT_ORDER\n" +
                        //        "  FROM (SELECT ML.LEDGER_ID,\n" +
                        //        "               ML.GROUP_ID,\n" +
                        //        "               LG.GROUP_CODE,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                        //        "                  LG.LEDGER_GROUP\n" +
                        //        "                 ELSE\n" +
                        //        "                  PG.LEDGER_GROUP\n" +
                        //        "               END AS PARENT_GROUP,\n" +
                        //        "               IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,\n" +
                        //        "                  CASE\n" +
                        //        "                    WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                        //        "                     CONCAT(LG.LEDGER_GROUP)\n" +
                        //        "                    ELSE\n" +
                        //        "                     CONCAT('   ', LG.LEDGER_GROUP)\n" +
                        //        "                  END,\n" +
                        //        "                  LG.LEDGER_GROUP) AS LEDGER_GROUP,\n" +
                        //        "               IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,\n" +
                        //        "                  CASE\n" +
                        //        "                    WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                        //        "                     CONCAT('   ', ML.LEDGER_NAME)\n" +
                        //        "                    ELSE\n" +
                        //        "                     CONCAT('      ', ML.LEDGER_NAME)\n" +
                        //        "                  END,\n" +
                        //        "                  ML.LEDGER_NAME) AS LEDGER_NAME,\n" +
                        //        "               ML.LEDGER_CODE,\n" +
                        //        "               LG.SORT_ORDER,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN SUM(CASE\n" +
                        //        "                            WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                             VT.AMOUNT\n" +
                        //        "                            ELSE\n" +
                        //        "                             -VT.AMOUNT\n" +
                        //        "                          END) > 0 THEN\n" +
                        //        "                  ABS(SUM(CASE\n" +
                        //        "                            WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                             VT.AMOUNT\n" +
                        //        "                            ELSE\n" +
                        //        "                             -VT.AMOUNT\n" +
                        //        "                          END))\n" +
                        //        "               END AS PAYMENTAMT\n" +
                        //        "\n" +
                        //        "          FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "         INNER JOIN MASTER_LEDGER_GROUP PG\n" +
                        //        "            ON LG.PARENT_GROUP_ID = PG.GROUP_ID\n" +
                        //        "          LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "          LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "           AND MT.BRANCH_ID = VT.BRANCH_ID\n" +
                        //        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "          { AND vt.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "          { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }\n" +
                        //        "           AND MT.STATUS = 1\n" +
                        //        "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "           AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "           AND LG.NATURE_ID NOT IN (3, 4)\n" +
                        //        "         GROUP BY VT.LEDGER_ID,MIP.CUSTOMERID) AS T\n" +
                        //        " WHERE T.PAYMENTAMT > 0\n" +
                        //        " ORDER BY T.SORT_ORDER";
                        break;
                    }
                #endregion

                #region FinalIncomeExpendiure
                case ReportSQLCommand.FinalAccounts.FinalIncomeExpenditure:
                    {
                        query = "SELECT T.LEDGER_ID,\n" +
                                   "       T.GROUP_ID,\n" +
                                   "       T.GROUP_CODE,\n" +
                                   "       T.PARENT_GROUP,\n" +
                                   "       T.LEDGER_GROUP,\n" +
                                   "       T.LEDGER_CODE,\n" +
                                   "       T.LEDGER_NAME,\n" +
                                   "       (T.AMOUNT  + IF(?BEGIN_FROM = ?DATE_FROM, IFNULL(OP_AMOUNT,0), 0)) AS AMOUNT,\n" +
                                   "       T.SORT_ORDER\n" +
                                   "  FROM (SELECT ML.LEDGER_ID,\n" +
                                   "               ML.GROUP_ID,\n" +
                                   "               LG.GROUP_CODE,\n" +
                                   "CASE\n" +
                                    "       WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                                   "        LG.LEDGER_GROUP\n" +
                                   "        ELSE\n" +
                                   "        PG.LEDGER_GROUP\n" +
                                   "        END AS PARENT_GROUP,\n" +
                                   "               IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,\n" +
                                   "               CASE\n" +
                                   "                 WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                                   "                  CONCAT(LG.LEDGER_GROUP)\n" +
                                   "                 ELSE\n" +
                                   "               CONCAT('   ',LG.LEDGER_GROUP)\n" +
                                   "               END,LG.LEDGER_GROUP) AS LEDGER_GROUP,\n" +
                                   "              IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,\n" +
                                   "                  CASE\n" +
                                   "                    WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                                   "                     CONCAT('   ', ML.LEDGER_NAME)\n" +
                                   "                    ELSE\n" +
                                   "                     CONCAT('      ', ML.LEDGER_NAME)\n" +
                                   "                 END,\n" +
                                   "                 ML.LEDGER_NAME) AS LEDGER_NAME,\n" +
                                   "               ML.LEDGER_CODE,LG.SORT_ORDER,\n" +
                                   " SUM(IF(MT.TRANS_MODE = 'CR', IFNULL(MT.AMOUNT, 0), -IFNULL(MT.AMOUNT,0))) AS AMOUNT\n" +
                                   " From (SELECT PARENT_GROUP_ID, GROUP_ID, NATURE_ID, GROUP_CODE, LEDGER_GROUP, SORT_ORDER\n" +
                                   "      FROM MASTER_LEDGER_GROUP WHERE NATURE_ID IN (1, 2) ) AS LG\n" +
                                   " INNER JOIN MASTER_LEDGER_GROUP PG ON LG.PARENT_GROUP_ID=PG.GROUP_ID\n" +
                                   " INNER JOIN MASTER_LEDGER ML ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                   " LEFT JOIN (SELECT VM.PROJECT_ID, VT.VOUCHER_ID, VT.LEDGER_ID, VT.AMOUNT, VT.TRANS_MODE\n" +
                                   "              FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, PROJECT_ID, VOUCHER_TYPE, VOUCHER_DATE, STATUS\n" +
                                   "                   FROM VOUCHER_MASTER_TRANS WHERE STATUS = 1 AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND PROJECT_ID IN (?PROJECT_ID)\n" +
                                   "                   {AND BRANCH_ID IN (?BRANCH_ID)}) AS VM\n" +
                                   "              INNER JOIN VOUCHER_TRANS VT ON VT.VOUCHER_ID = VM.VOUCHER_ID AND VT.BRANCH_ID =VM.BRANCH_ID AND VT.LOCATION_ID =VM.LOCATION_ID\n" +
                                   "              WHERE VM.PROJECT_ID IN (?PROJECT_ID) AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND VM.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND VM.STATUS = 1\n" +
                                   "              AND VM.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO) AS MT\n" +
                                   " ON MT.LEDGER_ID = ML.LEDGER_ID\n" +
                                   " WHERE LG.NATURE_ID IN (1, 2)\n" +
                                   " GROUP BY ML.LEDGER_ID) AS T\n" +
                                   " LEFT JOIN (SELECT LEDGER_ID, SUM(IF(TRANS_MODE = 'CR', IFNULL(LB.AMOUNT, 0), -IFNULL(LB.AMOUNT, 0))) AS OP_AMOUNT FROM LEDGER_BALANCE LB \n" +
                                   " WHERE LB.TRANS_FLAG = 'OP' AND BRANCH_ID IN (?BRANCH_OFFICE_ID) AND LB.PROJECT_ID IN (?PROJECT_ID) GROUP BY LEDGER_ID) LB\n" +
                                   " ON LB.LEDGER_ID = T.LEDGER_ID";
                        break;
                    }
                #endregion

                #region Branch Comparative
                case ReportSQLCommand.FinalAccounts.BranchWiseIncomeExpense:
                    {
                        #region OldQuery
                        //query = "SELECT CAST(T.YEAR AS CHAR) AS YEAR,UPPER(T.BRANCH_OFFICE_CODE) AS BRANCH_OFFICE_CODE,T.BRANCH_OFFICE_NAME,\n" +
                        //            "      CAST(T.MONTH AS CHAR) AS MONTH,\n" +
                        //            "       CAST(T.MONTH_NAME AS CHAR) AS MONTH_NAME,\n" +
                        //            "       (SUM(RECEIPT)/100000) AS RECEIPT,\n" +
                        //            "       (SUM(PAYMENT)/100000) AS PAYMENT,\n" +
                        //            "(IFNULL(SUM(RECEIPT)-SUM(PAYMENT),0)/100000) AS AMOUNT \n" +
                        //            "  FROM (SELECT YEAR(MONTH_YEAR) AS 'YEAR',\n" +
                        //            "               MONTH(MONTH_YEAR) AS 'MONTH',\n" +
                        //            "               CONCAT(LEFT(MONTHNAME(MONTH_YEAR), 3), '-', YEAR(MONTH_YEAR)) AS MONTH_NAME,\n" +
                        //            "               0 AS RECEIPT,\n" +
                        //            "               ifnull(NULLIF(IF(('PY' = 'RC' AND VT.TRANS_MODE = 'DR') OR\n" +
                        //            "                                ('PY' = 'PY' AND VT.TRANS_MODE = 'CR'),\n" +
                        //            "                                -IFNULL(SUM(VT.AMOUNT), 0),\n" +
                        //            "                                IFNULL(SUM(VT.AMOUNT), 0)),\n" +
                        //            "                             0),\n" +
                        //            "                      0) AS PAYMENT,BO.BRANCH_OFFICE_NAME,BO.BRANCH_PART_CODE AS BRANCH_OFFICE_CODE\n" +
                        //            "\n" +
                        //            "          FROM (SELECT (?DATE_FROM - INTERVAL\n" +
                        //            "                        DAYOFMONTH(?DATE_FROM) - 1 DAY) + INTERVAL NO_OF_MONTH MONTH AS MONTH_YEAR,\n" +
                        //            "                       NO_OF_MONTH\n" +
                        //            "                  FROM (SELECT @rownum1 := @rownum1 + 1 AS NO_OF_MONTH\n" +
                        //            "                          FROM (SELECT 1 UNION\n" +
                        //            "                                        SELECT 2 UNION\n" +
                        //            "                                                SELECT 3 UNION\n" +
                        //            "                                                        SELECT 4\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "                                ) AS T1,\n" +
                        //            "                               (SELECT 1 UNION\n" +
                        //            "                                        SELECT 2 UNION\n" +
                        //            "                                                SELECT 3 UNION\n" +
                        //            "                                                        SELECT 4\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "                                ) AS T2,\n" +
                        //            "                               (SELECT 1 UNION\n" +
                        //            "                                        SELECT 2 UNION\n" +
                        //            "                                                SELECT 3 UNION\n" +
                        //            "                                                        SELECT 4\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "                                ) AS T3,\n" +
                        //            "                               (SELECT @rownum1 := -1) AS T0) D1) D2\n" +
                        //            "          LEFT JOIN PROJECT_LEDGER AS PL\n" +
                        //            "         INNER JOIN MASTER_LEDGER AS ML\n" +
                        //            "         INNER JOIN MASTER_LEDGER_GROUP AS MLG\n" +
                        //            "            ON ML.GROUP_ID = MLG.GROUP_ID\n" +
                        //            "           AND MLG.GROUP_ID NOT IN (12, 13, 14) ON\n" +
                        //            "         PL.LEDGER_ID = ML.LEDGER_ID\n" +
                        //            "           { AND PL.PROJECT_ID IN (?PROJECT_ID) } \n" +
                        //            "          LEFT JOIN VOUCHER_MASTER_TRANS AS VMT\n" +
                        //            "        LEFT JOIN MASTER_PROJECT MP\n" +
                        //            "             ON MP.PROJECT_ID=VMT.PROJECT_ID\n" +
                        //            "         LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //            "             ON MIP.CUSTOMERID=MP.CUSTOMERID \n" +
                        //            "         INNER JOIN VOUCHER_TRANS AS VT\n" +
                        //            "            ON VMT.VOUCHER_ID = VT.VOUCHER_ID\n" +
                        //            "            AND VMT.LOCATION_ID = VT.LOCATION_ID\n" +
                        //            "            AND VMT.BRANCH_ID = VT.BRANCH_ID\n" +
                        //            "           AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                        //            "           AND VMT.STATUS = 1\n" +
                        //            "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //            "  { AND MP.CUSTOMERID IN (?CUSTOMERID)}\n" +
                        //            "           AND VMT.VOUCHER_TYPE = 'PY' ON\n" +
                        //            "         PL.PROJECT_ID = VMT.PROJECT_ID\n" +
                        //            "           AND PL.LEDGER_ID = VT.LEDGER_ID\n" +
                        //            "           AND YEAR(D2.MONTH_YEAR) = YEAR(VMT.VOUCHER_DATE)\n" +
                        //            "           AND MONTH(D2.MONTH_YEAR) = MONTH(VMT.VOUCHER_DATE)\n" +
                        //             "         LEFT JOIN BRANCH_OFFICE BO\n" +
                        //            "             ON BO.BRANCH_OFFICE_ID=VT.BRANCH_ID \n" +
                        //            "         WHERE D2.MONTH_YEAR <= ?DATE_TO\n" +
                        //            "         GROUP BY VT.BRANCH_ID,MONTH_YEAR\n" +
                        //            "        union\n" +
                        //            "        SELECT YEAR(MONTH_YEAR) AS 'YEAR',\n" +
                        //            "               MONTH(MONTH_YEAR) AS 'MONTH',\n" +
                        //            "               CONCAT(LEFT(MONTHNAME(MONTH_YEAR), 3), '-', YEAR(MONTH_YEAR)) AS MONTH_NAME,\n" +
                        //            "               ifnull(NULLIF(IF(('RC' = 'RC' AND VT.TRANS_MODE = 'DR') OR\n" +
                        //            "                                ('RC' = 'PY' AND VT.TRANS_MODE = 'CR'),\n" +
                        //            "                                -IFNULL(SUM(VT.AMOUNT), 0),\n" +
                        //            "                                IFNULL(SUM(VT.AMOUNT), 0)),\n" +
                        //            "                             0),\n" +
                        //            "                      0) AS RECEIPT,\n" +
                        //            "               0 AS PAYMENT,BO.BRANCH_OFFICE_NAME,BO.BRANCH_PART_CODE AS BRANCH_OFFICE_CODE\n" +
                        //            "\n" +
                        //            "          FROM (SELECT (?DATE_FROM - INTERVAL\n" +
                        //            "                        DAYOFMONTH(?DATE_FROM) - 1 DAY) + INTERVAL NO_OF_MONTH MONTH AS MONTH_YEAR,\n" +
                        //            "                       NO_OF_MONTH\n" +
                        //            "                  FROM (SELECT @rownum := @rownum + 1 AS NO_OF_MONTH\n" +
                        //            "                          FROM (SELECT 1 UNION\n" +
                        //            "                                        SELECT 2 UNION\n" +
                        //            "                                                SELECT 3 UNION\n" +
                        //            "                                                        SELECT 4\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "                                ) AS T1,\n" +
                        //            "                               (SELECT 1 UNION\n" +
                        //            "                                        SELECT 2 UNION\n" +
                        //            "                                                SELECT 3 UNION\n" +
                        //            "                                                        SELECT 4\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "                                ) AS T2,\n" +
                        //            "                               (SELECT 1 UNION\n" +
                        //            "                                        SELECT 2 UNION\n" +
                        //            "                                                SELECT 3 UNION\n" +
                        //            "                                                        SELECT 4\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "\n" +
                        //            "                                ) AS T3,\n" +
                        //            "                               (SELECT @rownum := -1) AS T0) D1) D2\n" +
                        //            "          LEFT JOIN PROJECT_LEDGER AS PL\n" +
                        //            "         INNER JOIN MASTER_LEDGER AS ML\n" +
                        //            "         INNER JOIN MASTER_LEDGER_GROUP AS MLG\n" +
                        //            "            ON ML.GROUP_ID = MLG.GROUP_ID\n" +
                        //            "           AND MLG.GROUP_ID NOT IN (12, 13, 14) ON\n" +
                        //            "         PL.LEDGER_ID = ML.LEDGER_ID\n" +
                        //            "          { AND PL.PROJECT_ID IN (?PROJECT_ID) } \n" +
                        //            "          LEFT JOIN VOUCHER_MASTER_TRANS AS VMT\n" +
                        //             "        LEFT JOIN MASTER_PROJECT MP\n" +
                        //            "             ON MP.PROJECT_ID=VMT.PROJECT_ID\n" +
                        //            "         LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //            "             ON MIP.CUSTOMERID=MP.CUSTOMERID \n" +
                        //            "         INNER JOIN VOUCHER_TRANS AS VT\n" +
                        //            "            ON VMT.VOUCHER_ID = VT.VOUCHER_ID\n" +
                        //            "            AND VMT.LOCATION_ID = VT.LOCATION_ID\n" +
                        //            "            AND VMT.BRANCH_ID = VT.BRANCH_ID\n" +
                        //            "           AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO  \n" +
                        //            "           AND VMT.STATUS = 1\n" +
                        //              "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //            "  { AND MP.CUSTOMERID IN (?CUSTOMERID) }\n" +
                        //            "           AND VMT.VOUCHER_TYPE = 'RC' ON\n" +
                        //            "         PL.PROJECT_ID = VMT.PROJECT_ID\n" +
                        //            "           AND PL.LEDGER_ID = VT.LEDGER_ID\n" +
                        //            "           AND YEAR(D2.MONTH_YEAR) = YEAR(VMT.VOUCHER_DATE)\n" +
                        //            "           AND MONTH(D2.MONTH_YEAR) = MONTH(VMT.VOUCHER_DATE)\n" +
                        //            "         LEFT JOIN BRANCH_OFFICE BO\n" +
                        //            "             ON BO.BRANCH_OFFICE_ID=VT.BRANCH_ID \n" +
                        //            "         WHERE D2.MONTH_YEAR <= ?DATE_TO\n" +
                        //            "         GROUP BY VT.BRANCH_ID,MONTH_YEAR) as t\n" +
                        //            "         WHERE T.BRANCH_OFFICE_CODE IS NOT NULL\n" +
                        //            " GROUP BY T.BRANCH_OFFICE_CODE, T.MONTH_NAME ORDER BY  T.YEAR, T.MONTH";
                        #endregion

                        #region NewQuery

                        query = "SELECT CAST(FNL.YEAR AS CHAR) AS YEAR,\n" +
                                "       UPPER(BRANCH_OFFICE_CODE) AS BRANCH_OFFICE_CODE,\n" +
                                "       BRANCH_OFFICE_NAME,\n" +
                                "       CAST(FNL.MONTH AS CHAR) AS MONTH,\n" +
                                "       CAST(MONTH_NAME AS CHAR) AS MONTH_NAME,\n" +
                                "       (SUM(RECEIPT) / 100000 ) AS RECEIPT,\n" +     // FORMAT((SUM(RECEIPT) / 100000), 2) AS RECEIPT, 
                                "       (SUM(PAYMENT) / 100000 ) AS PAYMENT,\n" +   //  FORMAT((SUM(PAYMENT) / 100000), 2) AS PAYMENT,
                                "      (IFNULL(SUM(RECEIPT) - SUM(PAYMENT), 0) / 100000) AS AMOUNT\n" +   // FORMAT((IFNULL(SUM(RECEIPT) - SUM(PAYMENT), 0) / 100000), 2) AS AMOUNT
                                "  FROM (SELECT YEAR(MONTH_YEAR) AS 'YEAR',\n" +
                                "               MONTH(MONTH_YEAR) AS 'MONTH',\n" +
                                "               CONCAT(LEFT(MONTHNAME(MONTH_YEAR), 3), '-', YEAR(MONTH_YEAR)) AS MONTH_NAME,\n" +
                                "               MONTH_YEAR,\n" +
                                "               VOUCHER_DATE,\n" +
                                "               CASE\n" +
                                "                 WHEN MONTH(MONTH_YEAR) = MONTH(VOUCHER_DATE) THEN\n" +
                                "                  RECEIPT\n" +
                                "                 ELSE\n" +
                                "                  0\n" +
                                "               END AS RECEIPT,\n" +
                                "               CASE\n" +
                                "                 WHEN MONTH(MONTH_YEAR) = MONTH(VOUCHER_DATE) THEN\n" +
                                "                  PAYMENT\n" +
                                "                 ELSE\n" +
                                "                  0\n" +
                                "               END AS PAYMENT,\n" +
                                "               BRANCH_OFFICE_NAME,\n" +
                                "               BRANCH_PART_CODE AS BRANCH_OFFICE_CODE,\n" +
                                "               BRANCH_ID\n" +
                                "\n" +
                                "          FROM (SELECT *\n" +
                                "                  FROM (SELECT *\n" +
                                "                          FROM (SELECT (?DATE_FROM - INTERVAL\n" +
                                "                                        DAYOFMONTH(?DATE_FROM) - 1 DAY) +\n" +
                                "                                       INTERVAL NO_OF_MONTH MONTH AS MONTH_YEAR,\n" +
                                "                                       NO_OF_MONTH\n" +
                                "                                  FROM (SELECT @rownum := @rownum + 1 AS NO_OF_MONTH\n" +
                                "                                          FROM (SELECT 1 UNION\n" +
                                "                                                        SELECT 2 UNION\n" +
                                "                                                                SELECT 3 UNION\n" +
                                "                                                                        SELECT 4\n" +
                                "\n" +
                                "\n" +
                                "\n" +
                                "\n" +
                                "                                                ) AS T1,\n" +
                                "                                               (SELECT 1 UNION\n" +
                                "                                                        SELECT 2 UNION\n" +
                                "                                                                SELECT 3 UNION\n" +
                                "                                                                        SELECT 4\n" +
                                "\n" +
                                "\n" +
                                "\n" +
                                "\n" +
                                "                                                ) AS T2,\n" +
                                "                                               (SELECT 1 UNION\n" +
                                "                                                        SELECT 2 UNION\n" +
                                "                                                                SELECT 3 UNION\n" +
                                "                                                                        SELECT 4\n" +
                                "\n" +
                                "\n" +
                                "\n" +
                                "\n" +
                                "                                                ) AS T3,\n" +
                                "                                               (SELECT @rownum := -1) AS T0) D1) D2\n" +
                                "            WHERE D2.MONTH_YEAR BETWEEN ?DATE_FROM AND ?DATE_TO) AS T1\n" +
                                "\n" +
                                "            JOIN (SELECT BRANCH_ID, VOUCHER_DATE, SUM(RECEIPT) AS RECEIPT, SUM(PAYMENT) AS PAYMENT,\n" +
                                "                         BRANCH_OFFICE_NAME, BRANCH_PART_CODE\n" +
                                "            FROM (SELECT VMT.BRANCH_ID, VMT.VOUCHER_TYPE, VMT.VOUCHER_DATE,\n" +
                                "                    IF(VT.TRANS_MODE = 'CR', VT.AMOUNT, 0) AS RECEIPT, IF(VT.TRANS_MODE = 'DR', VT.AMOUNT, 0) AS PAYMENT,\n" +
                                "                     VT.TRANS_MODE, BO.BRANCH_OFFICE_CODE, BO.BRANCH_OFFICE_NAME, BRANCH_PART_CODE\n" +
                                "       FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, VOUCHER_DATE, VOUCHER_TYPE FROM VOUCHER_MASTER_TRANS\n" +
                                "            WHERE VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND BRANCH_ID IN (?BRANCH_OFFICE_ID) AND STATUS=1) AS VMT\n" +
                                "       INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID\n" +
                                "                           AND VT.LOCATION_ID = VMT.LOCATION_ID \n" +
                                "       INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = VT.LEDGER_ID AND ML.GROUP_ID NOT IN (12, 13, 14)\n" +
                                "                     AND ML.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID,?CONTRIBUTION_TO_PROVINCE_ID,?INTER_AC_FROM_TRANSFER_ID,?INTER_AC_TO_TRANSFER_ID)\n" +
                                "       INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID AND LG.GROUP_ID NOT IN (12, 13, 14) AND LG.NATURE_ID IN (1, 2)\n" +
                                "       INNER JOIN BRANCH_OFFICE BO ON BO.BRANCH_OFFICE_ID = VT.BRANCH_ID AND BO.BRANCH_OFFICE_ID = VMT.BRANCH_ID\n" +
                                "       WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)) AS RC1\n" +
                                "       GROUP BY BRANCH_ID, YEAR(VOUCHER_DATE), MONTH(VOUCHER_DATE)) AS T) AS T1) AS FNL\n" +
                                " WHERE RECEIPT > 0 AND PAYMENT > 0\n" +
                                " GROUP BY BRANCH_ID, YEAR(VOUCHER_DATE), MONTH(VOUCHER_DATE), YEAR(MONTH_YEAR), MONTH(MONTH_YEAR)";
                        #endregion
                        break;
                    }
                #endregion

                # region Ledger Comparative By Branch
                case ReportSQLCommand.FinalAccounts.BranchWiseLedgerComparative:
                    {
                        /*query = "SELECT CONCAT(ML.LEDGER_CODE,\n" +
                                "              ' - ',\n" +
                                "              ML.LEDGER_NAME,\n" +
                                "              ' - ',\n" +
                                "              MLG.LEDGER_GROUP) AS LEDGER_NAME,\n" +
                                "       UPPER(BO.BRANCH_PART_CODE) AS BRANCH_OFFICE_CODE,\n" +
                                "       BO.BRANCH_OFFICE_NAME,\n" +
                                "       (T.AMOUNT) AS AMOUNT\n" + ///100000
                                "  FROM MASTER_LEDGER ML\n" +
                                "  JOIN (SELECT FIN.LEDGER_ID, SUM(FIN.AMOUNT) AS AMOUNT, FIN.BRANCH_ID\n" +
                                "          FROM (SELECT FNL.LEDGER_ID,\n" +
                                "                       CASE\n" +
                                "                         WHEN TRANS_MODE = 'CR' THEN\n" +
                                "                          -FNL.AMOUNT\n" +
                                "                         WHEN TRANS_MODE = 'DR' THEN\n" +
                                "                          FNL.AMOUNT\n" +
                                "                       END AS AMOUNT,\n" +
                                "                       FNL.BRANCH_ID,\n" +
                                "                       TRANS_MODE\n" +
                                "                  FROM (SELECT D1.BALANCE_DATE,\n" +
                                "                               D1.LEDGER_ID,\n" +
                                "                               D1.AMOUNT,\n" +
                                "                               D1.TRANS_MODE,\n" +
                                "                               D1.BRANCH_ID\n" +
                                "                          FROM (SELECT LB.BALANCE_DATE,\n" +
                                "                                       LB.LEDGER_ID,\n" +
                                "                                       LB.AMOUNT,\n" +
                                "                                       LB.TRANS_MODE,\n" +
                                "                                       LB.BRANCH_ID\n" +
                                "                                  FROM LEDGER_BALANCE LB\n" +
                                "                                  INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = LB.PROJECT_ID\n" +
                                "                                 WHERE BALANCE_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                                   AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                                "                                  AND MP.PROJECT_CATEGORY_ID IN (?PROJECT_CATOGORY_ID)\n" +
                                "                                 ORDER BY BALANCE_DATE DESC, LEDGER_ID) AS D1) AS FNL\n" +
                                "                 GROUP BY BRANCH_ID, LEDGER_ID) AS FIN\n" +
                                "         GROUP BY BRANCH_ID, LEDGER_ID) AS T\n" +
                                "    ON T.LEDGER_ID = ML.LEDGER_ID\n" +
                                " LEFT JOIN MASTER_LEDGER_GROUP MLG ON MLG.GROUP_ID = ML.GROUP_ID\n" +
                                " LEFT JOIN BRANCH_OFFICE BO ON BO.BRANCH_OFFICE_ID = T.BRANCH_ID\n" +
                                " WHERE MLG.GROUP_ID NOT IN (12, 13, 14)\n" +
                                " GROUP BY T.BRANCH_ID, T.LEDGER_ID";*/

                        query = @"SELECT BO.BRANCH_OFFICE_ID, ML.LEDGER_ID, BO.BRANCH_OFFICE_CODE, BO.BRANCH_OFFICE_NAME, ML.LEDGER_NAME,
                                    SUM( IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), 0) ) AS RECEIPT_AMOUNT,
                                    SUM( IF(VT.TRANS_MODE = 'DR', IFNULL(VT.AMOUNT,0), 0) ) AS PAYMENT_AMOUNT

                                    FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, PROJECT_ID, VOUCHER_DATE FROM VOUCHER_MASTER_TRANS
                                            WHERE VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND BRANCH_ID IN (?BRANCH_OFFICE_ID) AND
                                            STATUS = 1 AND VOUCHER_TYPE IN ('RC', 'PY') ) AS VMT
                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID AND MP.PROJECT_CATEGORY_ID IN (?PROJECT_CATOGORY_ID) 
                                    INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID
                                                                 AND VT.LOCATION_ID = VMT.LOCATION_ID
                                    INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = VT.LEDGER_ID AND ML.GROUP_ID NOT IN (12, 13, 14)
                                    LEFT JOIN BRANCH_OFFICE BO ON BO.BRANCH_OFFICE_ID = VMT.BRANCH_ID
                                    WHERE VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND MP.PROJECT_CATEGORY_ID IN (?PROJECT_CATOGORY_ID)
                                        GROUP BY VMT.BRANCH_ID, VT.lEDGER_ID";

                        break;
                    }
                #endregion

                #region Final Receipts and Journal
                case ReportSQLCommand.FinalAccounts.FinalReceiptJournal:
                    {
                        query = "SELECT T.* FROM( SELECT FDA.INVESTMENT_DATE, MLG.LEDGER_CODE,ML.GROUP_CODE,ML.LEDGER_GROUP,ML.GROUP_ID,\n" +
                                "       IFNULL(FDR.MATURITY_DATE, FDA.MATURED_ON) AS MATURITY_DATE,\n" +
                                "       FDR.RENEWAL_DATE,\n" +
                                "       FDA.FD_ACCOUNT_NUMBER, FDR.INTEREST_LEDGER_ID AS LEDGER_ID,\n" +
                                "       CONCAT(MBK.BANK, ' (', MBK.BRANCH, ')') AS BANK,\n" +
                                "       MLG.LEDGER_NAME,ML.SORT_ORDER, \n" + // by alex to merge receipt and journal data source.
                                "       MPR.PROJECT,\n" +
                                "       IFNULL(FDR.INTEREST_RATE, FDA.INTEREST_RATE) AS INTEREST_RATE,\n" +
                                "       FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) AS PRINCIPLE_AMOUNT,\n" +
                                "       IFNULL(FDR.INTEREST_AMOUNT, 0) AS INTEREST_AMOUNT,\n" +
                            //"       IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                                   "    cast(IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) as decimal)  AS RECEIPTAMT,\n" +   // by alex to merge receipt and journal data source. This amount type is decimal. So i casted the type.
                                "       FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                                "       IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) AS TOTAL_AMOUNT,\n" +
                                "       IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS WITHDRAWAL_AMOUNT,\n" +
                                "       FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                                "       IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "       IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS BALANCE_AMOUNT,\n" +
                                "\n" +
                                "       IFNULL(IF(FDA.INTEREST_TYPE=0,'Simple','Compound'),FDR.INTEREST_MODE) AS INTEREST_MODE,\n" +
                                "       IF(FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "          IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                                "          IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "          IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) = 0,\n" +
                                "          'Closed',\n" +
                                "          'Active') AS CLOSING_STATUS\n" +
                                "  FROM FD_ACCOUNT AS FDA\n" +
                                "  LEFT JOIN (SELECT FD_ACCOUNT_ID,\n" +
                                "                    MAX(MATURITY_DATE) AS MATURITY_DATE,INTEREST_LEDGER_ID,\n" +
                                "                    MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                                "                    SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                                "                    SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                                "                    SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                                "               FROM FD_RENEWAL\n" +
                                "              WHERE STATUS = 1 \n" +
                                "                AND RENEWAL_DATE < ?DATE_FROM \n" +
                                "              GROUP BY FD_ACCOUNT_ID) AS FDRO\n" +
                                "    ON FDA.FD_ACCOUNT_ID = FDRO.FD_ACCOUNT_ID\n" +
                                "\n" +
                                "  LEFT JOIN (SELECT FD_ACCOUNT_ID,BRANCH_ID,\n" +
                                "                    MAX(MATURITY_DATE) AS MATURITY_DATE,INTEREST_LEDGER_ID,\n" +
                                "                    MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                                "                    INTEREST_RATE,\n" +
                                "                    IF(INTEREST_TYPE=0,'Simple','Compound') AS INTEREST_MODE,\n" +
                                "                    SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                                "                    SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                                "                    SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                                "               FROM FD_RENEWAL AS F\n" +
                                "              WHERE STATUS = 1 \n" +
                                "                AND RENEWAL_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                                "              GROUP BY F.RENEWAL_DATE, FD_ACCOUNT_ID ORDER BY FD_ACCOUNT_ID DESC) AS FDR\n" +
                                "    ON FDA.FD_ACCOUNT_ID = FDR.FD_ACCOUNT_ID\n" +
                                "  LEFT JOIN MASTER_BANK AS MBK\n" +
                                "    ON FDA.BANK_ID = MBK.BANK_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MPR\n" +
                                "    ON FDA.PROJECT_ID = MPR.PROJECT_ID\n" +
                                "  LEFT JOIN MASTER_LEDGER MLG\n" +
                                "    ON FDR.INTEREST_LEDGER_ID = MLG.LEDGER_ID\n" +
                                "  LEFT JOIN MASTER_LEDGER_GROUP AS ML\n" +
                                "      ON MLG.GROUP_ID=ML.GROUP_ID\n" +

                                " WHERE FDA.STATUS = 1\n" +
                                "   AND FDA.INVESTMENT_DATE <= ?DATE_TO \n" +
                                " {AND MPR.PROJECT_ID IN (?PROJECT_ID)}\n" +
                                "  { AND FDR.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                "  { AND MPR.CUSTOMERID IN (?LEGAL_ENTITY_ID) }\n" +
                                "   AND FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                                "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) <> 0) AS T";

                        //query = "SELECT T.* FROM( SELECT FDA.INVESTMENT_DATE, MLG.LEDGER_CODE,ML.GROUP_CODE,ML.LEDGER_GROUP,ML.GROUP_ID,\n" +
                        //         "       IFNULL(FDR.MATURITY_DATE, FDA.MATURED_ON) AS MATURITY_DATE,\n" +
                        //         "       FDR.RENEWAL_DATE,\n" +
                        //         "       FDA.FD_ACCOUNT_NUMBER, FDR.INTEREST_LEDGER_ID AS LEDGER_ID,\n" +
                        //         "       CONCAT(MBK.BANK, ' (', MBK.BRANCH, ')') AS BANK,\n" +
                        //         "       MLG.LEDGER_NAME, ML.SORT_ORDER, \n" +
                        //         "       MPR.PROJECT,\n" +
                        //         "       IFNULL(FDR.INTEREST_RATE, FDA.INTEREST_RATE) AS INTEREST_RATE,\n" +
                        //         "       FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        //         "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) AS PRINCIPLE_AMOUNT,\n" +
                        //         "       IFNULL(FDR.INTEREST_AMOUNT, 0) AS INTEREST_AMOUNT,\n" +
                        //         "      IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0)  AS RECEIPTAMT,\n" +
                        //         "       FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        //         "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                        //         "       IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) AS TOTAL_AMOUNT,\n" +
                        //         "       IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS WITHDRAWAL_AMOUNT,\n" +
                        //         "       FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        //         "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                        //         "       IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        //         "       IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS BALANCE_AMOUNT,\n" +
                        //         "\n" +
                        //         "       IFNULL(IF(FDA.INTEREST_TYPE=0,'Simple','Compound'),FDR.INTEREST_MODE) AS INTEREST_MODE,\n" +
                        //         "       IF(FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        //         "          IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                        //         "          IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        //         "          IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) = 0,\n" +
                        //         "          'Closed',\n" +
                        //         "          'Active') AS CLOSING_STATUS\n" +
                        //         "  FROM FD_ACCOUNT AS FDA\n" +
                        //         "  LEFT JOIN (SELECT FD_ACCOUNT_ID,BRANCH_ID,\n" +
                        //         "                    MAX(MATURITY_DATE) AS MATURITY_DATE,INTEREST_LEDGER_ID,\n" +
                        //         "                    MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                        //         "                    SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                        //         "                    SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                        //         "                    SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                        //         "               FROM FD_RENEWAL\n" +
                        //         "              WHERE STATUS = 1 \n" +
                        //         "                AND RENEWAL_DATE < ?DATE_FROM \n" +
                        //         "              GROUP BY FD_ACCOUNT_ID) AS FDRO\n" +
                        //         "    ON FDA.FD_ACCOUNT_ID = FDRO.FD_ACCOUNT_ID\n" +
                        //         "\n" +
                        //         "  LEFT JOIN (SELECT FD_ACCOUNT_ID,BRANCH_ID,\n" +
                        //         "                    MAX(MATURITY_DATE) AS MATURITY_DATE,INTEREST_LEDGER_ID,\n" +
                        //         "                    MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                        //         "                    INTEREST_RATE,\n" +
                        //         "                    IF(INTEREST_TYPE=0,'Simple','Compound') AS INTEREST_MODE,\n" +
                        //         "                    SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                        //         "                    SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                        //         "                    SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                        //         "               FROM FD_RENEWAL AS F\n" +
                        //         "              WHERE STATUS = 1\n" +
                        //         "                AND RENEWAL_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                        //         "              GROUP BY F.RENEWAL_DATE, FD_ACCOUNT_ID ORDER BY FD_ACCOUNT_ID DESC) AS FDR\n" +
                        //         "    ON FDA.FD_ACCOUNT_ID = FDR.FD_ACCOUNT_ID\n" +
                        //         "  LEFT JOIN MASTER_BANK AS MBK\n" +
                        //         "    ON FDA.BANK_ID = MBK.BANK_ID\n" +
                        //         "  LEFT JOIN MASTER_PROJECT MPR\n" +
                        //         "    ON FDA.PROJECT_ID = MPR.PROJECT_ID\n" +
                        //         "  LEFT JOIN MASTER_LEDGER MLG\n" +
                        //         "    ON FDR.INTEREST_LEDGER_ID = MLG.LEDGER_ID\n" +
                        //         "  LEFT JOIN MASTER_LEDGER_GROUP AS ML\n" +
                        //         "      ON MLG.GROUP_ID=ML.GROUP_ID\n" +
                        //         " WHERE FDA.STATUS = 1\n" +
                        //         "   AND FDA.INVESTMENT_DATE <= ?DATE_TO \n" +
                        //         " {AND MPR.PROJECT_ID IN (?PROJECT_ID)}\n" +
                        //         "  { AND FDR.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //         "  { AND MPR.CUSTOMERID IN (?LEGAL_ENTITY_ID) }\n" +
                        //         "   AND FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                        //         "       IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) <> 0) AS T";
                        break;
                    }
                #endregion

                case ReportSQLCommand.FinalAccounts.BranchFixedAssetsInvestments:
                    {
                        query = @"SELECT VMT.BRANCH_ID, VT.lEDGER_ID, BO.BRANCH_OFFICE_NAME, ML.LEDGER_NAME,

                                    -- SUM( IF(VT.TRANS_MODE = 'CR' AND VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -5 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -5 YEAR), IFNULL(VT.AMOUNT,0), 0) ) AS FY6_RECEIPT_AMOUNT,
                                    SUM( IF(VT.TRANS_MODE = 'DR' AND VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -5 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -5 YEAR), IFNULL(VT.AMOUNT,0), 0) ) AS FY6_PAYMENT_AMOUNT,

                                    -- SUM( IF(VT.TRANS_MODE = 'CR' AND VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -4 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -4 YEAR), IFNULL(VT.AMOUNT,0), 0) ) AS FY5_RECEIPT_AMOUNT,
                                    SUM( IF(VT.TRANS_MODE = 'DR' AND VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -4 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -4 YEAR), IFNULL(VT.AMOUNT,0), 0) ) AS FY5_PAYMENT_AMOUNT,

                                    -- SUM( IF(VT.TRANS_MODE = 'CR' AND VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -3 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -3 YEAR), IFNULL(VT.AMOUNT,0), 0) ) AS FY4_RECEIPT_AMOUNT,
                                    SUM( IF(VT.TRANS_MODE = 'DR' AND VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -3 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -3 YEAR), IFNULL(VT.AMOUNT,0), 0) ) AS FY4_PAYMENT_AMOUNT,

                                    -- SUM( IF(VT.TRANS_MODE = 'CR' AND VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -2 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -2 YEAR), IFNULL(VT.AMOUNT,0), 0) ) AS FY3_RECEIPT_AMOUNT,
                                    SUM( IF(VT.TRANS_MODE = 'DR' AND VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -2 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -2 YEAR), IFNULL(VT.AMOUNT,0), 0) ) AS FY3_PAYMENT_AMOUNT,

                                    -- SUM( IF(VT.TRANS_MODE = 'CR' AND VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -1 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -1 YEAR), IFNULL(VT.AMOUNT,0), 0) ) AS FY2_RECEIPT_AMOUNT,
                                    SUM( IF(VT.TRANS_MODE = 'DR' AND VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -1 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -1 YEAR), IFNULL(VT.AMOUNT,0), 0) ) AS FY2_PAYMENT_AMOUNT,

                                    -- SUM( IF(VT.TRANS_MODE = 'CR' AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO, IFNULL(VT.AMOUNT,0), 0) ) AS FY1_RECEIPT_AMOUNT,
                                    SUM( IF(VT.TRANS_MODE = 'DR' AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO, IFNULL(VT.AMOUNT,0), 0) ) AS FY1_PAYMENT_AMOUNT

                                    FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, VOUCHER_DATE FROM VOUCHER_MASTER_TRANS
                                            WHERE VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -5 YEAR) AND ?DATE_TO AND BRANCH_ID IN (?BRANCH_OFFICE_ID) AND 
                                            STATUS=1 AND VOUCHER_TYPE IN ('RC', 'PY') AND PROJECT_ID IN (?PROJECT_ID)) AS VMT
                                    INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID
                                                            AND VT.LOCATION_ID = VMT.LOCATION_ID  AND VT.LEDGER_ID IN (?LEDGER_ID)
                                    INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = VT.LEDGER_ID AND ML.GROUP_ID IN (?GROUP_ID) AND ML.LEDGER_ID IN (?LEDGER_ID)
                                    LEFT JOIN BRANCH_OFFICE BO ON BO.BRANCH_OFFICE_ID = VMT.BRANCH_ID
                                    WHERE ML.GROUP_ID NOT IN (12, 13, 14) AND ML.GROUP_ID IN (?GROUP_ID) AND ML.LEDGER_ID IN (?LEDGER_ID) GROUP BY VMT.BRANCH_ID, VT.lEDGER_ID";
                        break;
                    }
                case ReportSQLCommand.FinalAccounts.BranchIEYearWise:
                    {
                        query = @"SELECT BO.BRANCH_OFFICE_ID, BO.BRANCH_OFFICE_NAME,
                                    SUM(IF (FY6_AMOUNT>0, FY6_AMOUNT, 0)) AS FY6_INCOME_AMOUNT, ABS(SUM(IF (FY6_AMOUNT<0, FY6_AMOUNT, 0))) AS FY6_EXPENSE_AMOUNT,
                                    SUM(IF (FY5_AMOUNT>0, FY5_AMOUNT, 0)) AS FY5_INCOME_AMOUNT, ABS(SUM(IF (FY5_AMOUNT<0, FY5_AMOUNT, 0))) AS FY5_EXPENSE_AMOUNT,
                                    SUM(IF (FY4_AMOUNT>0, FY4_AMOUNT, 0)) AS FY4_INCOME_AMOUNT, ABS(SUM(IF (FY4_AMOUNT<0, FY4_AMOUNT, 0))) AS FY4_EXPENSE_AMOUNT,
                                    SUM(IF (FY3_AMOUNT>0, FY3_AMOUNT, 0)) AS FY3_INCOME_AMOUNT, ABS(SUM(IF (FY3_AMOUNT<0, FY3_AMOUNT, 0))) AS FY3_EXPENSE_AMOUNT,
                                    SUM(IF (FY2_AMOUNT>0, FY2_AMOUNT, 0)) AS FY2_INCOME_AMOUNT, ABS(SUM(IF (FY2_AMOUNT<0, FY2_AMOUNT, 0))) AS FY2_EXPENSE_AMOUNT,
                                    SUM(IF (FY1_AMOUNT>0, FY1_AMOUNT, 0)) AS FY1_INCOME_AMOUNT, ABS(SUM(IF (FY1_AMOUNT<0, FY1_AMOUNT, 0))) AS FY1_EXPENSE_AMOUNT

                                    FROM BRANCH_OFFICE BO LEFT JOIN ( SELECT VMT.BRANCH_ID, VT.lEDGER_ID,
                                                
                                                SUM(IF(VMT.VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -5 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -5 YEAR),  IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)), 0) ) AS FY6_AMOUNT,
                                                SUM(IF(VMT.VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -4 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -4 YEAR),  IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)), 0) ) AS FY5_AMOUNT,
                                                SUM(IF(VMT.VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -3 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -3 YEAR),  IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)), 0) ) AS FY4_AMOUNT,
                                                SUM(IF(VMT.VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -2 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -2 YEAR),  IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)), 0) ) AS FY3_AMOUNT,
                                                SUM(IF(VMT.VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -1 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -1 YEAR),  IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)), 0) ) AS FY2_AMOUNT,
                                                SUM(IF(VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO,  IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)), 0) ) AS FY1_AMOUNT

                                                FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, VOUCHER_DATE FROM VOUCHER_MASTER_TRANS
                                                        WHERE VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -5 YEAR) AND ?DATE_TO AND STATUS=1
                                                        AND BRANCH_ID IN (?BRANCH_OFFICE_ID) AND PROJECT_ID IN (?PROJECT_ID) ) AS VMT
                                                INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID
                                                                                AND VT.LOCATION_ID = VMT.LOCATION_ID
                                                INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = VT.LEDGER_ID AND ML.GROUP_ID NOT IN (12, 13, 14) 
                                                        AND ML.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID,?CONTRIBUTION_TO_PROVINCE_ID,?INTER_AC_FROM_TRANSFER_ID,?INTER_AC_TO_TRANSFER_ID)
                                                INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID AND LG.NATURE_ID IN (1, 2) AND LG.GROUP_ID NOT IN (12, 13, 14)

                                                WHERE ML.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID,?CONTRIBUTION_TO_PROVINCE_ID,?INTER_AC_FROM_TRANSFER_ID,?INTER_AC_TO_TRANSFER_ID) 
                                                    AND ML.GROUP_ID NOT IN (12, 13, 14) AND LG.NATURE_ID IN (1, 2)
                                                GROUP BY VMT.BRANCH_ID, VT.lEDGER_ID) AS IE ON IE.BRANCH_ID = BO.BRANCH_OFFICE_ID
                                    GROUP BY BO.BRANCH_OFFICE_ID;";
                        break;
                    }

                case ReportSQLCommand.FinalAccounts.BranchLocationIEYearWise:
                    {
                        query = @"SELECT BO.BRANCH_OFFICE_ID, BO.LOCATION_ID, BO.BRANCH_OFFICE_NAME, BO.LOCATION_NAME,
                                    SUM(IF (FY6_AMOUNT>0, FY6_AMOUNT, 0)) AS FY6_INCOME_AMOUNT, ABS(SUM(IF (FY6_AMOUNT<0, FY6_AMOUNT, 0))) AS FY6_EXPENSE_AMOUNT,
                                    SUM(IF (FY5_AMOUNT>0, FY5_AMOUNT, 0)) AS FY5_INCOME_AMOUNT, ABS(SUM(IF (FY5_AMOUNT<0, FY5_AMOUNT, 0))) AS FY5_EXPENSE_AMOUNT,
                                    SUM(IF (FY4_AMOUNT>0, FY4_AMOUNT, 0)) AS FY4_INCOME_AMOUNT, ABS(SUM(IF (FY4_AMOUNT<0, FY4_AMOUNT, 0))) AS FY4_EXPENSE_AMOUNT,
                                    SUM(IF (FY3_AMOUNT>0, FY3_AMOUNT, 0)) AS FY3_INCOME_AMOUNT, ABS(SUM(IF (FY3_AMOUNT<0, FY3_AMOUNT, 0))) AS FY3_EXPENSE_AMOUNT,
                                    SUM(IF (FY2_AMOUNT>0, FY2_AMOUNT, 0)) AS FY2_INCOME_AMOUNT, ABS(SUM(IF (FY2_AMOUNT<0, FY2_AMOUNT, 0))) AS FY2_EXPENSE_AMOUNT,
                                    SUM(IF (FY1_AMOUNT>0, FY1_AMOUNT, 0)) AS FY1_INCOME_AMOUNT, ABS(SUM(IF (FY1_AMOUNT<0, FY1_AMOUNT, 0))) AS FY1_EXPENSE_AMOUNT

                                    FROM (SELECT BO.BRANCH_OFFICE_ID, BO.BRANCH_OFFICE_NAME, BL.LOCATION_ID, BL.LOCATION_NAME
                                           FROM BRANCH_OFFICE BO INNER JOIN BRANCH_LOCATION BL ON BO.BRANCH_OFFICE_ID = BL.BRANCH_ID) BO
                                    INNER JOIN ( SELECT VMT.BRANCH_ID, VMT.LOCATION_ID, VT.LEDGER_ID,
                                                
                                         SUM(IF(VMT.VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -5 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -5 YEAR),  IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)), 0) ) AS FY6_AMOUNT,
                                         SUM(IF(VMT.VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -4 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -4 YEAR),  IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)), 0) ) AS FY5_AMOUNT,
                                         SUM(IF(VMT.VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -3 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -3 YEAR),  IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)), 0) ) AS FY4_AMOUNT,
                                         SUM(IF(VMT.VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -2 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -2 YEAR),  IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)), 0) ) AS FY3_AMOUNT,
                                         SUM(IF(VMT.VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -1 YEAR) AND DATE_ADD(?DATE_TO, INTERVAL -1 YEAR),  IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)), 0) ) AS FY2_AMOUNT,
                                         SUM(IF(VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO,  IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)), 0) ) AS FY1_AMOUNT

                                         FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, PROJECT_ID, VOUCHER_DATE FROM VOUCHER_MASTER_TRANS
                                                      WHERE VOUCHER_DATE BETWEEN DATE_ADD(?DATE_FROM, INTERVAL -5 YEAR) AND ?DATE_TO AND STATUS = 1
                                                      AND BRANCH_ID IN (?BRANCH_OFFICE_ID)) AS VMT
                                         INNER JOIN PROJECT_BRANCH PB ON PB.BRANCH_ID = VMT.BRANCH_ID AND PB.LOCATION_ID = VMT.LOCATION_ID AND PB.PROJECT_ID = VMT.PROJECT_ID
                                         INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID
                                                        AND VT.LOCATION_ID = VMT.LOCATION_ID
                                         INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = VT.LEDGER_ID AND ML.GROUP_ID NOT IN (12, 13, 14) 
                                                    AND ML.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID,?CONTRIBUTION_TO_PROVINCE_ID,?INTER_AC_FROM_TRANSFER_ID,?INTER_AC_TO_TRANSFER_ID)
                                         INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID AND LG.NATURE_ID IN (1, 2) AND LG.GROUP_ID NOT IN (12, 13, 14)

                                         WHERE ML.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID,?CONTRIBUTION_TO_PROVINCE_ID,?INTER_AC_FROM_TRANSFER_ID,?INTER_AC_TO_TRANSFER_ID) 
                                                    AND ML.GROUP_ID NOT IN (12, 13, 14) AND LG.NATURE_ID IN (1, 2)
                                         GROUP BY VMT.BRANCH_ID, VMT.LOCATION_ID, VT.lEDGER_ID) AS IE ON IE.BRANCH_ID = BO.BRANCH_OFFICE_ID AND IE.LOCATION_ID = BO.LOCATION_ID
                                    GROUP BY BO.BRANCH_OFFICE_ID, BO.LOCATION_ID";
                        break;
                    }

                case ReportSQLCommand.FinalAccounts.MonthWiseLedgerComparative:
                    {
                        query = "SELECT\n" +
                                "\n" +
                                " @OPAMT := IF(@PRVBNAME = BRANCH_OFFICE_NAME AND @PRVMNAME <> MONTH_NAME,\n" +
                                "    @OPAMT,\n" +
                                "    OP_AMT) AS FNL,\n" +
                                " MONTH_NAME,\n" +
                                " BRANCH_OFFICE_NAME,\n" +
                                " @PRVBNAME := BRANCH_OFFICE_NAME,\n" +
                                " @PRVMNAME := MONTH_NAME,\n" +
                                " RECEIPT,\n" +
                                " PAYMENT,\n" +
                                " ((@OPAMT + RECEIPT) - PAYMENT) AS AMOUNT,\n" +
                                " @OPAMT := (@OPAMT + RECEIPT) - PAYMENT\n" +
                                "  FROM (SELECT SUM(RECEIPT) AS RECEIPT,\n" +
                                "               SUM(PAYMENT) AS PAYMENT,\n" +
                                "               BRANCH_OFFICE_NAME,\n" +
                                "               MONTH_NAME,\n" +
                                "               OP_AMT,\n" +
                                "               MONTH_YEAR\n" +
                                "\n" +
                                "          FROM (SELECT YEAR(MONTH_YEAR) AS 'YEAR',\n" +
                                "                       MONTH(MONTH_YEAR) AS 'MONTH',\n" +
                                "                       CONCAT(LEFT(MONTHNAME(MONTH_YEAR), 3),\n" +
                                "                              '-',\n" +
                                "                              YEAR(MONTH_YEAR)) AS MONTH_NAME,\n" +
                                "                       MONTH_YEAR,\n" +
                                "                       VOUCHER_DATE,\n" +
                                "                       CASE\n" +
                                "                         WHEN MONTH(MONTH_YEAR) = MONTH(VOUCHER_DATE) THEN\n" +
                                "                          RECEIPT\n" +
                                "                         ELSE\n" +
                                "                          0\n" +
                                "                       END AS RECEIPT,\n" +
                                "                       CASE\n" +
                                "                         WHEN MONTH(MONTH_YEAR) = MONTH(VOUCHER_DATE) THEN\n" +
                                "                          PAYMENT\n" +
                                "                         ELSE\n" +
                                "                          0\n" +
                                "                       END AS PAYMENT,\n" +
                                "                       OP_AMT,\n" +
                                "                       BRANCH_OFFICE_NAME,\n" +
                                "                       BRANCH_PART_CODE AS BRANCH_OFFICE_CODE,\n" +
                                "                       BRANCH_ID\n" +
                                "\n" +
                                "                  FROM (SELECT *\n" +
                                "                          FROM (SELECT *\n" +
                                "                                  FROM (SELECT (?DATE_FROM - INTERVAL\n" +
                                "                                                DAYOFMONTH(?DATE_FROM) - 1 DAY) +\n" +
                                "                                               INTERVAL NO_OF_MONTH MONTH AS MONTH_YEAR,\n" +
                                "                                               NO_OF_MONTH\n" +
                                "                                          FROM (SELECT @rownum := @rownum + 1 AS NO_OF_MONTH\n" +
                                "                                                  FROM (SELECT 1 UNION\n" +
                                "                                                                SELECT 2 UNION\n" +
                                "                                                                        SELECT 3 UNION\n" +
                                "                                                                                SELECT 4\n" +
                                "\n" +
                                "\n" +
                                "\n" +
                                "\n" +
                                "                                                        ) AS T1,\n" +
                                "                                                       (SELECT 1 UNION\n" +
                                "                                                                SELECT 2 UNION\n" +
                                "                                                                        SELECT 3 UNION\n" +
                                "                                                                                SELECT 4\n" +
                                "\n" +
                                "\n" +
                                "\n" +
                                "\n" +
                                "                                                        ) AS T2,\n" +
                                "                                                       (SELECT 1 UNION\n" +
                                "                                                                SELECT 2 UNION\n" +
                                "                                                                        SELECT 3 UNION\n" +
                                "                                                                                SELECT 4\n" +
                                "\n" +
                                "\n" +
                                "\n" +
                                "\n" +
                                "                                                        ) AS T3,\n" +
                                "                                                       (SELECT @rownum := -1) AS T0) D1) D2\n" +
                                "                                 WHERE D2.MONTH_YEAR BETWEEN ?DATE_FROM  AND ?DATE_TO) AS T1\n" +
                                "\n" +
                                "                          JOIN (SELECT VMT.VOUCHER_TYPE,\n" +
                                "                                      VMT.VOUCHER_DATE,\n" +
                                "                                      IF(VOUCHER_TYPE IN ('RC') OR\n" +
                                "                                         (VOUCHER_TYPE = 'CN' AND\n" +
                                "                                         TRANS_MODE = 'DR'),\n" +
                                "                                         AMOUNT,\n" +
                                "                                         0) AS RECEIPT,\n" +
                                "                                      IF(VOUCHER_TYPE IN ('PY') OR\n" +
                                "                                         (VOUCHER_TYPE = 'CN' AND\n" +
                                "                                         TRANS_MODE = 'CR'),\n" +
                                "                                         AMOUNT,\n" +
                                "                                         0) AS PAYMENT,\n" +
                                "                                      OP_AMT,\n" +
                                "                                      VT.TRANS_MODE,\n" +
                                "                                      VMT.BRANCH_ID,\n" +
                                "                                      BO.BRANCH_OFFICE_CODE,\n" +
                                "                                      BO.BRANCH_OFFICE_NAME,\n" +
                                "                                      BRANCH_PART_CODE\n" +
                                "                                FROM (SELECT BRANCH_ID, LOCATION_ID, VOUCHER_ID, VOUCHER_DATE, VOUCHER_TYPE FROM VOUCHER_MASTER_TRANS\n" +
                                "                                         WHERE VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND STATUS=1) AS VMT\n" +
                                "                                INNER JOIN VOUCHER_TRANS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND\n" +
                                "                                         VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "                                INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = VT.LEDGER_ID AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "                                INNER JOIN BRANCH_OFFICE BO ON BO.BRANCH_OFFICE_ID = VT.BRANCH_ID\n" +
                                "                                INNER JOIN (SELECT SUM(DR) AS RECEIPT,\n" +
                                "                                                  SUM(CR) AS PAYMENT,\n" +
                                "                                                  CASE\n" +
                                "                                                    WHEN SUM(DR) > SUM(CR) THEN\n" +
                                "                                                     SUM(DR) - SUM(CR)\n" +
                                "                                                    ELSE\n" +
                                "                                                     - (SUM(CR) - SUM(DR))\n" +
                                "                                                  END AS OP_AMT,\n" +
                                "                                                  BRANCH_ID\n" +
                                "\n" +
                                "                                             FROM (SELECT IF(TRANS_MODE = 'DR',\n" +
                                "                                                             SUM(AMOUNT),\n" +
                                "                                                             0) AS DR,\n" +
                                "                                                          IF(TRANS_MODE = 'CR',\n" +
                                "                                                             SUM(AMOUNT),\n" +
                                "                                                             0) AS CR,\n" +
                                "                                                          LB.BRANCH_ID\n" +
                                "                                                    FROM LEDGER_BALANCE LB\n" +
                                "                                                    INNER JOIN (SELECT MAX(BALANCE_DATE) AS BAL_DATE,\n" +
                                "                                                                      BRANCH_ID AS BID\n" +
                                "                                                                 FROM LEDGER_BALANCE\n" +
                                "                                                                WHERE LEDGER_ID IN (?LEDGER_ID)\n" +
                                "                                                                  AND BALANCE_DATE <?DATE_FROM\n" +
                                "                                                                GROUP BY BRANCH_ID) AS TT1\n" +
                                "                                                       ON LB.BRANCH_ID = TT1.BID\n" +
                                "                                                      AND LB.BALANCE_DATE = TT1.BAL_DATE\n" +
                                "                                                      AND LEDGER_ID IN (?LEDGER_ID)\n" +
                                "                                                    GROUP BY LB.BRANCH_ID, TRANS_MODE) AS OPBAL\n" +
                                "                                            GROUP BY BRANCH_ID) AS OP1\n" +
                                "                                   ON VMT.BRANCH_ID = OP1.BRANCH_ID\n" +
                                "                                  AND VT.BRANCH_ID = OP1.BRANCH_ID\n" +
                                "                                WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM  AND ?DATE_TO\n" +
                                "                                  AND VT.LEDGER_ID IN (?LEDGER_ID)) AS T) AS T1) AS FNL\n" +
                                "       WHERE RECEIPT > 0 OR PAYMENT > 0\n" +
                                "       GROUP BY BRANCH_ID, YEAR(VOUCHER_DATE), MONTH(VOUCHER_DATE), YEAR(MONTH_YEAR), MONTH(MONTH_YEAR)) AS FINALSM,\n" +
                                "       (SELECT @OPAMT := 0) AS X,\n" +
                                "       (SELECT @PRVBNAME := NULL) AS Y,\n" +
                                "       (SELECT @PRVMNAME := NULL) AS Z\n" +
                                " ORDER BY BRANCH_OFFICE_NAME, YEAR(MONTH_YEAR), MONTH(MONTH_YEAR)";

                        break;
                    }
            }
            return query;
        }
    }

    public class GeneralateReports
    {
        string query = string.Empty;
        public string GetGeneralateSQL(ReportSQLCommand.Generalate queryId)
        {
            switch (queryId)
            {
                #region BalanceShett

                case ReportSQLCommand.Generalate.BalanceSheet:
                    {
                        //For Unmapped Asset and Lia LEdgers (-1, -2 )
                        query = @"SELECT CON_LEDGER_ID, PARENT_CON_CODE, CON_CODE, MASTER_NAME, CON_LEDGER_NAME, SUM(OP_AMOUNT) AS OP_AMOUNT,
                                       ( IF(?INCLUDE_OP_BALANCE=1, SUM(AMOUNT_ACTUAL) +  IF(CON_CODE LIKE '%A%', SUM(IFNULL(OP_AMOUNT,0)), -SUM(IFNULL(OP_AMOUNT,0))) , SUM(AMOUNT_ACTUAL))  ) AS AMOUNT_ACTUAL
                                  FROM (SELECT CL.CON_LEDGER_ID,  -- IF(CL.CON_LEDGER_ID IS NULL, IF(LG.NATURE_ID = 3, -1,-2), CL.CON_LEDGER_ID) AS CON_LEDGER_ID,
                                               CL1.CON_LEDGER_CODE AS PARENT_CON_CODE,
                                               CL.CON_LEDGER_CODE AS CON_CODE,
                                               CONCAT(CL1.CON_LEDGER_CODE, ' ', CL1.CON_LEDGER_NAME) AS MASTER_NAME,
                                               CONCAT(CL.CON_LEDGER_CODE, ' ', CL.CON_LEDGER_NAME) AS CON_LEDGER_NAME,
                                               0 AS OP_AMOUNT,
                                               SUM(IE.AMOUNT) AS AMOUNT_ACTUAL
                                          FROM (SELECT MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, VT.LEDGER_ID, SUM( IF(VT.TRANS_MODE = 'CR', -IFNULL(VT.AMOUNT,0), IFNULL(VT.AMOUNT,0)) ) AS AMOUNT
                                    FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, PROJECT_ID, VOUCHER_TYPE, VOUCHER_DATE, STATUS
                                                      FROM VOUCHER_MASTER_TRANS WHERE STATUS = 1 AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND PROJECT_ID IN (?PROJECT_ID)
                                                      {AND BRANCH_ID IN (?BRANCH_ID)}) AS VMT
                                    INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID  {AND VT.BRANCH_ID IN (?BRANCH_ID)}
                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND MP.PROJECT_ID IN (?PROJECT_ID)
                                    -- INNER JOIN PROJECT_BRANCH PB ON PB.PROJECT_ID = MP.PROJECT_ID AND PB.BRANCH_ID = VMT.BRANCH_ID
                                    WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND MP.PROJECT_ID IN (?PROJECT_ID) AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)  {AND VMT.BRANCH_ID IN (?BRANCH_ID)}
                                        AND VMT.VOUCHER_TYPE IN ('RC', 'PY', 'JN') AND VMT.STATUS=1 AND 
                                        VT.LEDGER_ID NOT IN (?INTER_AC_FROM_TRANSFER_ID, ?INTER_AC_TO_TRANSFER_ID, ?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                                    GROUP BY MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, VT.LEDGER_ID) AS IE
                                         INNER JOIN MASTER_LEDGER ML
                                            ON ML.LEDGER_ID = IE.LEDGER_ID
                                         INNER JOIN MASTER_LEDGER_GROUP LG
                                            ON LG.GROUP_ID = ML.GROUP_ID
                                          LEFT JOIN CONGREGATION_LEDGER_MAP CLM
                                            ON IE.LEDGER_ID = CLM.LEDGER_ID
                                           AND CLM.PROJECT_CATOGORY_GROUP_ID = 2
                                          LEFT JOIN CONGREGATION_LEDGER AS CL
                                            ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID 
                                          LEFT JOIN CONGREGATION_LEDGER AS CL1
                                            ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID
                                         WHERE LG.NATURE_ID IN (3, 4)
                                           AND LG.GROUP_ID NOT IN (12, 13, 14) AND CL.CON_LEDGER_CODE NOT IN ('A.4.1.1', 'A.4.1.2')
                                         GROUP BY CL.CON_LEDGER_ID -- IF(CL.CON_LEDGER_ID IS NULL, IF(LG.NATURE_ID = 3, -1,-2), CL.CON_LEDGER_ID)
                                        UNION ALL

                                        SELECT CL.CON_LEDGER_ID,
                                               CL1.CON_LEDGER_CODE AS PARENT_CON_CODE,
                                               CL.CON_LEDGER_CODE AS CON_CODE,
                                               CONCAT(CL1.CON_LEDGER_CODE, ' ', CL1.CON_LEDGER_NAME) AS MASTER_NAME,
                                                CONCAT(CL.CON_LEDGER_CODE, ' ', CL.CON_LEDGER_NAME) AS CON_LEDGER_NAME,
                                               MBSC.AMOUNT AS OP_AMOUNT,
                                               0 AS AMOUNT_ACTUAL
                                          FROM MASTER_BALANCE_SHEET_CLOSING AS MBSC
                                          LEFT JOIN CONGREGATION_LEDGER AS CL
                                            ON CL.CON_LEDGER_ID = MBSC.CON_LEDGER_ID
                                          LEFT JOIN CONGREGATION_LEDGER AS CL1
                                            ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID
                                         WHERE MBSC.IS_CB = 0 AND ACC_YEAR_FROM = ?DATE_AS_ON) AS GEN_LEDGER
                                 GROUP BY GEN_LEDGER.CON_LEDGER_ID
                                UNION ALL

                                SELECT 0 AS CON_LEDGER_ID,
                                       'A.4.1' AS PARENT_CON_CODE,
                                       IF(CON_LEDGER_NAME ='A.4.1.1 Cash', 'A.4.1.1', 'A.4.1.2') AS CON_CODE,
                                       CB.MASTER_NAME,
                                       CB.CON_LEDGER_NAME,
                                       OP_AMOUNT,
                                       SUM(CB.AMOUNT_ACTUAL) AS AMOUNT_ACTUAL
                                  FROM (SELECT MBSC.AMOUNT AS OP_AMOUNT,
                                               IF(ML.GROUP_ID = 13, 13, 12) AS GROUP_ID,
                                               'A.4.1 Available funds' AS MASTER_NAME,
                                               CASE
                                                 WHEN ML.GROUP_ID = 13 THEN
                                                  'A.4.1.1 Cash'
                                                 WHEN ML.GROUP_ID = 12 THEN
                                                  'A.4.1.2 Bank accounts'
                                                 ELSE
                                                  'A.4.1.2 Bank accounts'
                                               END AS CON_LEDGER_NAME,
                                               SUM(IE.AMOUNT) AS AMOUNT_ACTUAL
                                          FROM (SELECT LB.LEDGER_ID,
                                                       SUM(IF(LB.TRANS_MODE = 'CR', -LB.AMOUNT, LB.AMOUNT)) AS AMOUNT
                                                  FROM LEDGER_BALANCE AS LB
                                                 INNER JOIN (SELECT LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                                                          FROM LEDGER_BALANCE LBA
                                                          INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                                                          WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) {AND LBA.BRANCH_ID IN (?BRANCH_ID)} AND P.PROJECT_ID IN (?PROJECT_ID) 
                                                          AND LBA.BALANCE_DATE <= ?DATE_TO
                                                          GROUP BY LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                                                            ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                                                 WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE
                                                 GROUP BY LB.LEDGER_ID) AS IE
                                         INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID
                                         INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID
                                          LEFT JOIN (SELECT CON_LEDGER_ID, IF(IS_CB = 1, 12, 13) AS GROUP_ID, AMOUNT , ACC_YEAR_FROM
                                                   FROM MASTER_BALANCE_SHEET_CLOSING WHERE IS_CB <> 0) AS MBSC ON MBSC.GROUP_ID = IF(ML.GROUP_ID = 13, 13, 12) AND MBSC.ACC_YEAR_FROM = ?DATE_AS_ON
                                         WHERE LG.NATURE_ID IN (3, 4) AND LG.GROUP_ID IN (12, 13, 14)
                                         GROUP BY ML.GROUP_ID) AS CB
                                 GROUP BY CB.GROUP_ID;";


                        //On 11/11/2020, Records from Ledger Ledger Balance
                        //(SELECT PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID, SUM(IF(LB.TRANS_MODE = 'CR', -LB.AMOUNT, LB.AMOUNT)) AS AMOUNT
                        //                          FROM LEDGER_BALANCE AS LB
                        //                         INNER JOIN (SELECT P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                                      FROM LEDGER_BALANCE LBA
                        //                                     INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                                     WHERE 1 = 1
                        //                                       AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <= ?DATE_TO
                        //                                       AND LBA.LEDGER_ID NOT IN (?INTER_AC_TRANSFER_ID, ?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                                     GROUP BY P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                            ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //                         WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE
                        //                         GROUP BY PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID
                        //                        UNION ALL
                        //                        SELECT PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID, -SUM(IF(LB.TRANS_MODE = 'CR', -LB.AMOUNT, LB.AMOUNT)) AS AMOUNT
                        //                          FROM LEDGER_BALANCE AS LB
                        //                         INNER JOIN (SELECT P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                                       FROM LEDGER_BALANCE LBA
                        //                                      INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                                      WHERE 1 = 1
                        //                                        AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <?DATE_FROM
                        //                                        AND LBA.LEDGER_ID NOT IN (?INTER_AC_TRANSFER_ID, ?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                                      GROUP BY P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                            ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID 
                        //                            WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE
                        //                         GROUP BY PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID) AS IE

                        //                        query = @"SELECT CL.CON_LEDGER_ID, CL1.CON_LEDGER_CODE AS PARENT_CON_CODE, CL.CON_LEDGER_CODE AS CON_CODE, IFNULL(MBSC.AMOUNT,0) AS OP_AMOUNT, CONCAT(CL1.CON_LEDGER_CODE, ' ', CL1.CON_LEDGER_NAME) AS MASTER_NAME, 
                        //                                        CONCAT(CL.CON_LEDGER_CODE, ' ', CL.CON_LEDGER_NAME) AS CON_LEDGER_NAME, 
                        //                                        ( IF(?INCLUDE_OP_BALANCE=1, SUM(IE.AMOUNT) +  IF(CL1.CON_LEDGER_CODE LIKE '%A%', IFNULL(MBSC.AMOUNT,0), -IFNULL(MBSC.AMOUNT,0)) , SUM(IE.AMOUNT))  ) AS AMOUNT_ACTUAL
                        //                                        FROM
                        //                                        (SELECT LB.LEDGER_ID,
                        //                                        SUM(IF(LB.TRANS_MODE ='CR', -LB.AMOUNT, LB.AMOUNT)) AS AMOUNT
                        //                                        FROM LEDGER_BALANCE AS LB
                        //                                        INNER JOIN (SELECT LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                                                  FROM LEDGER_BALANCE LBA
                        //                                                  INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                                                  WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <=?DATE_TO AND LBA.LEDGER_ID NOT IN (?INTER_AC_TRANSFER_ID, ?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                                                  GROUP BY LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                                                  ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //                                        WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY LB.LEDGER_ID
                        //                                        UNION ALL
                        //                                        SELECT LB.LEDGER_ID,
                        //                                        -SUM(IF(LB.TRANS_MODE ='CR', -LB.AMOUNT, LB.AMOUNT)) AS AMOUNT
                        //                                        FROM LEDGER_BALANCE AS LB
                        //                                        INNER JOIN (SELECT LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                                                  FROM LEDGER_BALANCE LBA
                        //                                                  INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                                                  WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <?DATE_FROM AND LBA.LEDGER_ID NOT IN (?INTER_AC_TRANSFER_ID, ?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                                                  GROUP BY LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                                                  ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //                                        WHERE LB.BRANCH_ID  = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY LB.LEDGER_ID) AS IE
                        //                                        INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID
                        //                                        INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID
                        //                                        -- INNER JOIN MASTER_PROJECT_CATOGORY MPC ON MPC.PROJECT_CATOGORY_ID = IE.PROJECT_CATEGORY_ID
                        //                                        -- LEFT JOIN MASTER_PROJECT_CATOGORY_GROUP MPCG ON MPCG.PROJECT_CATOGORY_GROUP_ID = MPC.PROJECT_CATOGORY_GROUP_ID
                        //                                        LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = IE.LEDGER_ID AND CLM.PROJECT_CATOGORY_GROUP_ID = 2
                        //                                        LEFT JOIN CONGREGATION_LEDGER AS CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                        //                                        LEFT JOIN CONGREGATION_LEDGER AS CL1 ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID
                        //                                        LEFT JOIN MASTER_BALANCE_SHEET_CLOSING AS MBSC ON MBSC.CON_lEDGER_ID = CL.CON_LEDGER_ID AND MBSC.IS_CB=0
                        //                                        WHERE LG.NATURE_ID IN (3,4) AND LG.GROUP_ID NOT IN (12, 13, 14)
                        //                                        GROUP BY CL.CON_LEDGER_ID
                        //                                        UNION ALL
                        //                                        SELECT 0 AS CON_LEDGER_ID, 'A.4.1' AS PARENT_CON_CODE, 'A.4.1.1' AS CON_CODE, 
                        //                                            OP_AMOUNT, CB.MASTER_NAME, CB.CON_LEDGER_NAME,SUM(CB.AMOUNT_ACTUAL) AS AMOUNT_ACTUAL 
                        //                                            FROM (SELECT MBSC.AMOUNT AS OP_AMOUNT, IF(ML.GROUP_ID=13, 13, 12) AS GROUP_ID, 'A.4.1 Available funds' AS MASTER_NAME, 
                        //                                            CASE WHEN ML.GROUP_ID = 13 THEN 'A.4.1.1 Cash' WHEN ML.GROUP_ID = 12 THEN 'A.4.1.1 Bank' ELSE 'A.4.1.2 Bank' END AS CON_LEDGER_NAME, 
                        //                                            SUM(IE.AMOUNT) AS AMOUNT_ACTUAL
                        //                                            FROM
                        //                                            (SELECT LB.LEDGER_ID,
                        //                                            SUM(IF(LB.TRANS_MODE ='CR', -LB.AMOUNT, LB.AMOUNT)) AS AMOUNT
                        //                                            FROM LEDGER_BALANCE AS LB
                        //                                            INNER JOIN (SELECT LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                                                      FROM LEDGER_BALANCE LBA
                        //                                                      INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                                                      WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <=?DATE_TO
                        //                                                      GROUP BY LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                                                      ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //                                            WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY LB.LEDGER_ID) AS IE
                        //                                            INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID
                        //                                            INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID 
                        //                                            LEFT JOIN (SELECT CON_LEDGER_ID, IF(IS_CB=1, 12, 13) AS GROUP_ID, AMOUNT
                        //                                            FROM MASTER_BALANCE_SHEET_CLOSING WHERE IS_CB<>0) AS MBSC ON MBSC.GROUP_ID = IF(ML.GROUP_ID=13, 13, 12)
                        //                                            WHERE LG.NATURE_ID IN (3,4) AND LG.GROUP_ID IN (12, 13, 14) GROUP BY ML.GROUP_ID
                        //                                            ) AS CB GROUP BY CB.GROUP_ID ";

                        //query = "SELECT CLP.CON_LEDGER_NAME AS MASTER_NAME, CL.CON_LEDGER_NAME, SUM(AMOUNT_ACTUAL) AS AMOUNT_ACTUAL\n" +
                        //           "FROM (SELECT ML.LEDGER_ID, SUM( IF(TRANS_MODE = 'CR', -IFNULL(LB.AMOUNT,0), IFNULL(LB.AMOUNT,0)) ) AMOUNT_ACTUAL\n" +
                        //            "FROM (\n" +
                        //             "SELECT LB1.BALANCE_DATE, LB1.PROJECT_ID,LB1.BRANCH_ID, LB1.LEDGER_ID, LB1.AMOUNT, LB1.TRANS_MODE\n" +
                        //                "FROM LEDGER_BALANCE AS LB1\n" +
                        //                "LEFT JOIN (SELECT LBA.PROJECT_ID, LBA.LEDGER_ID,LBA.BRANCH_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //                      "FROM LEDGER_BALANCE LBA\n" +
                        //                      "WHERE 1 = 1 AND LBA.BALANCE_DATE <=?DATE_TO AND LBA.PROJECT_ID IN (?PROJECT_ID) AND LBA.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //                      "GROUP BY LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB2\n" +
                        //                "ON LB1.BRANCH_ID = LB2.BRANCH_ID AND LB1.PROJECT_ID = LB2.PROJECT_ID AND LB1.LEDGER_ID = LB2.LEDGER_ID AND LB1.BRANCH_ID = LB2.BRANCH_ID\n" +
                        //                "WHERE LB1.PROJECT_ID IN (?PROJECT_ID) AND LB1.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND LB1.BALANCE_DATE = LB2.BAL_DATE) LB\n" +
                        //            "INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = LB.LEDGER_ID\n" +
                        //            "INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID\n" +
                        //            "WHERE ML.GROUP_ID NOT IN (12,13,14) AND LG.NATURE_ID IN (3,4)  AND LB.PROJECT_ID IN (?PROJECT_ID) AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID) \n" +
                        //            "GROUP BY LEDGER_ID) BAL\n" +
                        //            "LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = BAL.LEDGER_ID\n" +
                        //            "LEFT JOIN CONGREGATION_LEDGER AS CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID\n" +
                        //            "LEFT JOIN CONGREGATION_LEDGER AS CLP ON CLP.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID\n" +
                        //            "GROUP BY CL.CON_LEDGER_ID";
                        break;
                    }

                case ReportSQLCommand.Generalate.BalanceSheetDetailByConLedger:
                    {
                        //For Unmapped Asset and Lia LEdgers (-1, -2 )
                        query = @"SELECT IE.CUSTOMERID,IE.BRANCH_ID, MIP.SOCIETYNAME, IF(CLM.CON_LEDGER_ID IS NULL, IF(LG.NATURE_ID = 3, -1,-2), CLM.CON_LEDGER_ID) AS CON_LEDGER_ID, CL.CON_LEDGER_CODE, SUM(IE.AMOUNT) AMOUNT
                                    FROM (SELECT MP.CUSTOMERID, VMT.BRANCH_ID, VT.LEDGER_ID, SUM( IF(VT.TRANS_MODE = 'CR', -IFNULL(VT.AMOUNT,0), IFNULL(VT.AMOUNT,0)) ) AS AMOUNT
                                    FROM VOUCHER_MASTER_TRANS AS VMT
                                    INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID 
                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) {AND VMT.BRANCH_ID IN (?BRANCH_ID)} AND MP.PROJECT_ID IN (?PROJECT_ID)
                                    -- INNER JOIN PROJECT_BRANCH PB ON PB.PROJECT_ID = MP.PROJECT_ID AND PB.BRANCH_ID = VMT.BRANCH_ID
                                    WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND MP.PROJECT_ID IN (?PROJECT_ID) AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) {AND VMT.BRANCH_ID IN (?BRANCH_ID)} AND 
                                      VMT.VOUCHER_TYPE IN ('RC', 'PY', 'JN') AND VMT.STATUS=1 AND 
                                        VT.LEDGER_ID NOT IN (?INTER_AC_FROM_TRANSFER_ID, ?INTER_AC_TO_TRANSFER_ID, ?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                                    GROUP BY MP.CUSTOMERID, VT.LEDGER_ID) AS IE
                                    INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID
                                    INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID
                                    LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = IE.LEDGER_ID AND CLM.PROJECT_CATOGORY_GROUP_ID = 2
                                    LEFT JOIN CONGREGATION_LEDGER CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                                    INNER JOIN MASTER_INSTI_PERFERENCE MIP ON MIP.CUSTOMERID = IE.CUSTOMERID
                                    WHERE LG.NATURE_ID IN (3,4) AND IE.CUSTOMERID IN (?LEGAL_ENTITY_ID) {AND IE.BRANCH_ID IN (?BRANCH_ID)} AND  LG.GROUP_ID NOT IN (12, 13, 14)
                                    GROUP BY IE.CUSTOMERID, IF(CLM.CON_LEDGER_ID IS NULL, IF(LG.NATURE_ID = 3, -1,-2), CLM.CON_LEDGER_ID); ";

                        //On 11/11/2020, From Ledger Balance
                        //(SELECT CUSTOMERID, LB.LEDGER_ID,
                        //        SUM(IF(LB.TRANS_MODE ='CR', -LB.AMOUNT, LB.AMOUNT)) AS AMOUNT
                        //        FROM LEDGER_BALANCE AS LB
                        //        INNER JOIN (SELECT P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                  FROM LEDGER_BALANCE LBA
                        //                  INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                  WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <=?DATE_TO  AND LBA.LEDGER_ID NOT IN (?INTER_AC_TRANSFER_ID, ?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)  
                        //                  GROUP BY P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                  ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //        WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY CUSTOMERID, LB.LEDGER_ID
                        //        UNION ALL
                        //        SELECT CUSTOMERID, LB.LEDGER_ID,
                        //        -SUM(IF(LB.TRANS_MODE ='CR', -LB.AMOUNT, LB.AMOUNT)) AS AMOUNT
                        //        FROM LEDGER_BALANCE AS LB
                        //        INNER JOIN (SELECT P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                  FROM LEDGER_BALANCE LBA
                        //                  INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                  WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <?DATE_FROM AND LBA.LEDGER_ID NOT IN (?INTER_AC_TRANSFER_ID, ?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                  GROUP BY P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                    ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //        WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY CUSTOMERID, LB.LEDGER_ID) AS IE
                        break;
                    }
                case ReportSQLCommand.Generalate.BalanceSheetDetailByHOLedger:
                    {
                        //For Unmapped Asset and Lia LEdgers (-1, -2 )
                        query = @"SELECT IE.LEDGER_ID, ML.LEDGER_NAME AS SOCIETYNAME, IF(CLM.CON_LEDGER_ID IS NULL, IF(LG.NATURE_ID = 3, -1,-2), CLM.CON_LEDGER_ID) AS CON_LEDGER_ID, CL.CON_LEDGER_CODE, SUM(IE.AMOUNT) AMOUNT
                                    FROM (SELECT VT.LEDGER_ID, SUM( IF(VT.TRANS_MODE = 'CR', -IFNULL(VT.AMOUNT,0), IFNULL(VT.AMOUNT,0)) ) AS AMOUNT
                                    FROM VOUCHER_MASTER_TRANS AS VMT
                                    INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID 
                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) {AND VT.BRANCH_ID IN (?BRANCH_ID)} AND MP.PROJECT_ID IN (?PROJECT_ID)
                                    -- INNER JOIN PROJECT_BRANCH PB ON PB.PROJECT_ID = MP.PROJECT_ID AND PB.BRANCH_ID = VMT.BRANCH_ID
                                    WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND MP.PROJECT_ID IN (?PROJECT_ID) AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) {AND VMT.BRANCH_ID IN (?BRANCH_ID)}
                                        AND VMT.VOUCHER_TYPE IN ('RC', 'PY', 'JN') AND VMT.STATUS=1 
                                            AND VT.LEDGER_ID NOT IN (?INTER_AC_FROM_TRANSFER_ID, ?INTER_AC_TO_TRANSFER_ID, ?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                                    GROUP BY VT.LEDGER_ID) AS IE
                                    INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID
                                    INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID
                                    LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = IE.LEDGER_ID AND CLM.PROJECT_CATOGORY_GROUP_ID = 2
                                    LEFT JOIN CONGREGATION_LEDGER CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                                    WHERE LG.NATURE_ID IN (3,4) AND LG.GROUP_ID NOT IN (12, 13, 14)
                                    GROUP BY IE.LEDGER_ID ORDER bY CLM.LEDGER_ID";

                        //On 11/11/2020, from Ledger Balance
                        //(SELECT LB.LEDGER_ID,
                        //            SUM(IF(LB.TRANS_MODE ='CR', -LB.AMOUNT, LB.AMOUNT)) AS AMOUNT
                        //            FROM LEDGER_BALANCE AS LB
                        //            INNER JOIN (SELECT LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                      FROM LEDGER_BALANCE LBA
                        //                      INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                      WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <=?DATE_TO  AND LBA.LEDGER_ID NOT IN (?INTER_AC_TRANSFER_ID, ?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                      GROUP BY LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                      ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //            WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY LB.LEDGER_ID
                        //            UNION ALL
                        //            SELECT LB.LEDGER_ID,
                        //            -SUM(IF(LB.TRANS_MODE ='CR', -LB.AMOUNT, LB.AMOUNT)) AS AMOUNT
                        //            FROM LEDGER_BALANCE AS LB
                        //            INNER JOIN (SELECT LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                      FROM LEDGER_BALANCE LBA
                        //                      INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                      WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <?DATE_FROM AND LBA.LEDGER_ID NOT IN (?INTER_AC_TRANSFER_ID, ?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                      GROUP BY LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                        ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //            WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY LB.LEDGER_ID) AS IE
                        break;
                    }

                case ReportSQLCommand.Generalate.GeneralateAbstract:
                    {
                        query = "SELECT MPCG.PROJECT_CATOGORY_GROUP_ID, CL.CON_LEDGER_ID, ML.LEDGER_ID, MPCG.PROJECT_CATOGORY_GROUP,\n" +
                            //"CONCAT(CONCAT(IFNULL(CL1.CON_LEDGER_CODE, ''), ' ', IF(CL1.CON_LEDGER_NAME IS NULL, ML.LEDGER_NAME, CL1.CON_LEDGER_NAME)), ' - ', MPCG.PROJECT_CATOGORY_GROUP) AS PARENT_GROUP,\n" +
                               "CONCAT(CONCAT(IFNULL(CL.CON_LEDGER_CODE, ''), ' ', IF(CL.CON_LEDGER_NAME IS NULL, ML.LEDGER_NAME, CL.CON_LEDGER_NAME)), ' - ', MPCG.PROJECT_CATOGORY_GROUP) AS LEDGER_GROUP1,\n" +
                               "CONCAT(IFNULL(CL.CON_LEDGER_CODE, ''), ' ', IF(CL.CON_LEDGER_NAME IS NULL, ML.LEDGER_NAME, CL.CON_LEDGER_NAME)) AS LEDGER_GROUP,\n" + //On 13/03/2024
                               "ML.LEDGER_NAME AS LEDGER_NAME, TRANS.AMOUNT_CR, TRANS.AMOUNT_DR, TRANS.AMOUNT_JV_CR, TRANS.AMOUNT_JV_DR,\n" +
                               "IF(MLG.NATURE_ID IN (2,4), TRANS.AMOUNT_JV_DR - TRANS.AMOUNT_JV_CR, AMOUNT_JV_CR- AMOUNT_JV_DR) AS JV_AMOUNT\n" +
                               " FROM (SELECT MP.PROJECT_CATEGORY_ID, VT.LEDGER_ID,\n" +
                               "SUM(IF( ( (VMT.VOUCHER_TYPE IN ('RC','PY') AND VT.TRANS_MODE ='CR') OR (VMT.VOUCHER_TYPE = 'JN' AND VMT.VOUCHER_SUB_TYPE = 'FD' AND VT.TRANS_MODE ='CR') ), IFNULL(VT.AMOUNT, 0), 0)) AS AMOUNT_CR,\n" +
                               "SUM(IF( ( (VMT.VOUCHER_TYPE IN ('RC','PY') AND VT.TRANS_MODE ='DR') OR (VMT.VOUCHER_TYPE IN ('JN','CN') AND VMT.VOUCHER_SUB_TYPE = 'FD' AND VT.TRANS_MODE ='DR') ), IFNULL(VT.AMOUNT, 0), 0)) AS AMOUNT_DR,\n" +
                               "SUM(IF( VMT.VOUCHER_TYPE = 'JN' AND VMT.VOUCHER_SUB_TYPE <> 'FD' AND VT.TRANS_MODE ='CR', IFNULL(VT.AMOUNT, 0), 0)) AS AMOUNT_JV_CR,\n" +
                               "SUM(IF( VMT.VOUCHER_TYPE = 'JN' AND VMT.VOUCHER_SUB_TYPE <> 'FD' AND VT.TRANS_MODE ='DR', IFNULL(VT.AMOUNT, 0), 0)) AS AMOUNT_JV_DR\n" +
                               "FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, PROJECT_ID, VOUCHER_TYPE, VOUCHER_SUB_TYPE, VOUCHER_DATE, STATUS\n" +
                               "     FROM VOUCHER_MASTER_TRANS WHERE STATUS = 1 AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                               "     AND PROJECT_ID IN (?PROJECT_ID) {AND BRANCH_ID IN (?BRANCH_ID)}) AS VMT\n" +
                               "INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID {AND VT.BRANCH_ID IN (?BRANCH_ID)} AND\n" +
                               " VT.LEDGER_ID NOT IN (?INTER_AC_FROM_TRANSFER_ID, ?INTER_AC_TO_TRANSFER_ID, ?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)\n" +
                               "INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                               "WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND MP.PROJECT_ID IN (?PROJECT_ID) AND  MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) {AND VMT.BRANCH_ID IN (?BRANCH_ID)} AND VMT.STATUS=1\n" +
                               "GROUP BY MP.PROJECT_CATEGORY_ID, VT.LEDGER_ID) AS TRANS\n" +
                               "INNER JOIN MASTER_LEDGER AS ML ON ML.LEDGER_ID = TRANS.LEDGER_ID\n" +
                               "INNER JOIN MASTER_LEDGER_GROUP AS MLG ON ML.GROUP_ID = MLG.GROUP_ID AND MLG.GROUP_ID NOT IN (?GROUP_ID)\n" +
                               "INNER JOIN MASTER_PROJECT_CATOGORY MPC ON MPC.PROJECT_CATOGORY_ID = TRANS.PROJECT_CATEGORY_ID\n" +
                               "LEFT JOIN MASTER_PROJECT_CATOGORY_GROUP MPCG ON MPCG.PROJECT_CATOGORY_GROUP_ID = MPC.PROJECT_CATOGORY_GROUP_ID\n" +
                               "LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = TRANS.LEDGER_ID AND IF(MLG.NATURE_ID IN (3,4),  CLM.PROJECT_CATOGORY_GROUP_ID=2, CLM.PROJECT_CATOGORY_GROUP_ID = MPCG.PROJECT_CATOGORY_GROUP_ID)\n" +
                               "LEFT JOIN CONGREGATION_LEDGER CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID AND CLM.LEDGER_ID = TRANS.LEDGER_ID";

                        //Version1 - 18/11/2020
                        //query = "SELECT MPCG.PROJECT_CATOGORY_GROUP_ID, CL.CON_LEDGER_ID, ML.LEDGER_ID, MPCG.PROJECT_CATOGORY_GROUP,\n" +
                        //       //"CONCAT(CONCAT(IFNULL(CL1.CON_LEDGER_CODE, ''), ' ', IF(CL1.CON_LEDGER_NAME IS NULL, ML.LEDGER_NAME, CL1.CON_LEDGER_NAME)), ' - ', MPCG.PROJECT_CATOGORY_GROUP) AS PARENT_GROUP,\n" +
                        //       "CONCAT(CONCAT(IFNULL(CL.CON_LEDGER_CODE, ''), ' ', IF(CL.CON_LEDGER_NAME IS NULL, ML.LEDGER_NAME, CL.CON_LEDGER_NAME)), ' - ', MPCG.PROJECT_CATOGORY_GROUP) AS LEDGER_GROUP,\n" +
                        //       "ML.LEDGER_NAME AS LEDGER_NAME, TRANS.AMOUNT_PERIOD \n" +
                        //       " FROM (SELECT MP.PROJECT_CATEGORY_ID, VT.LEDGER_ID, SUM(IFNULL(VT.AMOUNT, 0)) AS AMOUNT_PERIOD\n" +
                        //       "FROM VOUCHER_MASTER_TRANS AS VMT\n" +
                        //       "INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID\n" +
                        //       "INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //       //"INNER JOIN PROJECT_BRANCH PB ON PB.PROJECT_ID = MP.PROJECT_ID AND PB.BRANCH_ID = VMT.BRANCH_ID\n" +
                        //       "WHERE MP.PROJECT_ID IN (?PROJECT_ID) AND  MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND VMT.VOUCHER_DATE BETWEEN ?DATE_PROGRESS_FROM AND ?DATE_TO AND VMT.STATUS=1 AND \n" +
                        //       "( (VMT.VOUCHER_TYPE IN ('RC','PY') AND VT.TRANS_MODE =?TRANS_MODE) OR (VMT.VOUCHER_TYPE = 'JN' AND VMT.VOUCHER_SUB_TYPE = 'FD' AND VT.TRANS_MODE =?TRANS_MODE) )\n" +
                        //       "GROUP BY MP.PROJECT_CATEGORY_ID, VT.LEDGER_ID) AS TRANS\n" +
                        //       "INNER JOIN MASTER_LEDGER AS ML ON ML.LEDGER_ID = TRANS.LEDGER_ID\n" +
                        //       "INNER JOIN MASTER_LEDGER_GROUP AS MLG ON ML.GROUP_ID = MLG.GROUP_ID AND MLG.GROUP_ID NOT IN (?GROUP_ID)\n" +
                        //       "INNER JOIN MASTER_PROJECT_CATOGORY MPC ON MPC.PROJECT_CATOGORY_ID = TRANS.PROJECT_CATEGORY_ID\n" +
                        //       "LEFT JOIN MASTER_PROJECT_CATOGORY_GROUP MPCG ON MPCG.PROJECT_CATOGORY_GROUP_ID = MPC.PROJECT_CATOGORY_GROUP_ID\n" +
                        //       "LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = TRANS.LEDGER_ID AND IF(MLG.NATURE_ID IN (3,4),  CLM.PROJECT_CATOGORY_GROUP_ID=2, CLM.PROJECT_CATOGORY_GROUP_ID = MPCG.PROJECT_CATOGORY_GROUP_ID)\n" +
                        //       "LEFT JOIN CONGREGATION_LEDGER CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID AND CLM.LEDGER_ID = TRANS.LEDGER_ID";
                        //       //"LEFT JOIN CONGREGATION_LEDGER CL1 ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID";

                        //query = "SELECT CL.CON_LEDGER_ID, ML.LEDGER_ID, CONCAT(CL1.CON_LEDGER_CODE, ' ', CL1.CON_LEDGER_NAME) AS PARENT_GROUP,\n" +
                        //        "CONCAT(CL.CON_LEDGER_CODE, ' ', CL.CON_LEDGER_NAME) AS LEDGER_GROUP,\n" +
                        //        "ML.LEDGER_NAME AS LEDGER_NAME, TRANS.AMOUNT_PERIOD \n" +
                        //        " FROM (SELECT VT.LEDGER_ID,\n" +
                        //        "SUM(IFNULL(VT.AMOUNT, 0)) AS AMOUNT_PERIOD\n" +
                        //        "FROM VOUCHER_MASTER_TRANS AS VMT\n" +
                        //        "INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID\n" +
                        //        "           AND VT.LOCATION_ID = VMT.LOCATION_ID { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //        "INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }\n" +
                        //        "WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_PROGRESS_FROM AND ?DATE_TO AND VMT.STATUS=1 AND \n" +
                        //        "( (VMT.VOUCHER_TYPE IN ('RC','PY') AND VT.TRANS_MODE =?TRANS_MODE) OR (VMT.VOUCHER_TYPE = 'JN' AND VMT.VOUCHER_SUB_TYPE = 'FD' AND VT.TRANS_MODE =?TRANS_MODE) )\n" +
                        //        "AND VMT.PROJECT_ID IN (?PROJECT_ID) { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //        "{ AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) } GROUP BY VT.LEDGER_ID) AS TRANS\n" +
                        //        "INNER JOIN MASTER_LEDGER AS ML ON ML.LEDGER_ID = TRANS.LEDGER_ID\n" +
                        //        "INNER JOIN MASTER_LEDGER_GROUP AS MLG ON ML.GROUP_ID = MLG.GROUP_ID AND MLG.GROUP_ID NOT IN (?GROUP_ID)\n" +
                        //        "LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = TRANS.LEDGER_ID AND CLM.PROJECT_CATOGORY_GROUP_ID = 2\n" +
                        //        "LEFT JOIN CONGREGATION_LEDGER CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID\n" +
                        //        "LEFT JOIN CONGREGATION_LEDGER CL1 ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID";
                        break;
                    }
                case ReportSQLCommand.Generalate.GeneralateJournalLedgerVouchers:
                    {
                        query = @"SELECT MPCG.PROJECT_CATOGORY_GROUP_ID, CL.CON_LEDGER_ID, ML.LEDGER_ID, MPCG.PROJECT_CATOGORY_GROUP,
                                    CONCAT(CONCAT(IFNULL(CL.CON_LEDGER_CODE, ''), ' ', IF(CL.CON_LEDGER_NAME IS NULL, ML.LEDGER_NAME, CL.CON_LEDGER_NAME)), ' - ', MPCG.PROJECT_CATOGORY_GROUP) AS CON_LEDGER_NAME,
                                    ML.LEDGER_NAME AS LEDGER_NAME, TRANS.DEBIT_AMOUNT, TRANS.CREDIT_AMOUNT,
                                    IF(MN.NATURE_ID IN (2,4), TRANS.DEBIT_AMOUNT - TRANS.CREDIT_AMOUNT, TRANS.CREDIT_AMOUNT- TRANS.DEBIT_AMOUNT) AS AMOUNT
                                     FROM (SELECT MP.PROJECT_CATEGORY_ID, VT.LEDGER_ID,
                                    SUM( IF(TRANS_MODE='DR', VT.AMOUNT, 0) ) AS DEBIT_AMOUNT,
                                    SUM( IF(TRANS_MODE='CR', VT.AMOUNT, 0) ) AS CREDIT_AMOUNT
                                    FROM VOUCHER_MASTER_TRANS AS VMT
                                    INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID
                                    INNER JOIN MASTER_LEDGER AS ML ON ML.LEDGER_ID = VT.LEDGER_ID AND ML.GROUP_ID NOT IN (12,13,14)
                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID  AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND MP.PROJECT_ID IN (?PROJECT_ID) 
                                    -- INNER JOIN PROJECT_BRANCH PB ON PB.PROJECT_ID = MP.PROJECT_ID AND PB.BRANCH_ID = VMT.BRANCH_ID
                                    WHERE MP.PROJECT_ID IN (?PROJECT_ID) AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND VMT.STATUS=1
                                    AND VMT.VOUCHER_TYPE = 'JN' AND VMT.VOUCHER_SUB_TYPE <> 'FD' GROUP BY MP.PROJECT_CATEGORY_ID,  VT.LEDGER_ID) AS TRANS
                                    INNER JOIN MASTER_LEDGER AS ML ON ML.LEDGER_ID = TRANS.LEDGER_ID
                                    INNER JOIN MASTER_LEDGER_GROUP AS MLG ON ML.GROUP_ID = MLG.GROUP_ID AND MLG.GROUP_ID NOT IN (12,13,14)
                                    INNER JOIN MASTER_NATURE MN ON MN.NATURE_ID = MLG.NATURE_ID
                                    INNER JOIN MASTER_PROJECT_CATOGORY MPC ON MPC.PROJECT_CATOGORY_ID = TRANS.PROJECT_CATEGORY_ID
                                    LEFT JOIN MASTER_PROJECT_CATOGORY_GROUP MPCG ON MPCG.PROJECT_CATOGORY_GROUP_ID = MPC.PROJECT_CATOGORY_GROUP_ID
                                    LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = TRANS.LEDGER_ID AND IF(MLG.NATURE_ID IN (3,4),  CLM.PROJECT_CATOGORY_GROUP_ID=2, CLM.PROJECT_CATOGORY_GROUP_ID = MPCG.PROJECT_CATOGORY_GROUP_ID)
                                    LEFT JOIN CONGREGATION_LEDGER CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID AND CLM.LEDGER_ID = TRANS.LEDGER_ID";
                        break;
                    }
                case ReportSQLCommand.Generalate.GeneralateLedgerBalance:
                    {
                        query = @"SELECT CL.CON_LEDGER_CODE, CL.CON_LEDGER_ID, ML.LEDGER_ID, ML.LEDGER_CODE,  
                              CASE WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN LG.GROUP_CODE
                                  ELSE PG.GROUP_CODE END AS PARENT_GROUP_CODE,
                              IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,
                                 CASE WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN CONCAT(LG.GROUP_CODE)
                                 ELSE CONCAT(LG.GROUP_CODE) END,LG.GROUP_CODE) AS GROUP_CODE, 
                              CASE WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN LG.LEDGER_GROUP
                                 ELSE PG.LEDGER_GROUP END AS PARENT_GROUP,
                              IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,
                                CASE WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN CONCAT(LG.LEDGER_GROUP)
                                ELSE CONCAT('   ',LG.LEDGER_GROUP) END,LG.LEDGER_GROUP) AS LEDGER_GROUP,
                              IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,
                                CASE WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN CONCAT('   ', ML.LEDGER_NAME)
                                ELSE CONCAT('      ', ML.LEDGER_NAME) END, ML.LEDGER_NAME) AS LEDGER_NAME, 
                              IFNULL(CL.CON_LEDGER_NAME, '--UnMapped Ledger Groups to Congregation--') AS CON_LEDGER_NAME,
                              IF (LG.NATURE_ID IN (1, 4),
                                SUM(IF(TRANS.TRANS_MODE ='CR', TRANS.AMOUNT, 0)) - SUM(IF(TRANS.TRANS_MODE ='DR', TRANS.AMOUNT, 0)),
                                SUM(IF(TRANS.TRANS_MODE ='DR', TRANS.AMOUNT, 0)) - SUM(IF(TRANS.TRANS_MODE ='CR', TRANS.AMOUNT, 0))) AS AMOUNT_PERIOD
                              FROM MASTER_LEDGER_GROUP LG
                              INNER JOIN MASTER_LEDGER_GROUP PG ON LG.PARENT_GROUP_ID = PG.GROUP_ID
                              INNER JOIN MASTER_LEDGER ML ON ML.GROUP_ID = LG.GROUP_ID
                              INNER JOIN (SELECT MP.PROJECT_ID, VT.LEDGER_ID, VT.TRANS_MODE, VT.AMOUNT FROM VOUCHER_TRANS VT 
                                    INNER JOIN VOUCHER_MASTER_TRANS MT ON MT.BRANCH_ID = VT.BRANCH_ID AND MT.VOUCHER_ID = VT.VOUCHER_ID AND MT.LOCATION_ID = VT.LOCATION_ID
                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = MT.PROJECT_ID
                                    WHERE MT.STATUS = 1 AND MT.PROJECT_ID IN (?PROJECT_ID) AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                                    { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) } { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                    AND ( (MT.VOUCHER_TYPE IN ('RC','PY')) OR (MT.VOUCHER_TYPE = 'JN' AND MT.VOUCHER_SUB_TYPE = 'FD') )
                                    ) AS TRANS ON TRANS.LEDGER_ID = ML.LEDGER_ID
                              LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = ML.LEDGER_ID 
                              LEFT JOIN CONGREGATION_LEDGER CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                              WHERE LG.GROUP_ID NOT IN (12, 13, 14) {AND  ( (CL.CON_LEDGER_ID IN (?CON_LEDGER_ID)) AND (LG.GROUP_ID IN (?LEDGER_GROUP_ID) OR PG.GROUP_ID IN (?LEDGER_GROUP_ID)) ) }
                              GROUP BY ML.LEDGER_ID";
                        /*
                         * //( IF(?CON_LEDGER_ID=0, 1=1, CL.CON_LEDGER_ID IN (?CON_LEDGER_ID)) OR IF(?LEDGER_GROUP_ID=0, 1=1, LG.GROUP_ID IN (?LEDGER_GROUP_ID)) )
                         * UNION ALL
                        SELECT CL.CON_LEDGER_CODE, 0 AS CON_LEDGER_ID, 0 AS LEDGER_ID, '' AS LEDGER_CODE, '' AS PARENT_GROUP_CODE, '' AS GROUP_CODE,
                        '' AS PARENT_GROUP, '' AS LEDGER_GROUP, '' AS LEDGER_NAME, CL.CON_LEDGER_NAME, 0 AS AMOUNT_PERIOD
                        FROM CONGREGATION_LEDGER CL
                        LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.CON_LEDGER_ID = CL.CON_LEDGER_ID
                        WHERE CLM.CON_LEDGER_ID IS NULL AND CL.CON_LEDGER_CODE NOT IN ('01', '02','03', '04', '05', '06', '07', '08', '09')*/
                        break;
                    }

                case ReportSQLCommand.Generalate.GeneralateLedgerBalanceByConLedger:
                    {
                        query = query = @"SELECT CL.CON_LEDGER_CODE, CL.CON_LEDGER_ID, ML.LEDGER_ID, ML.LEDGER_CODE,  
                              CASE WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN LG.GROUP_CODE
                                  ELSE PG.GROUP_CODE END AS PARENT_GROUP_CODE,
                              IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,
                                 CASE WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN CONCAT(LG.GROUP_CODE)
                                 ELSE CONCAT(LG.GROUP_CODE) END,LG.GROUP_CODE) AS GROUP_CODE, 
                              CASE WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN LG.LEDGER_GROUP
                                 ELSE PG.LEDGER_GROUP END AS PARENT_GROUP,
                              IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,
                                CASE WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN CONCAT(LG.LEDGER_GROUP)
                                ELSE CONCAT('   ',LG.LEDGER_GROUP) END,LG.LEDGER_GROUP) AS LEDGER_GROUP,
                              IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,
                                CASE WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN CONCAT('   ', ML.LEDGER_NAME)
                                ELSE CONCAT('      ', ML.LEDGER_NAME) END, ML.LEDGER_NAME) AS LEDGER_NAME, 
                              IFNULL(CL.CON_LEDGER_NAME, '--UnMapped Ledger Groups to Congregation--') AS CON_LEDGER_NAME,
                              IF (LG.NATURE_ID IN (1, 4),
                                SUM(IF(TRANS.TRANS_MODE ='CR', TRANS.AMOUNT, 0)) - SUM(IF(TRANS.TRANS_MODE ='DR', TRANS.AMOUNT, 0)),
                                SUM(IF(TRANS.TRANS_MODE ='DR', TRANS.AMOUNT, 0)) - SUM(IF(TRANS.TRANS_MODE ='CR', TRANS.AMOUNT, 0))) AS AMOUNT_PERIOD
                              FROM MASTER_LEDGER_GROUP LG
                              INNER JOIN MASTER_LEDGER_GROUP PG ON LG.PARENT_GROUP_ID = PG.GROUP_ID
                              INNER JOIN MASTER_LEDGER ML ON ML.GROUP_ID = LG.GROUP_ID
                              INNER JOIN (SELECT MP.PROJECT_ID, VT.LEDGER_ID, VT.TRANS_MODE, VT.AMOUNT FROM VOUCHER_TRANS VT 
                                    INNER JOIN VOUCHER_MASTER_TRANS MT ON MT.BRANCH_ID = VT.BRANCH_ID AND MT.VOUCHER_ID = VT.VOUCHER_ID AND MT.LOCATION_ID = VT.LOCATION_ID
                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = MT.PROJECT_ID
                                    WHERE MT.STATUS = 1 AND MT.PROJECT_ID IN (?PROJECT_ID) AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                                    { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) } { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                    AND ( (MT.VOUCHER_TYPE IN ('RC','PY')) OR (MT.VOUCHER_TYPE = 'JN' AND MT.VOUCHER_SUB_TYPE = 'FD') )
                                    ) AS TRANS ON TRANS.LEDGER_ID = ML.LEDGER_ID
                              LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = ML.LEDGER_ID 
                              LEFT JOIN CONGREGATION_LEDGER CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                              WHERE LG.GROUP_ID NOT IN (12, 13, 14) AND (CL.CON_LEDGER_ID IN (?CON_LEDGER_ID)) 
                              GROUP BY ML.LEDGER_ID";
                        break;
                    }
                case ReportSQLCommand.Generalate.GeneralateLedgerBalanceByLedgerGroup:
                    {
                        query = query = @"SELECT CL.CON_LEDGER_CODE, CL.CON_LEDGER_ID, ML.LEDGER_ID, ML.LEDGER_CODE,  
                              CASE WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN LG.GROUP_CODE
                                  ELSE PG.GROUP_CODE END AS PARENT_GROUP_CODE,
                              IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,
                                 CASE WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN CONCAT(LG.GROUP_CODE)
                                 ELSE CONCAT(LG.GROUP_CODE) END,LG.GROUP_CODE) AS GROUP_CODE, 
                              CASE WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN LG.LEDGER_GROUP
                                 ELSE PG.LEDGER_GROUP END AS PARENT_GROUP,
                              IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,
                                CASE WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN CONCAT(LG.LEDGER_GROUP)
                                ELSE CONCAT('   ',LG.LEDGER_GROUP) END,LG.LEDGER_GROUP) AS LEDGER_GROUP,
                              IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,
                                CASE WHEN LG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN CONCAT('   ', ML.LEDGER_NAME)
                                ELSE CONCAT('      ', ML.LEDGER_NAME) END, ML.LEDGER_NAME) AS LEDGER_NAME, 
                              IFNULL(CL.CON_LEDGER_NAME, '--UnMapped Ledger Groups to Congregation--') AS CON_LEDGER_NAME,
                              IF (LG.NATURE_ID IN (1, 4),
                                SUM(IF(TRANS.TRANS_MODE ='CR', TRANS.AMOUNT, 0)) - SUM(IF(TRANS.TRANS_MODE ='DR', TRANS.AMOUNT, 0)),
                                SUM(IF(TRANS.TRANS_MODE ='DR', TRANS.AMOUNT, 0)) - SUM(IF(TRANS.TRANS_MODE ='CR', TRANS.AMOUNT, 0))) AS AMOUNT_PERIOD
                              FROM MASTER_LEDGER_GROUP LG
                              INNER JOIN MASTER_LEDGER_GROUP PG ON LG.PARENT_GROUP_ID = PG.GROUP_ID
                              INNER JOIN MASTER_LEDGER ML ON ML.GROUP_ID = LG.GROUP_ID
                              INNER JOIN (SELECT MP.PROJECT_ID, VT.LEDGER_ID, VT.TRANS_MODE, VT.AMOUNT FROM VOUCHER_TRANS VT 
                                    INNER JOIN VOUCHER_MASTER_TRANS MT ON MT.BRANCH_ID = VT.BRANCH_ID AND MT.VOUCHER_ID = VT.VOUCHER_ID AND MT.LOCATION_ID = VT.LOCATION_ID
                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = MT.PROJECT_ID
                                    WHERE MT.STATUS = 1 AND MT.PROJECT_ID IN (?PROJECT_ID) AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                                    { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) } { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                    AND ( (MT.VOUCHER_TYPE IN ('RC','PY')) OR (MT.VOUCHER_TYPE = 'JN' AND MT.VOUCHER_SUB_TYPE = 'FD') )
                                    ) AS TRANS ON TRANS.LEDGER_ID = ML.LEDGER_ID
                              LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = ML.LEDGER_ID 
                              LEFT JOIN CONGREGATION_LEDGER CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                              WHERE LG.GROUP_ID NOT IN (12, 13, 14) AND (PG.GROUP_ID IN (?LEDGER_GROUP_ID) OR LG.GROUP_ID IN (?LEDGER_GROUP_ID) )
                              GROUP BY ML.LEDGER_ID";
                        break;
                    }
                #endregion

                #region Profit And Loss
                case ReportSQLCommand.Generalate.GeneralateProfitandLoss:
                    {
                        query = "SELECT MPCG.PROJECT_CATOGORY_GROUP_ID, MPCG.PROJECT_CATOGORY_GROUP, CL1.CON_LEDGER_CODE AS MASTER_LEDGER_CODE, \n" +
                                    "CONCAT(CL1.CON_LEDGER_CODE, ' ', CL1.CON_LEDGER_NAME) AS MASTER_NAME,\n" +
                                    "IFNULL(CL.CON_LEDGER_ID, -1) AS CON_LEDGER_ID, CONCAT(CL.CON_LEDGER_CODE, ' ', CL.CON_LEDGER_NAME) AS CON_LEDGER_NAME, SUM(IE.AMOUNT) AS AMOUNT\n" +
                                    "FROM\n" +
                                    "(SELECT MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, VT.LEDGER_ID, SUM( IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)) ) AS AMOUNT\n" +
                                    "FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, PROJECT_ID, VOUCHER_TYPE, VOUCHER_DATE, STATUS\n" +
                                    "      FROM VOUCHER_MASTER_TRANS WHERE STATUS = 1 AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "      {AND BRANCH_ID IN (?BRANCH_ID)}) AS VMT\n" +
                                    "INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID  {AND VT.BRANCH_ID IN (?BRANCH_ID)}\n" +
                                    "INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                            //"INNER JOIN PROJECT_BRANCH PB ON PB.PROJECT_ID = MP.PROJECT_ID AND PB.BRANCH_ID = VMT.BRANCH_ID\n" +
                                    "WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND MP.PROJECT_ID IN (?PROJECT_ID) AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) {AND VMT.BRANCH_ID IN (?BRANCH_ID)} AND \n" +
                                    "VMT.VOUCHER_TYPE IN ('RC', 'PY', 'JN') AND VMT.STATUS=1 AND VT.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)\n" +
                                    "GROUP BY MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, VT.LEDGER_ID) AS IE\n" +
                                    "INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID\n" +
                                    "INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID\n" +
                                    "INNER JOIN MASTER_PROJECT_CATOGORY MPC ON MPC.PROJECT_CATOGORY_ID = IE.PROJECT_CATEGORY_ID\n" +
                                    "LEFT JOIN MASTER_PROJECT_CATOGORY_GROUP MPCG ON MPCG.PROJECT_CATOGORY_GROUP_ID = MPC.PROJECT_CATOGORY_GROUP_ID\n" +
                                    "LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = IE.LEDGER_ID AND CLM.PROJECT_CATOGORY_GROUP_ID = MPCG.PROJECT_CATOGORY_GROUP_ID\n" +
                                    "LEFT JOIN CONGREGATION_LEDGER AS CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID\n" +
                                    "LEFT JOIN CONGREGATION_LEDGER AS CL1 ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID\n" +
                                    "WHERE LG.NATURE_ID IN (1,2)\n" +
                                    "GROUP BY MPC.PROJECT_CATOGORY_GROUP_ID, CUSTOMERID, CL.CON_LEDGER_ID;";

                        //On 11/11/2020, Records from ledger Balance
                        //"(SELECT PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID,\n" +
                        //    "SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT\n" +
                        //    "FROM LEDGER_BALANCE AS LB\n" +
                        //    "INNER JOIN (SELECT P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //    "          FROM LEDGER_BALANCE LBA\n" +
                        //    "          INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                        //    "          WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <=?DATE_TO AND LBA.LEDGER_ID NOT IN(?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)\n" +
                        //    "          GROUP BY P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1\n" +
                        //    "          ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //    "WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID\n" +
                        //    "UNION ALL\n" +
                        //    "SELECT PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID,\n" +
                        //    "-SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT\n" +
                        //    "FROM LEDGER_BALANCE AS LB\n" +
                        //    "INNER JOIN (SELECT P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //    "          FROM LEDGER_BALANCE LBA\n" +
                        //    "          INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                        //    "          WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <?DATE_FROM AND LBA.LEDGER_ID NOT IN(?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)\n" +
                        //    "          GROUP BY P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1\n" +
                        //    "          ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //    "WHERE LB.BRANCH_ID  = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID) AS IE\n" +

                        break;
                    }
                case ReportSQLCommand.Generalate.GeneralateProfitandLossDetailByConLedger:
                    {
                        query = @"SELECT MPC.PROJECT_CATOGORY_GROUP_ID, MIP.SOCIETYNAME, CL.CON_LEDGER_CODE,
                                    IFNULL(CLM.CON_LEDGER_ID, -1) AS CON_LEDGER_ID, SUM(AMOUNT) AS AMOUNT
                                    FROM
                                    (SELECT MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, VT.LEDGER_ID, SUM( IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)) ) AS AMOUNT
                                    FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, PROJECT_ID, VOUCHER_TYPE, VOUCHER_DATE, STATUS
                                                      FROM VOUCHER_MASTER_TRANS WHERE STATUS = 1 AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND PROJECT_ID IN (?PROJECT_ID)
                                                      {AND BRANCH_ID IN (?BRANCH_ID)}) AS VMT
                                    INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID
                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND MP.PROJECT_ID IN (?PROJECT_ID)
                                    -- INNER JOIN PROJECT_BRANCH PB ON PB.PROJECT_ID = MP.PROJECT_ID AND PB.BRANCH_ID = VMT.BRANCH_ID
                                    WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND MP.PROJECT_ID IN (?PROJECT_ID) AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) 
                                    AND VMT.VOUCHER_TYPE IN ('RC', 'PY', 'JN') AND VMT.STATUS=1 AND VT.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                                    GROUP BY MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, VT.LEDGER_ID) AS IE
                                    INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID
                                    INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID
                                    INNER JOIN MASTER_PROJECT_CATOGORY MPC ON MPC.PROJECT_CATOGORY_ID = IE.PROJECT_CATEGORY_ID
                                    LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = IE.LEDGER_ID AND CLM.PROJECT_CATOGORY_GROUP_ID= MPC.PROJECT_CATOGORY_GROUP_ID
                                    LEFT JOIN CONGREGATION_LEDGER AS CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                                    LEFT JOIN MASTER_INSTI_PERFERENCE MIP ON MIP.CUSTOMERID = IE.CUSTOMERID
                                    WHERE LG.NATURE_ID IN (1,2)
                                    GROUP BY MPC.PROJECT_CATOGORY_GROUP_ID, IE.CUSTOMERID, CLM.CON_LEDGER_ID;";

                        //On 11/11/2020, records from ledger balance
                        //(SELECT PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID,
                        //            SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT
                        //            FROM LEDGER_BALANCE AS LB
                        //            INNER JOIN (SELECT P.PROJECT_CATEGORY_ID, CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                      FROM LEDGER_BALANCE LBA
                        //                      INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                      WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <=?DATE_TO AND LBA.LEDGER_ID NOT IN(?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                      GROUP BY P.PROJECT_CATEGORY_ID, CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                      ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //            WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID
                        //            UNION ALL
                        //            SELECT PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID,
                        //            -SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT
                        //            FROM LEDGER_BALANCE AS LB
                        //            INNER JOIN (SELECT P.PROJECT_CATEGORY_ID, CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                      FROM LEDGER_BALANCE LBA
                        //                      INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                      WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <?DATE_FROM AND LBA.LEDGER_ID NOT IN(?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                      GROUP BY P.PROJECT_CATEGORY_ID, CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                      ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //            WHERE LB.BRANCH_ID  = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID) AS IE
                        break;
                    }
                case ReportSQLCommand.Generalate.GeneralateProfitandLossDetailByHOLedger:
                    {
                        query = @"SELECT MPC.PROJECT_CATOGORY_GROUP_ID, IFNULL(CLM.CON_LEDGER_ID, -1) AS CON_LEDGER_ID, IE.LEDGER_ID, ML.LEDGER_NAME , SUM(AMOUNT) AS AMOUNT
                                    FROM
                                    (SELECT MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, VT.LEDGER_ID, SUM( IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)) ) AS AMOUNT
                                    FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, PROJECT_ID, VOUCHER_TYPE, VOUCHER_DATE, STATUS
                                                      FROM VOUCHER_MASTER_TRANS WHERE STATUS = 1 AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND PROJECT_ID IN (?PROJECT_ID)
                                                      {AND BRANCH_ID IN (?BRANCH_ID)}) AS VMT
                                    INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID
                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND MP.PROJECT_ID IN (?PROJECT_ID)
                                    INNER JOIN PROJECT_BRANCH PB ON PB.PROJECT_ID = MP.PROJECT_ID AND PB.BRANCH_ID = VMT.BRANCH_ID
                                    WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND MP.PROJECT_ID IN (?PROJECT_ID) AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) 
                                    AND VMT.VOUCHER_TYPE IN ('RC', 'PY', 'JN') AND VMT.STATUS=1 AND VT.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                                    GROUP BY MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, VT.LEDGER_ID) AS IE
                                    INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID
                                    INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID
                                    INNER JOIN MASTER_PROJECT_CATOGORY MPC ON MPC.PROJECT_CATOGORY_ID = IE.PROJECT_CATEGORY_ID
                                    LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = IE.LEDGER_ID AND CLM.PROJECT_CATOGORY_GROUP_ID= MPC.PROJECT_CATOGORY_GROUP_ID
                                    LEFT JOIN CONGREGATION_LEDGER AS CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                                    WHERE LG.NATURE_ID IN (1,2)
                                    GROUP BY MPC.PROJECT_CATOGORY_GROUP_ID, CLM.CON_LEDGER_ID, IE.LEDGER_ID;";

                        //On 11/11/2020, Records from Ledger Balance
                        //SELECT PROJECT_CATEGORY_ID, LB.LEDGER_ID,
                        //            SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT
                        //            FROM LEDGER_BALANCE AS LB
                        //            INNER JOIN (SELECT P.PROJECT_CATEGORY_ID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                      FROM LEDGER_BALANCE LBA
                        //                      INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                      WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <=?DATE_TO AND LBA.LEDGER_ID NOT IN(?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                      GROUP BY P.PROJECT_CATEGORY_ID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                      ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //            WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY PROJECT_CATEGORY_ID, LB.LEDGER_ID
                        //            UNION ALL
                        //            SELECT PROJECT_CATEGORY_ID, LB.LEDGER_ID,
                        //            -SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT
                        //            FROM LEDGER_BALANCE AS LB
                        //            INNER JOIN (SELECT P.PROJECT_CATEGORY_ID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                      FROM LEDGER_BALANCE LBA
                        //                      INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                      WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <?DATE_FROM AND LBA.LEDGER_ID NOT IN(?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                      GROUP BY P.PROJECT_CATEGORY_ID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                      ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //            WHERE LB.BRANCH_ID  = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY PROJECT_CATEGORY_ID, LB.LEDGER_ID
                        break;
                    }
                case ReportSQLCommand.Generalate.Loss:
                    {
                        query = "SELECT CL.CON_LEDGER_ID,\n" +
                       "       CL.CON_PARENT_LEDGER_ID,\n" +
                       "       CL1.CON_PARENT_LEDGER_ID AS CON_MAIN_PARENT_ID,\n" +
                       "       CL1.CON_LEDGER_NAME AS MASTER_NAME,\n" +
                       "       CL.CON_LEDGER_NAME,\n" +
                       "       ABS(SUM(IE.AMOUNT)) AS NXTPAYMENT\n" +
                       "  FROM CONGREGATION_LEDGER AS CL\n" +
                       " INNER JOIN CONGREGATION_LEDGER_MAP CLM\n" +
                       "    ON CLM.CON_LEDGER_ID = CL.CON_LEDGER_ID\n" +
                       " INNER JOIN CONGREGATION_LEDGER AS CL1\n" +
                       "    ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID\n" +
                       " INNER JOIN (SELECT MP.CUSTOMERID,\n" +
                       "                    ML.LEDGER_ID,\n" +
                       "                    ML.LEDGER_NAME,\n" +
                       "                    (CASE\n" +
                       "                      WHEN (SUM(CASE\n" +
                       "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                   IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                  ELSE\n" +
                       "                                   -IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                END)) >= 0 THEN\n" +
                       "                       - (SUM(CASE\n" +
                       "                                WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                 IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                ELSE\n" +
                       "                                 -IFNULL(LB2.AMOUNT, 0)\n" +
                       "                              END))\n" +
                       "                      ELSE\n" +
                       "                       ABS(SUM(CASE\n" +
                       "                                 WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                  IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                 ELSE\n" +
                       "                                  -IFNULL(LB2.AMOUNT, 0)\n" +
                       "                               END))\n" +
                       "                    END) AS AMOUNT,\n" +
                       "                    SUM(CASE\n" +
                       "                          WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                           LB2.AMOUNT\n" +
                       "                          ELSE\n" +
                       "                           0\n" +
                       "                        END) AS AMOUNT_DR,\n" +
                       "                    SUM(CASE\n" +
                       "                          WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                       "                           LB2.AMOUNT\n" +
                       "                          ELSE\n" +
                       "                           0\n" +
                       "                        END) AS AMOUNT_CR,\n" +
                       "                    CASE\n" +
                       "                      WHEN (SUM(CASE\n" +
                       "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                   LB2.AMOUNT\n" +
                       "                                  ELSE\n" +
                       "                                   -LB2.AMOUNT\n" +
                       "                                END) >= 0) THEN\n" +
                       "                       'DR'\n" +
                       "                      ELSE\n" +
                       "                       'CR'\n" +
                       "                    END AS TRANS_MODE\n" +
                       "               FROM MASTER_LEDGER AS ML\n" +
                       "              INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                       "                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                       "              INNER JOIN MASTER_PROJECT AS MP\n" +
                       "                 ON MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                       "              INNER JOIN PROJECT_LEDGER AS PL\n" +
                       "                 ON PL.PROJECT_ID = MP.PROJECT_ID\n" +
                       "                AND PL.LEDGER_ID = ML.LEDGER_ID\n" +
                       "              INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                       "                                LB1.CUSTOMERID,\n" +
                       "                                LB.PROJECT_ID,\n" +
                       "                                LB.LEDGER_ID,\n" +
                       "                                LB.AMOUNT,\n" +
                       "                                LB.TRANS_MODE\n" +
                       "                           FROM LEDGER_BALANCE AS LB\n" +
                       "                          INNER JOIN (SELECT P.CUSTOMERID,\n" +
                       "                                            LBA.PROJECT_ID,\n" +
                       "                                            LBA.LEDGER_ID,\n" +
                       "                                            MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                       "                                       FROM LEDGER_BALANCE LBA\n" +
                       "                                      INNER JOIN MASTER_PROJECT P\n" +
                       "                                         ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                       "                                      WHERE 1 = 1\n" +
                       "                                        AND LBA.BALANCE_DATE <=\n" +
                       "                                            ?DATE_TO\n" +
                       "                                      GROUP BY P.CUSTOMERID,\n" +
                       "                                               LBA.PROJECT_ID,\n" +
                       "                                               LBA.LEDGER_ID) AS LB1\n" +
                       "                             ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                       "                            AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                       "                          WHERE LB1.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                       "                            AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                       "                 ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                       "                AND MP.CUSTOMERID = LB2.CUSTOMERID\n" +
                       "                AND PL.PROJECT_ID = LB2.PROJECT_ID\n" +
                       "              WHERE 1 = 1\n" +
                       "                AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                       "                AND LG.NATURE_ID IN (1, 2)\n" +
                       "              GROUP BY ML.LEDGER_ID\n" +
                       "             UNION ALL\n" +
                       "             SELECT MP.CUSTOMERID,\n" +
                       "                    ML.LEDGER_ID,\n" +
                       "                    ML.LEDGER_NAME,\n" +
                       "                    - (CASE\n" +
                       "                        WHEN (SUM(CASE\n" +
                       "                                    WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                     IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                    ELSE\n" +
                       "                                     -IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                  END)) >= 0 THEN\n" +
                       "                         - (SUM(CASE\n" +
                       "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                   IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                  ELSE\n" +
                       "                                   -IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                END))\n" +
                       "                        ELSE\n" +
                       "                         ABS(SUM(CASE\n" +
                       "                                   WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                    IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                   ELSE\n" +
                       "                                    -IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                 END))\n" +
                       "                      END) AS AMOUNT,\n" +
                       "                    -SUM(CASE\n" +
                       "                           WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                            LB2.AMOUNT\n" +
                       "                           ELSE\n" +
                       "                            0\n" +
                       "                         END) AS AMOUNT_DR,\n" +
                       "                    -SUM(CASE\n" +
                       "                           WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                       "                            LB2.AMOUNT\n" +
                       "                           ELSE\n" +
                       "                            0\n" +
                       "                         END) AS AMOUNT_CR,\n" +
                       "                    CASE\n" +
                       "                      WHEN (SUM(CASE\n" +
                       "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                   LB2.AMOUNT\n" +
                       "                                  ELSE\n" +
                       "                                   -LB2.AMOUNT\n" +
                       "                                END) >= 0) THEN\n" +
                       "                       'DR'\n" +
                       "                      ELSE\n" +
                       "                       'CR'\n" +
                       "                    END AS TRANS_MODE\n" +
                       "               FROM MASTER_LEDGER AS ML\n" +
                       "              INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                       "                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                       "              INNER JOIN MASTER_PROJECT AS MP\n" +
                       "                 ON MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                       "              INNER JOIN PROJECT_LEDGER AS PL\n" +
                       "                 ON PL.PROJECT_ID = MP.PROJECT_ID\n" +
                       "                AND PL.LEDGER_ID = ML.LEDGER_ID\n" +
                       "              INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                       "                                 LB1.CUSTOMERID,\n" +
                       "                                 LB.PROJECT_ID,\n" +
                       "                                 LB.LEDGER_ID,\n" +
                       "                                 LB.AMOUNT,\n" +
                       "                                 LB.TRANS_MODE\n" +
                       "                            FROM LEDGER_BALANCE AS LB\n" +
                       "                           INNER JOIN (SELECT P.CUSTOMERID,\n" +
                       "                                             LBA.PROJECT_ID,\n" +
                       "                                             LBA.LEDGER_ID,\n" +
                       "                                             MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                       "                                        FROM LEDGER_BALANCE LBA\n" +
                       "                                       INNER JOIN MASTER_PROJECT P\n" +
                       "                                          ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                       "                                       WHERE 1 = 1\n" +
                       "                                         AND LBA.BALANCE_DATE <\n" +
                       "                                             ?DATE_FROM\n" +
                       "                                       GROUP BY P.CUSTOMERID,\n" +
                       "                                                LBA.PROJECT_ID,\n" +
                       "                                                LBA.LEDGER_ID) AS LB1\n" +
                       "                              ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                       "                             AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                       "                           WHERE LB1.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                       "                             AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                       "                 ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                       "                AND MP.CUSTOMERID = LB2.CUSTOMERID\n" +
                       "                AND PL.PROJECT_ID = LB2.PROJECT_ID\n" +
                       "              WHERE 1 = 1\n" +
                       "                AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                       "                AND LG.NATURE_ID IN (1, 2)\n" +
                       "              GROUP BY MP.CUSTOMERID, ML.LEDGER_ID) AS IE\n" +
                       "    ON IE.LEDGER_ID = CLM.LEDGER_ID\n" +
                       " GROUP BY CL.CON_LEDGER_ID\n" +
                       "HAVING SUM(IE.AMOUNT) < 0\n" +
                       " ORDER BY IE.LEDGER_NAME;";
                        //query = "SELECT CON_LEDGER_NAME,\n" +
                        //        "       CON_PARENT_LEDGER_ID,\n" +
                        //        "       CON_LEDGER_ID,\n" +
                        //        "       CON_MAIN_PARENT_ID,\n" +
                        //        "       YEAR_FROM,\n" +
                        //        "       YEAR_TO,\n" +
                        //        "       CON_LEDGER_CODE,\n" +
                        //        "       PREPAYMENT,\n" +
                        //        "       NXTPAYMENT,\n" +
                        //        "       NATURE_ID\n" +
                        //        "  FROM (SELECT CON_LEDGER_NAME,\n" +
                        //        "               CON_PARENT_LEDGER_ID,\n" +
                        //        "               CON_LEDGER_ID,\n" +
                        //        "               CON_MAIN_PARENT_ID,\n" +
                        //        "               YEAR_FROM,\n" +
                        //        "               YEAR_TO,\n" +
                        //        "               CON_LEDGER_CODE,\n" +
                        //        "               PREPAYMENT,\n" +
                        //        "               NXTPAYMENT,\n" +
                        //        "               @id:= IF(NATURE_ID > 0, NATURE_ID, @PRID) AS NATURE_ID,\n" +
                        //        "               @prid:= @ID   AS TEMP\n" +
                        //        "          FROM (SELECT CASE\n" +
                        //        "                         WHEN CL.CON_LEDGER_ID = CON_PARENT_LEDGER_ID THEN\n" +
                        //        "                          CONCAT(CL.CON_LEDGER_CODE, '.  ', CON_LEDGER_NAME)\n" +
                        //        "                         WHEN CON_PARENT_LEDGER_ID <> CON_MAIN_PARENT_ID THEN\n" +
                        //        "                          CONCAT('         ',\n" +
                        //        "                                 CONCAT(CL.CON_LEDGER_CODE, '.  '),\n" +
                        //        "                                 CON_LEDGER_NAME)\n" +
                        //        "                         ELSE\n" +
                        //        "                          CONCAT('  ',\n" +
                        //        "                                 CONCAT(CL.CON_LEDGER_CODE, '.  '),\n" +
                        //        "                                 CON_LEDGER_NAME)\n" +
                        //        "                       END AS CON_LEDGER_NAME,\n" +
                        //        "                       CL.CON_PARENT_LEDGER_ID,\n" +
                        //        "                       CL.CON_LEDGER_ID,\n" +
                        //        "                       CL.CON_MAIN_PARENT_ID,\n" +
                        //        "                       YEAR(?DATE_TO) AS YEAR_TO,\n" +
                        //        "                       YEAR(?DATE_FROM) AS YEAR_FROM,\n" +
                        //        "\n" +
                        //        "                       IFNULL(LG.NATURE_ID, 0) AS NATURE_ID,\n" +
                        //        "\n" +
                        //        "                       IFNULL(A.PREPAYMENT, 0) AS PREPAYMENT,\n" +
                        //        "                       CL.CON_LEDGER_CODE,\n" +
                        //        "                       IFNULL(B.NXTPAYMENT, 0) AS NXTPAYMENT\n" +
                        //        "                  FROM CONGREGATION_LEDGER CL\n" +
                        //        "                  LEFT JOIN CONGREGATION_LEDGER_MAP MP\n" +
                        //        "                    ON CL.CON_LEDGER_ID = MP.CON_LEDGER_ID\n" +
                        //        "                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                    ON MP.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                  LEFT JOIN MASTER_LEDGER_GROUP LG\n" +
                        //        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "\n" +
                        //        "                -- PRE PAYMENT\n" +
                        //        "                  LEFT JOIN (SELECT ML.LEDGER_ID,\n" +
                        //        "                                   IFNULL(SUM(AMOUNT), 0) AS PREPAYMENT,\n" +
                        //        "                                   LG.nature_id\n" +
                        //        "                              FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "                              LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                                ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                              LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                                ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                              LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                                ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                             WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "                               AND VT.TRANS_MODE = 'DR'\n" +
                        //        "                               AND MT.STATUS = 1\n" +
                        //        "                               AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                               AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "                               AND YEAR(?DATE_FROM) = YEAR(VOUCHER_DATE)\n" +
                        //        "                            ) AS A\n" +
                        //        "                    ON A.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "\n" +
                        //        "                -- NXT PAYMENT\n" +
                        //        "                  LEFT JOIN (SELECT ML.LEDGER_ID,\n" +
                        //        "                                   IFNULL(SUM(AMOUNT), 0) AS NXTPAYMENT,\n" +
                        //        "                                   LG.group_id\n" +
                        //        "                              FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "                              LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                                ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                              LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                                ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                              LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                                ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                             WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "                               AND VT.TRANS_MODE = 'DR'\n" +
                        //        "                               AND MT.STATUS = 1\n" +
                        //        "                               AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                               AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "                               AND YEAR(?DATE_TO) = YEAR(VOUCHER_DATE)\n" +
                        //        "                            ) AS B\n" +
                        //        "                    ON B.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                 GROUP BY CL.CON_MAIN_PARENT_ID,\n" +
                        //        "                          CL.CON_PARENT_LEDGER_ID,\n" +
                        //        "                          CL.CON_LEDGER_ID\n" +
                        //        "                 ORDER BY CON_MAIN_PARENT_ID,\n" +
                        //        "                          IFNULL(LG.NATURE_ID, 100000000) ASC) AS DDDD,\n" +
                        //        "               (SELECT @PRID := 0) AS X,\n" +
                        //        "               (SELECT @ID := 0) AS Y) AS FNL\n" +
                        //        " WHERE NATURE_ID = 2\n" +
                        //        " ORDER BY CON_PARENT_LEDGER_ID, CON_LEDGER_ID";
                        break;
                    }

                case ReportSQLCommand.Generalate.Profit:
                    {
                        query = "SELECT CL.CON_LEDGER_ID,\n" +
                        "       CL.CON_PARENT_LEDGER_ID,\n" +
                        "       CL1.CON_PARENT_LEDGER_ID AS CON_MAIN_PARENT_ID,\n" +
                        "       CL1.CON_LEDGER_NAME AS MASTER_NAME,\n" +
                        "       CL.CON_LEDGER_NAME,\n" +
                        "       SUM(IE.AMOUNT) AS NXTRECEIPT\n" +
                        "  FROM CONGREGATION_LEDGER AS CL\n" +
                        " INNER JOIN CONGREGATION_LEDGER_MAP CLM\n" +
                        "    ON CLM.CON_LEDGER_ID = CL.CON_LEDGER_ID\n" +
                        " INNER JOIN CONGREGATION_LEDGER AS CL1\n" +
                        "    ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID\n" +
                        " INNER JOIN (SELECT MP.CUSTOMERID,\n" +
                        "                    ML.LEDGER_ID,\n" +
                        "                    ML.LEDGER_NAME,\n" +
                        "                    (CASE\n" +
                        "                      WHEN (SUM(CASE\n" +
                        "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        "                                   IFNULL(LB2.AMOUNT, 0)\n" +
                        "                                  ELSE\n" +
                        "                                   -IFNULL(LB2.AMOUNT, 0)\n" +
                        "                                END)) >= 0 THEN\n" +
                        "                       - (SUM(CASE\n" +
                        "                                WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        "                                 IFNULL(LB2.AMOUNT, 0)\n" +
                        "                                ELSE\n" +
                        "                                 -IFNULL(LB2.AMOUNT, 0)\n" +
                        "                              END))\n" +
                        "                      ELSE\n" +
                        "                       ABS(SUM(CASE\n" +
                        "                                 WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        "                                  IFNULL(LB2.AMOUNT, 0)\n" +
                        "                                 ELSE\n" +
                        "                                  -IFNULL(LB2.AMOUNT, 0)\n" +
                        "                               END))\n" +
                        "                    END) AS AMOUNT,\n" +
                        "                    SUM(CASE\n" +
                        "                          WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        "                           LB2.AMOUNT\n" +
                        "                          ELSE\n" +
                        "                           0\n" +
                        "                        END) AS AMOUNT_DR,\n" +
                        "                    SUM(CASE\n" +
                        "                          WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        "                           LB2.AMOUNT\n" +
                        "                          ELSE\n" +
                        "                           0\n" +
                        "                        END) AS AMOUNT_CR,\n" +
                        "                    CASE\n" +
                        "                      WHEN (SUM(CASE\n" +
                        "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        "                                   LB2.AMOUNT\n" +
                        "                                  ELSE\n" +
                        "                                   -LB2.AMOUNT\n" +
                        "                                END) >= 0) THEN\n" +
                        "                       'DR'\n" +
                        "                      ELSE\n" +
                        "                       'CR'\n" +
                        "                    END AS TRANS_MODE\n" +
                        "               FROM MASTER_LEDGER AS ML\n" +
                        "              INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        "                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        "              INNER JOIN MASTER_PROJECT AS MP\n" +
                        "                 ON MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                        "              INNER JOIN PROJECT_LEDGER AS PL\n" +
                        "                 ON PL.PROJECT_ID = MP.PROJECT_ID\n" +
                        "                AND PL.LEDGER_ID = ML.LEDGER_ID\n" +
                        "              INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                        "                                LB1.CUSTOMERID,\n" +
                        "                                LB.PROJECT_ID,\n" +
                        "                                LB.LEDGER_ID,\n" +
                        "                                LB.AMOUNT,\n" +
                        "                                LB.TRANS_MODE\n" +
                        "                           FROM LEDGER_BALANCE AS LB\n" +
                        "                          INNER JOIN (SELECT P.CUSTOMERID,\n" +
                        "                                            LBA.PROJECT_ID,\n" +
                        "                                            LBA.LEDGER_ID,\n" +
                        "                                            MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        "                                       FROM LEDGER_BALANCE LBA\n" +
                        "                                      INNER JOIN MASTER_PROJECT P\n" +
                        "                                         ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                        "                                      WHERE 1 = 1\n" +
                        "                                        AND LBA.BALANCE_DATE <=\n" +
                        "                                            ?DATE_TO\n" +
                        "                                      GROUP BY P.CUSTOMERID,\n" +
                        "                                               LBA.PROJECT_ID,\n" +
                        "                                               LBA.LEDGER_ID) AS LB1\n" +
                        "                             ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        "                            AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        "                          WHERE LB1.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                        "                            AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                        "                 ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        "                AND MP.CUSTOMERID = LB2.CUSTOMERID\n" +
                        "                AND PL.PROJECT_ID = LB2.PROJECT_ID\n" +
                        "              WHERE 1 = 1\n" +
                        "                AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                        "                AND LG.NATURE_ID IN (1, 2)\n" +
                        "              GROUP BY ML.LEDGER_ID\n" +
                        "             UNION ALL\n" +
                        "             SELECT MP.CUSTOMERID,\n" +
                        "                    ML.LEDGER_ID,\n" +
                        "                    ML.LEDGER_NAME,\n" +
                        "                    - (CASE\n" +
                        "                        WHEN (SUM(CASE\n" +
                        "                                    WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        "                                     IFNULL(LB2.AMOUNT, 0)\n" +
                        "                                    ELSE\n" +
                        "                                     -IFNULL(LB2.AMOUNT, 0)\n" +
                        "                                  END)) >= 0 THEN\n" +
                        "                         - (SUM(CASE\n" +
                        "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        "                                   IFNULL(LB2.AMOUNT, 0)\n" +
                        "                                  ELSE\n" +
                        "                                   -IFNULL(LB2.AMOUNT, 0)\n" +
                        "                                END))\n" +
                        "                        ELSE\n" +
                        "                         ABS(SUM(CASE\n" +
                        "                                   WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        "                                    IFNULL(LB2.AMOUNT, 0)\n" +
                        "                                   ELSE\n" +
                        "                                    -IFNULL(LB2.AMOUNT, 0)\n" +
                        "                                 END))\n" +
                        "                      END) AS AMOUNT,\n" +
                        "                    -SUM(CASE\n" +
                        "                           WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        "                            LB2.AMOUNT\n" +
                        "                           ELSE\n" +
                        "                            0\n" +
                        "                         END) AS AMOUNT_DR,\n" +
                        "                    -SUM(CASE\n" +
                        "                           WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        "                            LB2.AMOUNT\n" +
                        "                           ELSE\n" +
                        "                            0\n" +
                        "                         END) AS AMOUNT_CR,\n" +
                        "                    CASE\n" +
                        "                      WHEN (SUM(CASE\n" +
                        "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        "                                   LB2.AMOUNT\n" +
                        "                                  ELSE\n" +
                        "                                   -LB2.AMOUNT\n" +
                        "                                END) >= 0) THEN\n" +
                        "                       'DR'\n" +
                        "                      ELSE\n" +
                        "                       'CR'\n" +
                        "                    END AS TRANS_MODE\n" +
                        "               FROM MASTER_LEDGER AS ML\n" +
                        "              INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        "                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        "              INNER JOIN MASTER_PROJECT AS MP\n" +
                        "                 ON MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                        "              INNER JOIN PROJECT_LEDGER AS PL\n" +
                        "                 ON PL.PROJECT_ID = MP.PROJECT_ID\n" +
                        "                AND PL.LEDGER_ID = ML.LEDGER_ID\n" +
                        "              INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                        "                                 LB1.CUSTOMERID,\n" +
                        "                                 LB.PROJECT_ID,\n" +
                        "                                 LB.LEDGER_ID,\n" +
                        "                                 LB.AMOUNT,\n" +
                        "                                 LB.TRANS_MODE\n" +
                        "                            FROM LEDGER_BALANCE AS LB\n" +
                        "                           INNER JOIN (SELECT P.CUSTOMERID,\n" +
                        "                                             LBA.PROJECT_ID,\n" +
                        "                                             LBA.LEDGER_ID,\n" +
                        "                                             MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        "                                        FROM LEDGER_BALANCE LBA\n" +
                        "                                       INNER JOIN MASTER_PROJECT P\n" +
                        "                                          ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                        "                                       WHERE 1 = 1\n" +
                        "                                         AND LBA.BALANCE_DATE <\n" +
                        "                                             ?DATE_FROM\n" +
                        "                                       GROUP BY P.CUSTOMERID,\n" +
                        "                                                LBA.PROJECT_ID,\n" +
                        "                                                LBA.LEDGER_ID) AS LB1\n" +
                        "                              ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        "                             AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        "                           WHERE LB1.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                        "                             AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                        "                 ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        "                AND MP.CUSTOMERID = LB2.CUSTOMERID\n" +
                        "                AND PL.PROJECT_ID = LB2.PROJECT_ID\n" +
                        "              WHERE 1 = 1\n" +
                        "                AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                        "                AND LG.NATURE_ID IN (1, 2)\n" +
                        "              GROUP BY MP.CUSTOMERID, ML.LEDGER_ID) AS IE\n" +
                        "    ON IE.LEDGER_ID = CLM.LEDGER_ID\n" +
                        " GROUP BY CL.CON_LEDGER_ID\n" +
                        "HAVING SUM(IE.AMOUNT) > 0\n" +
                        " ORDER BY IE.LEDGER_NAME;";

                        //query = "SELECT CON_LEDGER_NAME,\n" +
                        //        "       CON_PARENT_LEDGER_ID,\n" +
                        //        "       CON_LEDGER_ID,\n" +
                        //        "       CON_MAIN_PARENT_ID,\n" +
                        //        "       YEAR_FROM,\n" +
                        //        "       YEAR_TO,\n" +
                        //        "       CON_LEDGER_CODE,\n" +
                        //        "       PRERECEIPT,\n" +
                        //        "       NXTRECEIPT,\n" +
                        //        "       NATURE_ID\n" +
                        //        "  FROM (SELECT CON_LEDGER_NAME,\n" +
                        //        "               CON_PARENT_LEDGER_ID,\n" +
                        //        "               CON_LEDGER_ID,\n" +
                        //        "               CON_MAIN_PARENT_ID,\n" +
                        //        "               YEAR_FROM,\n" +
                        //        "               YEAR_TO,\n" +
                        //        "               CON_LEDGER_CODE,\n" +
                        //        "               PRERECEIPT,\n" +
                        //        "               NXTRECEIPT,\n" +
                        //        "               @id:= IF(NATURE_ID > 0, NATURE_ID, @PRID) AS NATURE_ID,\n" +
                        //        "               @prid:= @ID   AS TEMP\n" +
                        //        "          FROM (SELECT CASE\n" +
                        //        "                         WHEN CL.CON_LEDGER_ID = CON_PARENT_LEDGER_ID THEN\n" +
                        //        "                          CONCAT(CL.CON_LEDGER_CODE, '.  ', CON_LEDGER_NAME)\n" +
                        //        "                         WHEN CON_PARENT_LEDGER_ID <> CON_MAIN_PARENT_ID THEN\n" +
                        //        "                          CONCAT('         ',\n" +
                        //        "                                 CONCAT(CL.CON_LEDGER_CODE, '.  '),\n" +
                        //        "                                 CON_LEDGER_NAME)\n" +
                        //        "                         ELSE\n" +
                        //        "                          CONCAT('  ',\n" +
                        //        "                                 CONCAT(CL.CON_LEDGER_CODE, '.  '),\n" +
                        //        "                                 CON_LEDGER_NAME)\n" +
                        //        "                       END AS CON_LEDGER_NAME,\n" +
                        //        "                       CL.CON_PARENT_LEDGER_ID,\n" +
                        //        "                       CL.CON_LEDGER_ID,\n" +
                        //        "                       CL.CON_MAIN_PARENT_ID,\n" +
                        //        "                       YEAR(?DATE_TO) AS YEAR_TO,\n" +
                        //        "                       YEAR(?DATE_FROM) AS YEAR_FROM,\n" +
                        //        "\n" +
                        //        "                       IFNULL(LG.NATURE_ID, 0) AS NATURE_ID,\n" +
                        //        "\n" +
                        //        "                       IFNULL(A.PRERECEIPT, 0) AS PRERECEIPT,\n" +
                        //        "                       CL.CON_LEDGER_CODE,\n" +
                        //        "                       IFNULL(B.NXTRECEIPT, 0) AS NXTRECEIPT\n" +
                        //        "                  FROM CONGREGATION_LEDGER CL\n" +
                        //        "                  LEFT JOIN CONGREGATION_LEDGER_MAP MP\n" +
                        //        "                    ON CL.CON_LEDGER_ID = MP.CON_LEDGER_ID\n" +
                        //        "                  LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                    ON MP.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                  LEFT JOIN MASTER_LEDGER_GROUP LG\n" +
                        //        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "\n" +
                        //        "                -- PRE PAYMENT\n" +
                        //        "                  LEFT JOIN (SELECT ML.LEDGER_ID,\n" +
                        //        "                                   IFNULL(SUM(AMOUNT), 0) AS PRERECEIPT,\n" +
                        //        "                                   LG.nature_id\n" +
                        //        "                              FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "                              LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                                ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                              LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                                ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                              LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                                ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                             WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "                               AND VT.TRANS_MODE = 'CR'\n" +
                        //        "                               AND MT.STATUS = 1\n" +
                        //        "                               AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                               AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "                               AND YEAR(?DATE_FROM) = YEAR(VOUCHER_DATE)\n" +
                        //        "                            ) AS A\n" +
                        //        "                    ON A.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "\n" +
                        //        "                -- NXT PAYMENT\n" +
                        //        "                  LEFT JOIN (SELECT ML.LEDGER_ID,\n" +
                        //        "                                   IFNULL(SUM(AMOUNT), 0) AS NXTRECEIPT,\n" +
                        //        "                                   LG.group_id\n" +
                        //        "                              FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "                              LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                                ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                              LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                                ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                              LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                                ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                             WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "                               AND VT.TRANS_MODE = 'CR'\n" +
                        //        "                               AND MT.STATUS = 1\n" +
                        //        "                               AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                               AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "                               AND YEAR(?DATE_TO) = YEAR(VOUCHER_DATE)\n" +
                        //        "                            ) AS B\n" +
                        //        "                    ON B.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                 GROUP BY CL.CON_MAIN_PARENT_ID,\n" +
                        //        "                          CL.CON_PARENT_LEDGER_ID,\n" +
                        //        "                          CL.CON_LEDGER_ID\n" +
                        //        "                 ORDER BY CON_MAIN_PARENT_ID,\n" +
                        //        "                          IFNULL(LG.NATURE_ID, 100000000) ASC) AS DDDD,\n" +
                        //        "               (SELECT @PRID := 0) AS X,\n" +
                        //        "               (SELECT @ID := 0) AS Y) AS FNL\n" +
                        //        " WHERE NATURE_ID = 1\n" +
                        //        " ORDER BY CON_PARENT_LEDGER_ID, CON_LEDGER_ID";
                        break;
                    }

                case ReportSQLCommand.Generalate.GeneralateActivityIncomeExpense:
                    {
                        query = @"SELECT CL1.CON_LEDGER_CODE,CL.CON_LEDGER_CODE AS LEDGER_CODE, CL.CON_LEDGER_NAME AS CON_LEDGER_NAME,
                                  CL1.CON_LEDGER_NAME AS MASTER_NAME,
                                  CL2.CON_LEDGER_NAME AS MASTER_PARENT,
                                  IF((AMOUNT_ACTUAL) >0,(AMOUNT_ACTUAL),0) AS NXTRECEIPT,
                                  IF((AMOUNT_ACTUAL) <0,ABS((AMOUNT_ACTUAL)),0) AS NXTPAYMENT,
                                  IFNULL(AMOUNT_ACTUAL, 0) AS AMOUNT_ACTUAL
                                  FROM CONGREGATION_LEDGER AS CL
                                  LEFT JOIN CONGREGATION_LEDGER AS CL1
                                  ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID
                                  LEFT JOIN CONGREGATION_LEDGER AS CL2
                                  ON CL2.CON_LEDGER_ID = CL1.CON_PARENT_LEDGER_ID
                                  LEFT JOIN (SELECT CLM.CON_LEDGER_ID, SUM(AMOUNT_ACTUAL) AS AMOUNT_ACTUAL
                                FROM ( SELECT ML.LEDGER_NAME, VT.LEDGER_ID, SUM(IF(VT.TRANS_MODE = 'DR', -VT.AMOUNT, VT.AMOUNT)) AS AMOUNT_ACTUAL
                                FROM VOUCHER_MASTER_TRANS VM
                                INNER JOIN VOUCHER_TRANS VT ON VM.VOUCHER_ID = VT.VOUCHER_ID AND VM.BRANCH_ID = VT.BRANCH_ID and VM.LOCATION_ID  = VT.LOCATION_ID
                                INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = VT.LEDGER_ID
                                WHERE  VM.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND VM.PROJECT_ID IN (?PROJECT_ID) AND VM.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND VM.STATUS=1
                                GROUP BY VT.LEDGER_ID) BAL
                                LEFT JOIN CONGREGATION_LEDGER_MAP CLM
                                ON CLM.LEDGER_ID = BAL.LEDGER_ID
                                GROUP BY CLM.CON_LEDGER_ID) AS GEN_BAL
                                ON GEN_BAL.CON_LEDGER_ID = CL.CON_LEDGER_ID
                                WHERE (CL1.CON_LEDGER_NAME <> CL2.CON_LEDGER_NAME OR CL1.CON_LEDGER_CODE = 'E')
                                ORDER BY LENGTH(CL.CON_LEDGER_CODE), CL.CON_LEDGER_CODE";

                        // commanded by chinna on 06.08.2020 
                        // 
                        //
                        //query = "SELECT CL1.CON_LEDGER_CODE,CL.CON_LEDGER_CODE AS LEDGER_CODE,CL.CON_LEDGER_NAME AS CON_LEDGER_NAME,\n" +
                        //         "       CL1.CON_LEDGER_NAME AS MASTER_NAME,\n" +
                        //         "       CL2.CON_LEDGER_NAME AS MASTER_PARENT,\n" +
                        //         "   IF((AMOUNT_ACTUAL) >0,(AMOUNT_ACTUAL),0) AS NXTRECEIPT,\n" +
                        //         "   IF((AMOUNT_ACTUAL) <0,ABS((AMOUNT_ACTUAL)),0) AS NXTPAYMENT,\n" +
                        //         "      IFNULL(AMOUNT_ACTUAL, 0) AS AMOUNT_ACTUAL\n" +
                        //         "  FROM CONGREGATION_LEDGER AS CL\n" +
                        //         "  LEFT JOIN CONGREGATION_LEDGER AS CL1\n" +
                        //         "    ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID\n" +
                        //         "  LEFT JOIN CONGREGATION_LEDGER AS CL2\n" +
                        //         "    ON CL2.CON_LEDGER_ID = CL1.CON_PARENT_LEDGER_ID\n" +
                        //         "  LEFT JOIN (SELECT CLM.CON_LEDGER_ID, SUM(AMOUNT_ACTUAL) AS AMOUNT_ACTUAL\n" +
                        //         "               FROM (SELECT ML.LEDGER_ID,\n" +
                        //         "                            SUM(IF(TRANS_MODE = 'DR',\n" +
                        //         "                                   -IFNULL(LB.AMOUNT, 0),\n" +
                        //         "                                   IFNULL(LB.AMOUNT, 0))) AMOUNT_ACTUAL\n" +
                        //         "                       FROM (SELECT LB1.BALANCE_DATE,\n" +
                        //         "                                    LB1.PROJECT_ID,\n" +
                        //         "                                    LB1.BRANCH_ID,\n" +
                        //         "                                    LB1.LEDGER_ID,\n" +
                        //         "                                    LB1.AMOUNT,\n" +
                        //         "                                    LB1.TRANS_MODE\n" +
                        //         "                               FROM LEDGER_BALANCE AS LB1\n" +
                        //         "                               LEFT JOIN (SELECT P.CUSTOMERID, LBA.PROJECT_ID,\n" +
                        //         "                                                LBA.LEDGER_ID,\n" +
                        //         "                                                LBA.BRANCH_ID,\n" +
                        //         "                                                MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //         "                                           FROM LEDGER_BALANCE LBA\n" +
                        //         "                                             INNER JOIN MASTER_PROJECT P\n" +
                        //         "                                             ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                        //         "                                          WHERE 1 = 1\n" +
                        //         "                                            AND LBA.BALANCE_DATE <=\n" +
                        //         "                                                ?DATE_TO\n" +
                        //         "                                            AND LBA.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //         "                                            AND LBA.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //         "                                          GROUP BY LBA.BRANCH_ID,\n" +
                        //         "                                                   LBA.PROJECT_ID,\n" +
                        //         "                                                   LBA.LEDGER_ID) AS LB2\n" +
                        //         "                                 ON LB1.BRANCH_ID = LB2.BRANCH_ID\n" +
                        //         "                                AND LB1.PROJECT_ID = LB2.PROJECT_ID\n" +
                        //         "                                AND LB1.LEDGER_ID = LB2.LEDGER_ID\n" +
                        //         "                                AND LB1.BRANCH_ID = LB2.BRANCH_ID\n" +
                        //         "                              WHERE { LB2.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND } LB1.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //         "                                AND LB1.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //         "                                AND LB1.BALANCE_DATE = LB2.BAL_DATE) LB\n" +
                        //         "                      INNER JOIN MASTER_LEDGER ML\n" +
                        //         "                         ON ML.LEDGER_ID = LB.LEDGER_ID\n" +
                        //         "                      INNER JOIN MASTER_LEDGER_GROUP LG\n" +
                        //         "                         ON LG.GROUP_ID = ML.GROUP_ID\n" +
                        //         "                      WHERE ML.GROUP_ID NOT IN (12, 13, 14)\n" +
                        //         "                        AND LG.NATURE_ID IN (1, 2, 3, 4)\n" +
                        //         "                        AND LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //         "                        AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //         "                      GROUP BY LEDGER_ID) BAL\n" +
                        //         "               LEFT JOIN CONGREGATION_LEDGER_MAP CLM\n" +
                        //         "                 ON CLM.LEDGER_ID = BAL.LEDGER_ID\n" +
                        //         "              GROUP BY CLM.CON_LEDGER_ID) AS GEN_BAL\n" +
                        //         "    ON GEN_BAL.CON_LEDGER_ID = CL.CON_LEDGER_ID\n" +
                        //         " WHERE CL1.CON_LEDGER_NAME <> CL2.CON_LEDGER_NAME\n" +
                        //         " ORDER BY LENGTH(CL.CON_LEDGER_CODE), CL.CON_LEDGER_CODE";

                        //Ledger Balance validation on 06.08.2020
                        // To verify the balances

                        //                        SELECT CL1.CON_LEDGER_CODE,CL.CON_LEDGER_CODE AS LEDGER_CODE,CL.CON_LEDGER_NAME AS CON_LEDGER_NAME,
                        //       CL1.CON_LEDGER_NAME AS MASTER_NAME,
                        //       CL2.CON_LEDGER_NAME AS MASTER_PARENT,
                        //   IF((AMOUNT_ACTUAL) >0,(AMOUNT_ACTUAL),0) AS NXTRECEIPT,
                        //   IF((AMOUNT_ACTUAL) <0,ABS((AMOUNT_ACTUAL)),0) AS NXTPAYMENT,
                        //      IFNULL(AMOUNT_ACTUAL, 0) AS AMOUNT_ACTUAL
                        //  FROM CONGREGATION_LEDGER AS CL
                        //  LEFT JOIN CONGREGATION_LEDGER AS CL1
                        //    ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID
                        //  LEFT JOIN CONGREGATION_LEDGER AS CL2
                        //    ON CL2.CON_LEDGER_ID = CL1.CON_PARENT_LEDGER_ID
                        //  LEFT JOIN (SELECT CLM.CON_LEDGER_ID,  SUM(BAL.AMOUNT_ACTUAL) AS AMOUNT_CL, SUM(BAL_OP.AMOUNT_ACTUAL) AS AMOUNT_OP,
                        //              SUM(BAL.AMOUNT_ACTUAL)  -  SUM(BAL_OP.AMOUNT_ACTUAL) AS AMOUNT_ACTUAL
                        //               FROM ( SELECT ML.LEDGER_ID,
                        //                            SUM(IF(TRANS_MODE = 'DR',
                        //                                   -IFNULL(LB.AMOUNT, 0),
                        //                                   IFNULL(LB.AMOUNT, 0))) AMOUNT_ACTUAL
                        //                       FROM (SELECT LB1.BALANCE_DATE,
                        //                                    LB1.PROJECT_ID,
                        //                                    LB1.BRANCH_ID,
                        //                                    LB1.LEDGER_ID,
                        //                                    LB1.AMOUNT,
                        //                                    LB1.TRANS_MODE
                        //                               FROM LEDGER_BALANCE AS LB1
                        //                               LEFT JOIN (SELECT P.CUSTOMERID, LBA.PROJECT_ID,
                        //                                                LBA.LEDGER_ID,
                        //                                                LBA.BRANCH_ID,
                        //                                                MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                                           FROM LEDGER_BALANCE LBA
                        //                                             INNER JOIN MASTER_PROJECT P
                        //                                             ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                                          WHERE 1 = 1
                        //                                            AND LBA.BALANCE_DATE <=
                        //                                                '2020-06-30 00:00:00'
                        //                                            AND LBA.PROJECT_ID IN (25)
                        //                                            AND LBA.BRANCH_ID IN (9)
                        //                                          GROUP BY LBA.BRANCH_ID,
                        //                                                   LBA.PROJECT_ID,
                        //                                                   LBA.LEDGER_ID) AS LB2
                        //                                 ON LB1.BRANCH_ID = LB2.BRANCH_ID
                        //                                AND LB1.PROJECT_ID = LB2.PROJECT_ID
                        //                                AND LB1.LEDGER_ID = LB2.LEDGER_ID
                        //                                AND LB1.BRANCH_ID = LB2.BRANCH_ID
                        //                              WHERE  LB1.PROJECT_ID IN (25)
                        //                                AND LB1.BRANCH_ID IN (9)
                        //                                AND LB1.BALANCE_DATE = LB2.BAL_DATE) LB
                        //                      INNER JOIN MASTER_LEDGER ML
                        //                         ON ML.LEDGER_ID = LB.LEDGER_ID
                        //                      INNER JOIN MASTER_LEDGER_GROUP LG
                        //                         ON LG.GROUP_ID = ML.GROUP_ID
                        //                      WHERE ML.GROUP_ID NOT IN (12, 13, 14)
                        //                        AND LG.NATURE_ID IN (1, 2, 3, 4)
                        //                        AND LB.PROJECT_ID IN (25)
                        //                        AND LB.BRANCH_ID IN (9)
                        //                      GROUP BY LEDGER_ID) BAL
                        //               LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = BAL.LEDGER_ID
                        //LEFT JOIN (SELECT ML.LEDGER_ID, SUM(IF(LB.TRANS_MODE = 'DR', -IFNULL(LB.AMOUNT, 0), IFNULL(LB.AMOUNT, 0))) AMOUNT_ACTUAL
                        //                       FROM (SELECT LB1.BALANCE_DATE,
                        //                                    LB1.PROJECT_ID,
                        //                                    LB1.BRANCH_ID,
                        //                                    LB1.LEDGER_ID,
                        //                                    LB1.AMOUNT,
                        //                                    LB1.TRANS_MODE
                        //                               FROM LEDGER_BALANCE AS LB1
                        //                               LEFT JOIN (SELECT P.CUSTOMERID, LBA.PROJECT_ID,
                        //                                                LBA.LEDGER_ID,
                        //                                                LBA.BRANCH_ID,
                        //                                                MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                                           FROM LEDGER_BALANCE LBA
                        //                                             INNER JOIN MASTER_PROJECT P
                        //                                             ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                                          WHERE 1 = 1
                        //                                            AND LBA.BALANCE_DATE <'2020-01-01 00:00:00'
                        //                                            AND LBA.PROJECT_ID IN (25)
                        //                                            AND LBA.BRANCH_ID IN (9)
                        //                                          GROUP BY LBA.BRANCH_ID,
                        //                                                   LBA.PROJECT_ID,
                        //                                                   LBA.LEDGER_ID) AS LB2
                        //                                 ON LB1.BRANCH_ID = LB2.BRANCH_ID
                        //                                AND LB1.PROJECT_ID = LB2.PROJECT_ID
                        //                                AND LB1.LEDGER_ID = LB2.LEDGER_ID
                        //                                AND LB1.BRANCH_ID = LB2.BRANCH_ID
                        //                              WHERE  LB1.PROJECT_ID IN (25)
                        //                                AND LB1.BRANCH_ID IN (9)
                        //                                AND LB1.BALANCE_DATE = LB2.BAL_DATE) LB
                        //                      INNER JOIN MASTER_LEDGER ML
                        //                         ON ML.LEDGER_ID = LB.LEDGER_ID
                        //                      INNER JOIN MASTER_LEDGER_GROUP LG
                        //                         ON LG.GROUP_ID = ML.GROUP_ID
                        //                      WHERE ML.GROUP_ID NOT IN (12, 13, 14)
                        //                        AND LG.NATURE_ID IN (1, 2, 3, 4)
                        //                        AND LB.PROJECT_ID IN (25)
                        //                        AND LB.BRANCH_ID IN (9)
                        //                      GROUP BY LEDGER_ID) BAL_OP ON CLM.LEDGER_ID = BAL_OP.LEDGER_ID


                        //              GROUP BY CLM.CON_LEDGER_ID) AS GEN_BAL
                        //    ON GEN_BAL.CON_LEDGER_ID = CL.CON_LEDGER_ID
                        // WHERE CL1.CON_LEDGER_NAME <> CL2.CON_LEDGER_NAME
                        // ORDER BY LENGTH(CL.CON_LEDGER_CODE), CL.CON_LEDGER_CODE;

                        break;
                    }
                case ReportSQLCommand.Generalate.GeneralateActivityGSTLedgerIncomeExpense:
                    {
                        query = @"SELECT VT.LEDGER_ID , SUM(IF(VT.TRANS_MODE = 'CR', VT.AMOUNT, 0)) AS INCOME," +
                                "SUM(IF(VT.TRANS_MODE = 'DR', VT.AMOUNT, 0)) AS EXPENSE\n" +
                                "FROM VOUCHER_MASTER_TRANS VM\n" +
                                "INNER JOIN VOUCHER_TRANS VT ON VT.VOUCHER_ID = VM.VOUCHER_ID AND VT.BRANCH_ID = VM.BRANCH_ID AND VT.LOCATION_ID = VM.LOCATION_ID\n" +
                                "AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND VT.LEDGER_ID IN (2244, 2245, 2246)\n" +
                                "WHERE VM.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "AND VM.PROJECT_ID IN (?PROJECT_ID) AND VM.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND VM.STATUS=1\n" +
                                "GROUP BY VT.LEDGER_ID";
                        break;
                    }
                case ReportSQLCommand.Generalate.GeneralateCommercialIncomeExpense:
                    {
                        query = "SELECT MPC.PROJECT_CATOGORY_ID, MPC.PROJECT_CATOGORY_NAME,\n" +
                                "ABS(SUM(IF(AMOUNT<=0, AMOUNT, 0))) AS PAYMENT,  SUM(IF(AMOUNT>0, AMOUNT, 0)) AS RECEIPT\n" +
                                "FROM (SELECT IE.PROJECT_CATEGORY_ID, IE.LEDGER_ID, SUM(IE.AMOUNT) AMOUNT\n" +
                                "FROM (SELECT PROJECT_CATEGORY_ID, LB.LEDGER_ID,\n" +
                                "SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT\n" +
                                "FROM LEDGER_BALANCE AS LB\n" +
                                "INNER JOIN (SELECT P.PROJECT_CATEGORY_ID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                                "          FROM LEDGER_BALANCE LBA\n" +
                                "          INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                                "          WHERE 1 = 1 AND LBA.BALANCE_DATE <=?DATE_TO AND LBA.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND LBA.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "          GROUP BY P.PROJECT_CATEGORY_ID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1\n" +
                                "          ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                                "WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY PROJECT_CATEGORY_ID, LB.LEDGER_ID\n" +
                                "UNION ALL\n" +
                                "SELECT PROJECT_CATEGORY_ID, LB.LEDGER_ID,\n" +
                                "-SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT\n" +
                                "FROM LEDGER_BALANCE AS LB\n" +
                                "INNER JOIN (SELECT P.PROJECT_CATEGORY_ID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                                "          FROM LEDGER_BALANCE LBA\n" +
                                "          INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                                "          WHERE 1 = 1 AND LBA.BALANCE_DATE <?DATE_FROM AND LBA.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND LBA.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "          GROUP BY P.PROJECT_CATEGORY_ID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1\n" +
                                "          ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                                "WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY PROJECT_CATEGORY_ID, LB.LEDGER_ID) AS IE\n" +
                                "INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID\n" +
                                "INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID\n" +
                                "WHERE LG.NATURE_ID IN (1,2)\n" +
                                "GROUP BY IE.PROJECT_CATEGORY_ID, IE.LEDGER_ID) AS LEBAL\n" +
                                "INNER JOIN master_project_catogory MPC ON MPC.PROJECT_CATOGORY_ID = LEBAL.PROJECT_CATEGORY_ID\n" +
                                "GROUP BY LEBAL.PROJECT_CATEGORY_ID;";
                        break;
                    }
                case ReportSQLCommand.Generalate.GeneralateActivityIncomeExpenseFA:
                    {
                        query = "SELECT CL.CON_LEDGER_ID,\n" +
                       "       CL.CON_PARENT_LEDGER_ID,\n" +
                       "       CL1.CON_PARENT_LEDGER_ID AS CON_MAIN_PARENT_ID,\n" +
                       "       CL1.CON_LEDGER_NAME AS MASTER_NAME,\n" +
                       "       CL.CON_LEDGER_NAME,\n" +
                       "       ML.LEDGER_ID,\n" +
                       "       ML.LEDGER_CODE,\n" +
                       "       ML.LEDGER_NAME,\n" +
                       "       IF(SUM(IE.AMOUNT) >0,SUM(IE.AMOUNT),0) AS NXTRECEIPT,\n" +
                       "       IF(SUM(IE.AMOUNT) <0,ABS(SUM(IE.AMOUNT)),0) AS NXTPAYMENT\n" +
                       "  FROM CONGREGATION_LEDGER AS CL\n" +
                       " INNER JOIN CONGREGATION_LEDGER_MAP CLM\n" +
                       "   ON CLM.CON_LEDGER_ID = CL.CON_LEDGER_ID\n" +
                       " INNER JOIN CONGREGATION_LEDGER AS CL1\n" +
                       "   ON CL1.CON_LEDGER_ID = CL.CON_PARENT_LEDGER_ID\n" +
                       "   INNER JOIN MASTER_LEDGER ML\n" +
                       "   ON ML.LEDGER_ID = CLM.LEDGER_ID AND CL.CON_LEDGER_CODE IN ('G','G1','G2','H','H1','H2','I','I1','I2','L','L1','L2')\n" +
                       " LEFT JOIN (SELECT MP.CUSTOMERID,\n" +
                       "                    ML.LEDGER_ID,\n" +
                       "                    ML.LEDGER_NAME,\n" +
                       "                    (CASE\n" +
                       "                      WHEN (SUM(CASE\n" +
                       "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                   IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                  ELSE\n" +
                       "                                   -IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                END)) >= 0 THEN\n" +
                       "                       - (SUM(CASE\n" +
                       "                                WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                 IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                ELSE\n" +
                       "                                 -IFNULL(LB2.AMOUNT, 0)\n" +
                       "                              END))\n" +
                       "                      ELSE\n" +
                       "                       ABS(SUM(CASE\n" +
                       "                                 WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                  IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                 ELSE\n" +
                       "                                  -IFNULL(LB2.AMOUNT, 0)\n" +
                       "                               END))\n" +
                       "                    END) AS AMOUNT,\n" +
                       "                    SUM(CASE\n" +
                       "                          WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                           LB2.AMOUNT\n" +
                       "                          ELSE\n" +
                       "                           0\n" +
                       "                        END) AS AMOUNT_DR,\n" +
                       "                    SUM(CASE\n" +
                       "                          WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                       "                           LB2.AMOUNT\n" +
                       "                          ELSE\n" +
                       "                           0\n" +
                       "                        END) AS AMOUNT_CR,\n" +
                       "                    CASE\n" +
                       "                      WHEN (SUM(CASE\n" +
                       "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                   LB2.AMOUNT\n" +
                       "                                  ELSE\n" +
                       "                                   -LB2.AMOUNT\n" +
                       "                                END) >= 0) THEN\n" +
                       "                       'DR'\n" +
                       "                      ELSE\n" +
                       "                       'CR'\n" +
                       "                    END AS TRANS_MODE\n" +
                       "               FROM MASTER_LEDGER AS ML\n" +
                       "              INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                       "                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                       "              INNER JOIN MASTER_PROJECT AS MP\n" +
                       "                 ON MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                       "              INNER JOIN PROJECT_LEDGER AS PL\n" +
                       "                 ON PL.PROJECT_ID = MP.PROJECT_ID\n" +
                       "                AND PL.LEDGER_ID = ML.LEDGER_ID\n" +
                       "              INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                       "                                LB1.CUSTOMERID,\n" +
                       "                                LB.PROJECT_ID,\n" +
                       "                                LB.LEDGER_ID,\n" +
                       "                                LB.AMOUNT,\n" +
                       "                                LB.TRANS_MODE\n" +
                       "                           FROM LEDGER_BALANCE AS LB\n" +
                       "                          INNER JOIN (SELECT P.CUSTOMERID,\n" +
                       "                                            LBA.PROJECT_ID,\n" +
                       "                                            LBA.LEDGER_ID,\n" +
                       "                                            MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                       "                                       FROM LEDGER_BALANCE LBA\n" +
                       "                                      INNER JOIN MASTER_PROJECT P\n" +
                       "                                         ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                       "                                      WHERE 1 = 1\n" +
                       "                                        AND LBA.BALANCE_DATE <=\n" +
                       "                                            ?DATE_TO\n" +
                       "                                      GROUP BY P.CUSTOMERID,\n" +
                       "                                               LBA.PROJECT_ID,\n" +
                       "                                               LBA.LEDGER_ID) AS LB1\n" +
                       "                             ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                       "                            AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                       "                          WHERE { LB1.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND } LB.BALANCE_DATE = LB1.BAL_DATE) LB2 \n" +
                       "                 ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                       "                AND MP.CUSTOMERID = LB2.CUSTOMERID\n" +
                       "                AND PL.PROJECT_ID = LB2.PROJECT_ID\n" +
                       "              WHERE 1 = 1\n" +
                       "                AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                       "                AND LG.NATURE_ID IN (1, 2,3,4)\n" +
                       "              GROUP BY ML.LEDGER_ID\n" +
                       "             UNION ALL\n" +
                       "             SELECT MP.CUSTOMERID,\n" +
                       "                    ML.LEDGER_ID,\n" +
                       "                    ML.LEDGER_NAME,\n" +
                       "                    - (CASE\n" +
                       "                        WHEN (SUM(CASE\n" +
                       "                                    WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                     IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                    ELSE\n" +
                       "                                     -IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                  END)) >= 0 THEN\n" +
                       "                         - (SUM(CASE\n" +
                       "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                   IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                  ELSE\n" +
                       "                                   -IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                END))\n" +
                       "                        ELSE\n" +
                       "                         ABS(SUM(CASE\n" +
                       "                                   WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                    IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                   ELSE\n" +
                       "                                    -IFNULL(LB2.AMOUNT, 0)\n" +
                       "                                 END))\n" +
                       "                      END) AS AMOUNT,\n" +
                       "                    -SUM(CASE\n" +
                       "                           WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                            LB2.AMOUNT\n" +
                       "                           ELSE\n" +
                       "                            0\n" +
                       "                         END) AS AMOUNT_DR,\n" +
                       "                    -SUM(CASE\n" +
                       "                           WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                       "                            LB2.AMOUNT\n" +
                       "                           ELSE\n" +
                       "                            0\n" +
                       "                         END) AS AMOUNT_CR,\n" +
                       "                    CASE\n" +
                       "                      WHEN (SUM(CASE\n" +
                       "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                       "                                   LB2.AMOUNT\n" +
                       "                                  ELSE\n" +
                       "                                   -LB2.AMOUNT\n" +
                       "                                END) >= 0) THEN\n" +
                       "                       'DR'\n" +
                       "                      ELSE\n" +
                       "                       'CR'\n" +
                       "                    END AS TRANS_MODE\n" +
                       "               FROM MASTER_LEDGER AS ML\n" +
                       "              INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                       "                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                       "              INNER JOIN MASTER_PROJECT AS MP\n" +
                       "                 ON MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                       "              INNER JOIN PROJECT_LEDGER AS PL\n" +
                       "                 ON PL.PROJECT_ID = MP.PROJECT_ID\n" +
                       "                AND PL.LEDGER_ID = ML.LEDGER_ID\n" +
                       "              INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                       "                                 LB1.CUSTOMERID,\n" +
                       "                                 LB.PROJECT_ID,\n" +
                       "                                 LB.LEDGER_ID,\n" +
                       "                                 LB.AMOUNT,\n" +
                       "                                 LB.TRANS_MODE\n" +
                       "                            FROM LEDGER_BALANCE AS LB\n" +
                       "                           INNER JOIN (SELECT P.CUSTOMERID,\n" +
                       "                                             LBA.PROJECT_ID,\n" +
                       "                                             LBA.LEDGER_ID,\n" +
                       "                                             MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                       "                                        FROM LEDGER_BALANCE LBA\n" +
                       "                                       INNER JOIN MASTER_PROJECT P\n" +
                       "                                          ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                       "                                       WHERE 1 = 1\n" +
                       "                                         AND LBA.BALANCE_DATE <\n" +
                       "                                             ?DATE_FROM\n" +
                       "                                       GROUP BY P.CUSTOMERID,\n" +
                       "                                                LBA.PROJECT_ID,\n" +
                       "                                                LBA.LEDGER_ID) AS LB1\n" +
                       "                              ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                       "                             AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                       "                           WHERE { LB1.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND }   LB.BALANCE_DATE = LB1.BAL_DATE) LB2 \n" +
                       "                 ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                       "                AND MP.CUSTOMERID = LB2.CUSTOMERID\n" +
                       "                AND PL.PROJECT_ID = LB2.PROJECT_ID\n" +
                       "              WHERE 1 = 1\n" +
                       "                AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                       "                AND LG.NATURE_ID IN (1, 2,3,4)\n" +
                       "              GROUP BY MP.CUSTOMERID, ML.LEDGER_ID) AS IE\n" +
                       "    ON IE.LEDGER_ID = CLM.LEDGER_ID AND CL.CON_LEDGER_CODE IN ('G','G1','G2','H','H1','H2','I','I1','I2','L','L1','L2')\n" +
                       " GROUP BY CL.CON_LEDGER_ID, ML.LEDGER_ID ORDER BY LENGTH(ML.LEDGER_CODE), ML.LEDGER_CODE;";
                        break;
                    }

                case ReportSQLCommand.Generalate.GeneralatePatrimonial:
                    {
                        query = "SELECT IF(CB.GROUP_ID=13,0,1) AS SORT_ID, CB.GROUP_ID, CB.LEDGER_ID, CB.BANK, CB.LEDGER_NAME, SUM(CB.AMOUNT_OP) AS AMOUNT_OP, SUM(CB.AMOUNT_CL) AS AMOUNT_CL\n" +
                            "FROM\n" +
                            "(SELECT ML.GROUP_ID, ML.LEDGER_ID, CASE WHEN ML.GROUP_ID = 12 THEN CONCAT(MB.BANK, CONCAT(' -', MB.BRANCH)) ELSE '' END AS BANK, ML.LEDGER_NAME,\n" +
                            "ABS(SUM(CASE WHEN LB2.TRANS_MODE = 'DR' THEN LB2.AMOUNT ELSE - LB2.AMOUNT END)) AS AMOUNT_OP, 0 AS AMOUNT_CL\n" +
                            "FROM MASTER_LEDGER AS ML\n" +
                            "LEFT JOIN MASTER_BANK_ACCOUNT AS MBA ON ML.LEDGER_ID = MBA.LEDGER_ID AND MBA.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                            "LEFT JOIN MASTER_BANK AS MB  ON MBA.BANK_ID = MB.BANK_ID\n" +
                            "INNER JOIN\n" +
                            "(SELECT LB.BALANCE_DATE, LB.PROJECT_ID, LB.LEDGER_ID, LB.AMOUNT, LB.TRANS_MODE,LB.BRANCH_ID\n" +
                            "  FROM LEDGER_BALANCE AS LB\n" +
                            "  LEFT JOIN (SELECT LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                            "        FROM LEDGER_BALANCE LBA\n" +
                            "        WHERE 1 = 1  AND LBA.BALANCE_DATE < ?DATE_FROM AND LBA.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                            "        GROUP BY LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1 ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                            "         WHERE LB.PROJECT_ID IN (?PROJECT_ID) AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                            "  ON ML.LEDGER_ID = LB2.LEDGER_ID AND IF(ML.GROUP_ID =12, MBA.BRANCH_ID = LB2.BRANCH_ID, MBA.BRANCH_ID IS NULL)\n" +
                            "WHERE 1 = 1  AND ML.GROUP_ID IN (12, 13)  AND LB2.BRANCH_ID IN (?BRANCH_OFFICE_ID) GROUP BY ML.LEDGER_ID\n" +
                            "UNION ALL\n" +
                            "SELECT ML.GROUP_ID, ML.LEDGER_ID, CASE WHEN ML.GROUP_ID = 12 THEN CONCAT(MB.BANK, CONCAT(' -', MB.BRANCH)) ELSE '' END AS BANK, ML.LEDGER_NAME,\n" +
                            "0 AS AMOUNT_OP, ABS(SUM(CASE WHEN LB2.TRANS_MODE = 'DR' THEN LB2.AMOUNT ELSE - LB2.AMOUNT END)) AS AMOUNT_CL\n" +
                            "FROM MASTER_LEDGER AS ML\n" +
                            "LEFT JOIN MASTER_BANK_ACCOUNT AS MBA ON ML.LEDGER_ID = MBA.LEDGER_ID AND MBA.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                            "LEFT JOIN MASTER_BANK AS MB  ON MBA.BANK_ID = MB.BANK_ID\n" +
                            "INNER JOIN\n" +
                            "(SELECT LB.BALANCE_DATE, LB.PROJECT_ID, LB.LEDGER_ID, LB.AMOUNT, LB.TRANS_MODE,LB.BRANCH_ID\n" +
                            "  FROM LEDGER_BALANCE AS LB\n" +
                            "  LEFT JOIN (SELECT LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                            "        FROM LEDGER_BALANCE LBA\n" +
                            "        WHERE 1 = 1  AND LBA.BALANCE_DATE <= ?DATE_TO AND LBA.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                            "        GROUP BY LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1 ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                            "         WHERE LB.PROJECT_ID IN (?PROJECT_ID) AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                            " ON ML.LEDGER_ID = LB2.LEDGER_ID AND IF(ML.GROUP_ID =12, MBA.BRANCH_ID = LB2.BRANCH_ID, MBA.BRANCH_ID IS NULL)\n" +
                            "WHERE 1 = 1  AND ML.GROUP_ID IN (12, 13)  AND LB2.BRANCH_ID IN (?BRANCH_OFFICE_ID) GROUP BY ML.LEDGER_ID) AS CB GROUP BY CB.LEDGER_ID\n" +
                            "UNION ALL\n" + //For FD A/c BALANCE
                            "SELECT 2 AS SORT_ID, FDBAL.GROUP_ID, FDBAL.FD_ACCOUNT_ID, FDBAL.BANK, FDBAL.LEDGER_NAME,\n" +
                            "SUM(FDBAL.AMOUNT_OP) AS AMOUNT_OP, SUM(FDBAL.AMOUNT_CL) AS AMOUNT_CL\n" +
                            "FROM\n" +
                            "(SELECT 14 AS GROUP_ID, FDA.FD_ACCOUNT_ID, FDA.FD_ACCOUNT_NUMBER AS 'LEDGER_NAME',\n" +
                            //"CONCAT(MBK.BANK, IF(MBK.BRANCH IS NULL OR MBK.BRANCH = '', '', CONCAT(' - ', MBK.BRANCH))  ) AS BANK,\n" +
                            "'Fixed Deposit' AS BANK,\n" +
                            "FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                            "IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                            "IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                            "IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS AMOUNT_OP, 0 AMOUNT_CL\n" +
                            "FROM FD_ACCOUNT AS FDA\n" +
                            "LEFT JOIN (SELECT FD_ACCOUNT_ID,\n" +
                            "     SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                            "     SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT, SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                            "     FROM FD_RENEWAL WHERE STATUS = 1 AND BRANCH_ID IN (?BRANCH_OFFICE_ID) AND RENEWAL_DATE < DATE_SUB(?DATE_FROM, INTERVAL 1 DAY)\n" +
                            "     GROUP BY FD_ACCOUNT_ID) AS FDRO ON FDA.FD_ACCOUNT_ID = FDRO.FD_ACCOUNT_ID\n" +
                            "LEFT JOIN (SELECT FD_ACCOUNT_ID, SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                            "     SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                            "     SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                            "     FROM FD_RENEWAL WHERE STATUS = 1 AND BRANCH_ID IN (?BRANCH_OFFICE_ID) AND RENEWAL_DATE BETWEEN DATE_SUB(?DATE_FROM, INTERVAL 1 DAY) AND DATE_SUB(?DATE_FROM, INTERVAL 1 DAY)\n" +
                            "     GROUP BY FD_ACCOUNT_ID) AS FDR ON FDA.FD_ACCOUNT_ID = FDR.FD_ACCOUNT_ID\n" +
                            "LEFT JOIN MASTER_BANK AS MBK ON FDA.BANK_ID = MBK.BANK_ID\n" +
                            "LEFT JOIN MASTER_LEDGER MLG ON FDA.LEDGER_ID = MLG.LEDGER_ID\n" +
                            "WHERE FDA.STATUS = 1 AND FDA.INVESTMENT_DATE <= DATE_SUB(?DATE_FROM, INTERVAL 1 DAY)\n" +
                            "AND FDA.PROJECT_ID IN (?PROJECT_ID) AND FDA.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                            "AND FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) - IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) != 0\n" +
                            "UNION ALL\n" +
                            "SELECT 14 AS GROUP_ID, FDA.FD_ACCOUNT_ID, FDA.FD_ACCOUNT_NUMBER AS 'LEDGER_NAME',\n" +
                            //"CONCAT(MBK.BANK, IF(MBK.BRANCH IS NULL OR MBK.BRANCH = '', '', CONCAT(' - ', MBK.BRANCH))  ) AS BANK,\n" +
                            "'Fixed Deposit' AS BANK, 0 AS AMOUNT_OP,\n" +
                            "FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                            "IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                            "IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                            "IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS AMOUNT_CL\n" +
                            "FROM FD_ACCOUNT AS FDA\n" +
                            "LEFT JOIN (SELECT FD_ACCOUNT_ID,\n" +
                            "     SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                            "     SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT, SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                            "     FROM FD_RENEWAL WHERE STATUS = 1 AND BRANCH_ID IN (?BRANCH_OFFICE_ID) AND RENEWAL_DATE < ?DATE_TO\n" +
                            "     GROUP BY FD_ACCOUNT_ID) AS FDRO ON FDA.FD_ACCOUNT_ID = FDRO.FD_ACCOUNT_ID\n" +
                            "LEFT JOIN (SELECT FD_ACCOUNT_ID, SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                            "     SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                            "     SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                            "     FROM FD_RENEWAL WHERE STATUS = 1 AND BRANCH_ID IN (?BRANCH_OFFICE_ID) AND RENEWAL_DATE BETWEEN ?DATE_TO AND ?DATE_TO\n" +
                            "     GROUP BY FD_ACCOUNT_ID) AS FDR ON FDA.FD_ACCOUNT_ID = FDR.FD_ACCOUNT_ID\n" +
                            "LEFT JOIN MASTER_BANK AS MBK ON FDA.BANK_ID = MBK.BANK_ID\n" +
                            "LEFT JOIN MASTER_LEDGER MLG ON FDA.LEDGER_ID = MLG.LEDGER_ID\n" +
                            "WHERE FDA.STATUS = 1 AND FDA.INVESTMENT_DATE <= ?DATE_TO\n" +
                            "AND FDA.PROJECT_ID IN (?PROJECT_ID) AND FDA.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                            "AND FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) - IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) != 0) FDBAL GROUP BY FDBAL.FD_ACCOUNT_ID;";
                        break;
                    }
                #endregion

                #region Profit and Loss by House wise

                case ReportSQLCommand.Generalate.ProfitandLossbyHoseWise:
                    {
                        //On 09/11/2020, to have proper Income  -Expense Side (C-Expense. D-Income)
                        query = @"SELECT C.CID,  MIP.SOCIETYNAME, MIP.PRINCIPAL_ACTIVITY, ABS(SUM(IF(CON_LEDGER_CODE LIKE '%C%', AMOUNT, 0))) AS PAYMENT, 
                                    ABS(SUM(IF(CON_LEDGER_CODE LIKE '%D%', AMOUNT, 0))) AS RECEIPT
                                    FROM (SELECT IE.CUSTOMERID AS CID, MPCG.PROJECT_CATOGORY_GROUP_ID, CL.CON_LEDGER_CODE, CL.CON_LEDGER_ID, SUM(IE.AMOUNT) AS AMOUNT
                                    FROM (SELECT MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, VT.LEDGER_ID, SUM( IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)) ) AS AMOUNT
                                    FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, PROJECT_ID, VOUCHER_TYPE, VOUCHER_DATE, STATUS
                                          FROM VOUCHER_MASTER_TRANS WHERE STATUS=1 AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO 
                                          AND PROJECT_ID IN (?PROJECT_ID) {AND BRANCH_ID IN (?BRANCH_ID)} ) AS VMT
                                    INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID {AND VT.BRANCH_ID IN (?BRANCH_ID)}
                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND MP.PROJECT_ID IN (?PROJECT_ID)
                                    -- INNER JOIN PROJECT_BRANCH PB ON PB.PROJECT_ID = MP.PROJECT_ID AND PB.BRANCH_ID = VMT.BRANCH_ID
                                    WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND MP.PROJECT_ID IN (?PROJECT_ID) AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) {AND VMT.BRANCH_ID IN (?BRANCH_ID)}
                                        AND VMT.VOUCHER_TYPE IN ('RC', 'PY', 'JN') AND VMT.STATUS=1 AND VT.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                                    GROUP BY MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, VT.LEDGER_ID) AS IE
                                    INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID
                                    INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID
                                    INNER JOIN MASTER_PROJECT_CATOGORY MPC ON MPC.PROJECT_CATOGORY_ID = IE.PROJECT_CATEGORY_ID
                                    LEFT JOIN MASTER_PROJECT_CATOGORY_GROUP MPCG ON MPCG.PROJECT_CATOGORY_GROUP_ID = MPC.PROJECT_CATOGORY_GROUP_ID
                                    LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = IE.LEDGER_ID AND CLM.PROJECT_CATOGORY_GROUP_ID = MPCG.PROJECT_CATOGORY_GROUP_ID
                                    LEFT JOIN CONGREGATION_LEDGER AS CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                                    WHERE LG.NATURE_ID IN (1,2)
                                    GROUP BY MPC.PROJECT_CATOGORY_GROUP_ID, CUSTOMERID, CL.CON_LEDGER_ID) AS C
                                    INNER JOIN MASTER_INSTI_PERFERENCE MIP ON MIP.CUSTOMERID = C.CID GROUP BY C.CID";

                        //On 11/11/2020, Records from ledger Balance
                        //(SELECT PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID,
                        //    SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT
                        //    FROM LEDGER_BALANCE AS LB
                        //    INNER JOIN (SELECT P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //              FROM LEDGER_BALANCE LBA
                        //              INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //              WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <=?DATE_TO AND LBA.LEDGER_ID NOT IN(?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //              GROUP BY P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //              ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //    WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID
                        //    UNION ALL
                        //    SELECT PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID,
                        //    -SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT
                        //    FROM LEDGER_BALANCE AS LB
                        //    INNER JOIN (SELECT P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //              FROM LEDGER_BALANCE LBA
                        //              INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //              WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <?DATE_FROM AND LBA.LEDGER_ID NOT IN(?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //              GROUP BY P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //              ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //    WHERE LB.BRANCH_ID  = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID)

                        /*query = @"SELECT FINAL.CUSTOMERID, MIP.SOCIETYNAME, MIP.PRINCIPAL_ACTIVITY, ABS(SUM(IF(AMOUNT<=0, AMOUNT, 0))) AS PAYMENT,  SUM(IF(AMOUNT>0, AMOUNT, 0)) AS RECEIPT
                                     FROM (SELECT LEBAL.CUSTOMERID, SUM(AMOUNT) AMOUNT
                                      FROM (SELECT IE.CUSTOMERID, IE.LEDGER_ID, SUM(IE.AMOUNT) AMOUNT
                                    FROM (SELECT CUSTOMERID, LB.LEDGER_ID,
                                    SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT
                                    FROM LEDGER_BALANCE AS LB
                                    INNER JOIN (SELECT P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                                             FROM LEDGER_BALANCE LBA
                                             INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                                             WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID) AND LBA.BALANCE_DATE <=?DATE_TO
                                             GROUP BY P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                                             ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                                    WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY CUSTOMERID, LB.LEDGER_ID
                                    UNION ALL
                                    SELECT CUSTOMERID, LB.LEDGER_ID,
                                    -SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT
                                    FROM LEDGER_BALANCE AS LB
                                    INNER JOIN (SELECT P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                                             FROM LEDGER_BALANCE LBA
                                             INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                                             WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID) AND LBA.BALANCE_DATE <?DATE_FROM
                                             GROUP BY P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                                             ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                                    WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY CUSTOMERID, LB.LEDGER_ID) AS IE
                                    INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID
                                    INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID
                                    WHERE LG.NATURE_ID IN (1,2) AND IE.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                                    GROUP BY IE.CUSTOMERID, IE.LEDGER_ID) AS LEBAL
                                    LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = LEBAL.LEDGER_ID AND CLM.PROJECT_CATOGORY_GROUP_ID = 2
                                    LEFT JOIN CONGREGATION_LEDGER CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                                    INNER JOIN MASTER_INSTI_PERFERENCE MIP ON MIP.CUSTOMERID = LEBAL.CUSTOMERID
                                    GROUP BY LEBAL.CUSTOMERID, CL.CON_LEDGER_ID) AS FINAL
                                    INNER JOIN MASTER_INSTI_PERFERENCE MIP ON MIP.CUSTOMERID = FINAL.CUSTOMERID
                                    GROUP BY FINAL.CUSTOMERID;";*/

                        //query = "SELECT MIP.SOCIETYNAME, MIP.PRINCIPAL_ACTIVITY,\n" +
                        //            "ABS(SUM(IF(AMOUNT<=0, AMOUNT, 0))) AS PAYMENT,  SUM(IF(AMOUNT>0, AMOUNT, 0)) AS RECEIPT\n" +
                        //            "FROM (SELECT IE.CUSTOMERID, IE.LEDGER_ID, SUM(IE.AMOUNT) AMOUNT\n" +
                        //            "FROM (SELECT CUSTOMERID, LB.LEDGER_ID,\n" +
                        //            "SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT\n" +
                        //            "FROM LEDGER_BALANCE AS LB\n" +
                        //            "INNER JOIN (SELECT P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //            "          FROM LEDGER_BALANCE LBA\n" +
                        //            "          INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                        //            "          WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <=?DATE_TO AND LBA.LEDGER_ID NOT IN(?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)\n" +
                        //            "          GROUP BY P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1\n" +
                        //            "          ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //            "WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY CUSTOMERID, LB.LEDGER_ID\n" +
                        //            "UNION ALL\n" +
                        //            "SELECT CUSTOMERID, LB.LEDGER_ID,\n" +
                        //            "-SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT\n" +
                        //            "FROM LEDGER_BALANCE AS LB\n" +
                        //            "INNER JOIN (SELECT P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //            "          FROM LEDGER_BALANCE LBA\n" +
                        //            "          INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                        //            "          WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <?DATE_FROM AND LBA.LEDGER_ID NOT IN(?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)\n" +
                        //            "          GROUP BY P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1\n" +
                        //            "          ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //            "WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY CUSTOMERID, LB.LEDGER_ID) AS IE\n" +
                        //            "INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID\n" +
                        //            "INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID\n" +
                        //            "WHERE LG.NATURE_ID IN (1,2)\n" +
                        //            "GROUP BY IE.CUSTOMERID, IE.LEDGER_ID) AS LEBAL\n" +
                        //            "INNER JOIN MASTER_INSTI_PERFERENCE MIP ON MIP.CUSTOMERID = LEBAL.CUSTOMERID\n" +
                        //            "GROUP BY LEBAL.CUSTOMERID;";

                        //On 31/10/2019
                        //query = "SELECT LE.CUSTOMERID,\n" +
                        //"       LE.SOCIETYNAME,LE.PRINCIPAL_ACTIVITY,\n" +
                        //"       SUM(IE.AMOUNT) AS FINAL,\n" +
                        //"       SUM(IE.AMOUNT_CR) AS RECEIPT,\n" +
                        //"       SUM(IE.AMOUNT_DR) AS PAYMENT\n" +
                        //"  FROM MASTER_INSTI_PERFERENCE AS LE\n" +
                        //" INNER JOIN (SELECT MP.CUSTOMERID,\n" +
                        //"                    (CASE\n" +
                        //"                      WHEN (SUM(CASE\n" +
                        //"                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //"                                   IFNULL(LB2.AMOUNT, 0)\n" +
                        //"                                  ELSE\n" +
                        //"                                   -IFNULL(LB2.AMOUNT, 0)\n" +
                        //"                                END)) >= 0 THEN\n" +
                        //"                       - (SUM(CASE\n" +
                        //"                                WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //"                                 IFNULL(LB2.AMOUNT, 0)\n" +
                        //"                                ELSE\n" +
                        //"                                 -IFNULL(LB2.AMOUNT, 0)\n" +
                        //"                              END))\n" +
                        //"                      ELSE\n" +
                        //"                       ABS(SUM(CASE\n" +
                        //"                                 WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //"                                  IFNULL(LB2.AMOUNT, 0)\n" +
                        //"                                 ELSE\n" +
                        //"                                  -IFNULL(LB2.AMOUNT, 0)\n" +
                        //"                               END))\n" +
                        //"                    END) AS AMOUNT,\n" +
                        //"                    SUM(CASE\n" +
                        //"                          WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //"                           LB2.AMOUNT\n" +
                        //"                          ELSE\n" +
                        //"                           0\n" +
                        //"                        END) AS AMOUNT_DR,\n" +
                        //"                    SUM(CASE\n" +
                        //"                          WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        //"                           LB2.AMOUNT\n" +
                        //"                          ELSE\n" +
                        //"                           0\n" +
                        //"                        END) AS AMOUNT_CR,\n" +
                        //"                    CASE\n" +
                        //"                      WHEN (SUM(CASE\n" +
                        //"                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //"                                   LB2.AMOUNT\n" +
                        //"                                  ELSE\n" +
                        //"                                   -LB2.AMOUNT\n" +
                        //"                                END) >= 0) THEN\n" +
                        //"                       'DR'\n" +
                        //"                      ELSE\n" +
                        //"                       'CR'\n" +
                        //"                    END AS TRANS_MODE\n" +
                        //"               FROM MASTER_LEDGER AS ML\n" +
                        //"              INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        //"                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //"              INNER JOIN MASTER_PROJECT AS MP\n" +
                        //"                 ON MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                        //"              INNER JOIN PROJECT_LEDGER AS PL\n" +
                        //"                 ON PL.PROJECT_ID = MP.PROJECT_ID\n" +
                        //"                AND PL.LEDGER_ID = ML.LEDGER_ID\n" +
                        //"               LEFT JOIN (SELECT LB.BALANCE_DATE,\n" +
                        //"                                LB1.CUSTOMERID,\n" +
                        //"                                LB.PROJECT_ID,\n" +
                        //"                                LB.LEDGER_ID,\n" +
                        //"                                LB.AMOUNT,\n" +
                        //"                                LB.TRANS_MODE\n" +
                        //"                           FROM LEDGER_BALANCE AS LB\n" +
                        //"                           LEFT JOIN (SELECT P.CUSTOMERID,\n" +
                        //"                                            LBA.PROJECT_ID,\n" +
                        //"                                            LBA.LEDGER_ID,\n" +
                        //"                                            MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //"                                       FROM LEDGER_BALANCE LBA\n" +
                        //"                                      INNER JOIN MASTER_PROJECT P\n" +
                        //"                                         ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                        //"                                      WHERE 1 = 1\n" +
                        //"                                        AND LBA.BALANCE_DATE <=?DATE_TO\n" +
                        //"                                      GROUP BY P.CUSTOMERID,\n" +
                        //"                                               LBA.PROJECT_ID,\n" +
                        //"                                               LBA.LEDGER_ID) AS LB1\n" +
                        //"                             ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        //"                            AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //"                          WHERE LB1.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                        //"                            AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                        //"                 ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        //"                AND MP.CUSTOMERID = LB2.CUSTOMERID\n" +
                        //"                AND PL.PROJECT_ID = LB2.PROJECT_ID\n" +
                        //"              WHERE 1 = 1\n" +
                        //"                AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                        //"                AND LG.NATURE_ID IN (1, 2)\n" +
                        //"              GROUP BY MP.CUSTOMERID\n" +
                        //"             UNION ALL\n" +
                        //"             SELECT MP.CUSTOMERID,\n" +
                        //"                    - (CASE\n" +
                        //"                        WHEN (SUM(CASE\n" +
                        //"                                    WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //"                                     IFNULL(LB2.AMOUNT, 0)\n" +
                        //"                                    ELSE\n" +
                        //"                                     -IFNULL(LB2.AMOUNT, 0)\n" +
                        //"                                  END)) >= 0 THEN\n" +
                        //"                         - (SUM(CASE\n" +
                        //"                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //"                                   IFNULL(LB2.AMOUNT, 0)\n" +
                        //"                                  ELSE\n" +
                        //"                                   -IFNULL(LB2.AMOUNT, 0)\n" +
                        //"                                END))\n" +
                        //"                        ELSE\n" +
                        //"                         ABS(SUM(CASE\n" +
                        //"                                   WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //"                                    IFNULL(LB2.AMOUNT, 0)\n" +
                        //"                                   ELSE\n" +
                        //"                                    -IFNULL(LB2.AMOUNT, 0)\n" +
                        //"                                 END))\n" +
                        //"                      END) AS AMOUNT,\n" +
                        //"                    -SUM(CASE\n" +
                        //"                           WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //"                            LB2.AMOUNT\n" +
                        //"                           ELSE\n" +
                        //"                            0\n" +
                        //"                         END) AS AMOUNT_DR,\n" +
                        //"                    -SUM(CASE\n" +
                        //"                           WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        //"                            LB2.AMOUNT\n" +
                        //"                           ELSE\n" +
                        //"                            0\n" +
                        //"                         END) AS AMOUNT_CR,\n" +
                        //"                    CASE\n" +
                        //"                      WHEN (SUM(CASE\n" +
                        //"                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //"                                   LB2.AMOUNT\n" +
                        //"                                  ELSE\n" +
                        //"                                   -LB2.AMOUNT\n" +
                        //"                                END) >= 0) THEN\n" +
                        //"                       'DR'\n" +
                        //"                      ELSE\n" +
                        //"                       'CR'\n" +
                        //"                    END AS TRANS_MODE\n" +
                        //"               FROM MASTER_LEDGER AS ML\n" +
                        //"              INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        //"                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //"              INNER JOIN MASTER_PROJECT AS MP\n" +
                        //"                 ON MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                        //"              INNER JOIN PROJECT_LEDGER AS PL\n" +
                        //"                 ON PL.PROJECT_ID = MP.PROJECT_ID\n" +
                        //"                AND PL.LEDGER_ID = ML.LEDGER_ID\n" +
                        //"               LEFT JOIN (SELECT LB.BALANCE_DATE,\n" +
                        //"                                 LB1.CUSTOMERID,\n" +
                        //"                                 LB.PROJECT_ID,\n" +
                        //"                                 LB.LEDGER_ID,\n" +
                        //"                                 LB.AMOUNT,\n" +
                        //"                                 LB.TRANS_MODE\n" +
                        //"                            FROM LEDGER_BALANCE AS LB\n" +
                        //"                            LEFT JOIN (SELECT P.CUSTOMERID,\n" +
                        //"                                             LBA.PROJECT_ID,\n" +
                        //"                                             LBA.LEDGER_ID,\n" +
                        //"                                             MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //"                                        FROM LEDGER_BALANCE LBA\n" +
                        //"                                       INNER JOIN MASTER_PROJECT P\n" +
                        //"                                          ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                        //"                                       WHERE 1 = 1\n" +
                        //"                                         AND LBA.BALANCE_DATE <?DATE_FROM\n" +
                        //"                                       GROUP BY P.CUSTOMERID,\n" +
                        //"                                                LBA.PROJECT_ID,\n" +
                        //"                                                LBA.LEDGER_ID) AS LB1\n" +
                        //"                              ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        //"                             AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //"                           WHERE LB1.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                        //"                             AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                        //"                 ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        //"                AND MP.CUSTOMERID = LB2.CUSTOMERID\n" +
                        //"                AND PL.PROJECT_ID = LB2.PROJECT_ID\n" +
                        //"              WHERE 1 = 1\n" +
                        //"                AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                        //"                AND LG.NATURE_ID IN (1, 2)\n" +
                        //"              GROUP BY MP.CUSTOMERID) AS IE\n" +
                        //"    ON IE.CUSTOMERID = LE.CUSTOMERID\n" +
                        //" GROUP BY LE.CUSTOMERID";

                        //query = "SELECT MIP.CUSTOMERID,\n" +
                        //        "       MIP.SOCIETYNAME,PRINCIPAL_ACTIVITY,\n" +
                        //        "       IFNULL(SUM(DDF.RECEIPT), 0.00) AS RECEIPT,\n" +
                        //        "       IFNULL(SUM(DDF.PAYMENT), 0.00) AS PAYMENT,\n" +
                        //        "       IFNULL(SUM(FINAL), 0.00) AS FINAL\n" +
                        //        "  FROM MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "  LEFT JOIN (SELECT IFNULL(BO.BRANCH_OFFICE_ID, '') AS BRANCH_ID,\n" +
                        //        "                    MIP.CUSTOMERID,\n" +
                        //        "                    SOCIETYNAME,\n" +
                        //        "                    IFNULL(BO.BRANCH_OFFICE_NAME, '') AS BRANCH_OFFICE_NAME,\n" +
                        //        "                    IFNULL(MP.PROJECT_ID, '') AS PROJECT_ID,\n" +
                        //        "                    IFNULL(MP.PROJECT, '') AS PROJECT,\n" +
                        //        "                    IFNULL((FNL.RECEIPT), 0.00) AS RECEIPT,\n" +
                        //        "                    IFNULL((FNL.PAYMENT), 0.00) AS PAYMENT,\n" +
                        //        "                    IFNULL((FNL.FINAL), 0.00) AS FINAL\n" +
                        //        "               FROM (SELECT BRANCH_ID,\n" +
                        //        "                            BRANCH_OFFICE_NAME,\n" +
                        //        "                            PROJECT_ID,\n" +
                        //        "                            PROJECT,\n" +
                        //        "                            SUM(RECEIPT) AS RECEIPT,\n" +
                        //        "                            SUM(PAYMENT) AS PAYMENT,\n" +
                        //        "                            SUM((RECEIPT) - (PAYMENT)) AS FINAL\n" +
                        //        "                       FROM (SELECT MP.PROJECT_ID,\n" +
                        //        "                                    MP.PROJECT,\n" +
                        //        "                                    BRANCH_ID,\n" +
                        //        "                                    BRANCH_OFFICE_NAME,\n" +
                        //        "                                    SUM(RECEIPT) AS RECEIPT,\n" +
                        //        "                                    0 AS PAYMENT\n" +
                        //        "                               FROM (SELECT (T.RECEIPTAMT) AS RECEIPT,\n" +
                        //        "                                            T.SORT_ORDER,\n" +
                        //        "                                            PROJECT_ID,\n" +
                        //        "                                            BRANCH_ID\n" +
                        //        "                                       FROM (SELECT ML.LEDGER_ID,\n" +
                        //        "                                                    MT.PROJECT_ID,\n" +
                        //        "                                                    MT.BRANCH_ID,\n" +
                        //        "                                                    ML.GROUP_ID,\n" +
                        //        "                                                    LG.GROUP_CODE,\n" +
                        //        "                                                    CASE\n" +
                        //        "                                                      WHEN PARENT_GROUP_ID IN\n" +
                        //        "                                                           (1, 2, 3, 4) THEN\n" +
                        //        "                                                       CONCAT(LG.LEDGER_GROUP)\n" +
                        //        "                                                      ELSE\n" +
                        //        "                                                       CONCAT('  ',\n" +
                        //        "                                                              LG.LEDGER_GROUP)\n" +
                        //        "                                                    END AS LEDGER_GROUP,\n" +
                        //        "                                                    ML.LEDGER_CODE,\n" +
                        //        "                                                    LG.SORT_ORDER,\n" +
                        //        "                                                    CASE\n" +
                        //        "                                                      WHEN SUM(CASE\n" +
                        //        "                                                                 WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                                                                  VT.AMOUNT\n" +
                        //        "                                                                 ELSE\n" +
                        //        "                                                                  -VT.AMOUNT\n" +
                        //        "                                                               END) < 0 THEN\n" +
                        //        "                                                       ABS(SUM(CASE\n" +
                        //        "                                                                 WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                                                                  VT.AMOUNT\n" +
                        //        "                                                                 ELSE\n" +
                        //        "                                                                  -VT.AMOUNT\n" +
                        //        "                                                               END))\n" +
                        //        "                                                    END AS RECEIPTAMT\n" +
                        //        "                                               FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "                                               LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                                                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                                               LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                                                 ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                                               LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                                                 ON VT.VOUCHER_ID =\n" +
                        //        "                                                    MT.VOUCHER_ID\n" +
                        //        "                                                AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                                                AND MT.STATUS = 1\n" +
                        //        "                                                AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                                                AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "                                                AND LG.NATURE_ID NOT IN (3, 4)\n" +
                        //        " WHERE MT.PROJECT_ID in (select project_id from master_project where CUSTOMERID IN (?LEGAL_ENTITY_ID))\n" +
                        //        "                                              GROUP BY VT.BRANCH_ID,VT.LEDGER_ID) AS T\n" +
                        //        "                                      WHERE T.RECEIPTAMT > 0\n" +
                        //        "                                      ORDER BY SORT_ORDER) AS TT\n" +
                        //        "                              INNER JOIN MASTER_PROJECT MP\n" +
                        //        "                                 ON TT.PROJECT_ID = MP.PROJECT_ID\n" +
                        //        "                              INNER JOIN BRANCH_OFFICE BO\n" +
                        //        "                                 ON TT.BRANCH_ID = BO.BRANCH_OFFICE_ID\n" +
                        //        "                              GROUP BY PROJECT_ID\n" +
                        //        "                             UNION ALL\n" +
                        //        "                             SELECT MP.PROJECT_ID,\n" +
                        //        "                                    MP.PROJECT,\n" +
                        //        "                                    BRANCH_ID,\n" +
                        //        "                                    BRANCH_OFFICE_NAME,\n" +
                        //        "                                    0 AS RECEIPT,\n" +
                        //        "                                    SUM(PAYMENT) AS PAYMENT\n" +
                        //        "                               FROM (SELECT (T.PAYMENTAMT) AS PAYMENT,\n" +
                        //        "                                            T.SORT_ORDER,\n" +
                        //        "                                            PROJECT_ID,\n" +
                        //        "                                            BRANCH_ID\n" +
                        //        "                                       FROM (SELECT ML.LEDGER_ID,\n" +
                        //        "                                                    ML.GROUP_ID,\n" +
                        //        "                                                    MT.PROJECT_ID,\n" +
                        //        "                                                    MT.BRANCH_ID,\n" +
                        //        "                                                    LG.GROUP_CODE,\n" +
                        //        "                                                    CASE\n" +
                        //        "                                                      WHEN PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                        //        "                                                       CONCAT(LG.LEDGER_GROUP)\n" +
                        //        "                                                      ELSE\n" +
                        //        "                                                       CONCAT('  ',\n" +
                        //        "                                                              LG.LEDGER_GROUP)\n" +
                        //        "                                                    END AS LEDGER_GROUP,\n" +
                        //        "                                                    ML.LEDGER_CODE,\n" +
                        //        "                                                    LG.SORT_ORDER,\n" +
                        //        "                                                    CASE\n" +
                        //        "                                                      WHEN SUM(CASE\n" +
                        //        "                                                                 WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                                                                  VT.AMOUNT\n" +
                        //        "                                                                 ELSE\n" +
                        //        "                                                                  -VT.AMOUNT\n" +
                        //        "                                                               END) > 0 THEN\n" +
                        //        "                                                       ABS(SUM(CASE\n" +
                        //        "                                                                 WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                                                                  VT.AMOUNT\n" +
                        //        "                                                                 ELSE\n" +
                        //        "                                                                  -VT.AMOUNT\n" +
                        //        "                                                               END))\n" +
                        //        "                                                    END AS PAYMENTAMT\n" +
                        //        "                                               FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "                                               LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                                                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                                               LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                                                 ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                                               LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                                                 ON VT.VOUCHER_ID =\n" +
                        //        "                                                    MT.VOUCHER_ID\n" +
                        //        "                                                AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                                                AND MT.STATUS = 1\n" +
                        //        "                                                AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                                                AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "                                                AND LG.NATURE_ID NOT IN (3, 4)\n" +
                        //        " WHERE MT.PROJECT_ID in (select project_id from master_project where CUSTOMERID IN (?LEGAL_ENTITY_ID))\n" +
                        //        "                                             GROUP BY VT.BRANCH_ID,VT.LEDGER_ID) AS T\n" +
                        //        "                                      WHERE T.PAYMENTAMT > 0\n" +
                        //        "                                      ORDER BY SORT_ORDER) AS TT\n" +
                        //        "                              INNER JOIN MASTER_PROJECT MP\n" +
                        //        "                                 ON TT.PROJECT_ID = MP.PROJECT_ID\n" +
                        //        "                              INNER JOIN BRANCH_OFFICE BO\n" +
                        //        "                                 ON TT.BRANCH_ID = BO.BRANCH_OFFICE_ID\n" +
                        //        "                              GROUP BY PROJECT_ID) AS PYMT\n" +
                        //        "                      GROUP BY BRANCH_ID, PROJECT\n" +
                        //        "                      ORDER BY PROJECT_ID) AS FNL\n" +
                        //        "              RIGHT JOIN MASTER_PROJECT MP\n" +
                        //        "                 ON MP.PROJECT_ID = FNL.PROJECT_ID\n" +
                        //        "              RIGHT JOIN PROJECT_BRANCH PB\n" +
                        //        "                 ON MP.PROJECT_ID = PB.PROJECT_ID\n" +
                        //        "              RIGHT JOIN BRANCH_OFFICE BO\n" +
                        //        "                 ON PB.BRANCH_ID = BO.BRANCH_OFFICE_ID\n" +
                        //        "                AND MP.PROJECT_ID = PB.PROJECT_ID\n" +
                        //        "                AND BO.BRANCH_OFFICE_ID = FNL.BRANCH_ID\n" +
                        //        "               JOIN master_insti_perference MIP\n" +
                        //        "                 ON MP.CUSTOMERID = MIP.CUSTOMERID\n" +
                        //        "              WHERE MP.PROJECT <> ''\n" +
                        //        "                AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                        //        "            --   GROUP BY MP.CUSTOMERID, SOCIETYNAME\n" +
                        //        "              ORDER BY BRANCH_OFFICE_NAME, PROJECT ASC) AS DDF\n" +
                        //        "    ON MIP.CUSTOMERID = DDF.CUSTOMERID\n" +
                        //        " WHERE MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                        //        " GROUP BY CUSTOMERID\n" +
                        //        " ORDER BY SOCIETYNAME";
                        break;
                    }

                case ReportSQLCommand.Generalate.ProfitandLossbyBranchHousewise:
                    {
                        query = "SELECT IE.BRANCH_ID,\n" +
                        "       BO.BRANCH_OFFICE_NAME,\n" +
                        "       ABS(SUM(IF(IE.AMOUNT > 0, AMOUNT, 0))) AS RECEIPT,\n" +
                        "       ABS(SUM(IF(IE.AMOUNT < 0, AMOUNT, 0))) AS PAYMENT\n" +
                        "  FROM (SELECT PB.BRANCH_ID,\n" +
                        "               ML.LEDGER_ID,\n" +
                        "               SUM(IF(VT.TRANS_MODE = 'CR',\n" +
                        "                      -- (IF(VT.TRANS_MODE = 'CR',\n" +
                        "                      IFNULL(VT.AMOUNT, 0),\n" +
                        "                      -IFNULL(VT.AMOUNT, 0))) AS AMOUNT\n" +
                        "          FROM VOUCHER_MASTER_TRANS AS VMT\n" +
                        "         INNER JOIN VOUCHER_TRANS AS VT\n" +
                        "            ON VT.BRANCH_ID = VMT.BRANCH_ID\n" +
                        "           AND VT.VOUCHER_ID = VMT.VOUCHER_ID\n" +
                        "           AND VT.LOCATION_ID = VMT.LOCATION_ID\n" +
                        "         INNER JOIN MASTER_PROJECT MP\n" +
                        "            ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                        "         INNER JOIN PROJECT_BRANCH PB\n" +
                        "            ON PB.PROJECT_ID = MP.PROJECT_ID\n" +
                        "           AND PB.BRANCH_ID = VMT.BRANCH_ID\n" +
                        "           AND PB.PROJECT_ID = VMT.PROJECT_ID\n" +
                        "         INNER JOIN MASTER_LEDGER ML\n" +
                        "            ON ML.LEDGER_ID = VT.LEDGER_ID\n" +
                        "         INNER JOIN MASTER_LEDGER_GROUP LG\n" +
                        "            ON LG.GROUP_ID = ML.GROUP_ID\n" +
                        "         WHERE PB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        "           AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        "           AND VMT.STATUS = 1\n" +
                        "           AND LG.NATURE_ID IN (1, 2)\n" +
                        "         GROUP BY PB.BRANCH_ID, ML.LEDGER_ID) AS IE\n" +
                        "  LEFT JOIN BRANCH_OFFICE BO\n" +
                        "    ON BO.BRANCH_OFFICE_ID = IE.BRANCH_ID\n" +
                        " GROUP BY IE.BRANCH_ID;";

                        //                        query = @"SELECT BO.BRANCH_OFFICE_NAME, ABS(SUM(IF(CON_LEDGER_CODE LIKE '%C%', AMOUNT, 0))) AS PAYMENT,
                        //                                    ABS(SUM(IF(CON_LEDGER_CODE LIKE '%D%', AMOUNT, 0))) AS RECEIPT
                        //                                    FROM (SELECT IE.CUSTOMERID AS CID, MPCG.PROJECT_CATOGORY_GROUP_ID,IE.BRANCH_ID, CL.CON_LEDGER_CODE, CL.CON_LEDGER_ID,
                        //                                     SUM(IE.AMOUNT) AS AMOUNT
                        //                                    FROM (SELECT MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, PB.BRANCH_ID,VT.LEDGER_ID, SUM( IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)) ) AS AMOUNT
                        //                                    FROM VOUCHER_MASTER_TRANS AS VMT
                        //                                    INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID
                        //                                    AND VT.LOCATION_ID = VMT.LOCATION_ID
                        //                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)
                        //                                    INNER JOIN PROJECT_BRANCH PB ON PB.PROJECT_ID = MP.PROJECT_ID AND PB.BRANCH_ID = VMT.BRANCH_ID
                        //                                    WHERE PB.BRANCH_ID IN (?BRANCH_OFFICE_ID) AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND MP.PROJECT_ID IN (?PROJECT_ID)
                        //                                    AND VMT.VOUCHER_TYPE IN ('RC', 'PY', 'JN') AND VMT.STATUS=1 AND VT.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                                    GROUP BY MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID ,PB.BRANCH_ID, VT.LEDGER_ID) AS IE
                        //                                    INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID
                        //                                    INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID
                        //                                    INNER JOIN MASTER_PROJECT_CATOGORY MPC ON MPC.PROJECT_CATOGORY_ID = IE.PROJECT_CATEGORY_ID
                        //                                    LEFT JOIN MASTER_PROJECT_CATOGORY_GROUP MPCG ON MPCG.PROJECT_CATOGORY_GROUP_ID = MPC.PROJECT_CATOGORY_GROUP_ID
                        //                                    LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = IE.LEDGER_ID AND CLM.PROJECT_CATOGORY_GROUP_ID = MPCG.PROJECT_CATOGORY_GROUP_ID
                        //                                    LEFT JOIN CONGREGATION_LEDGER AS CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                        //                                    WHERE LG.NATURE_ID IN (1,2)
                        //                                    GROUP BY MPC.PROJECT_CATOGORY_GROUP_ID, CUSTOMERID,BRANCH_ID, CL.CON_LEDGER_ID) AS C
                        //                                    -- INNER JOIN MASTER_INSTI_PERFERENCE MIP ON MIP.CUSTOMERID = C.CID
                        //                                    LEFT JOIN BRANCH_OFFICE BO ON BO.BRANCH_OFFICE_ID = C.BRANCH_ID
                        //                                     GROUP BY  C.BRANCH_ID ORDER BY BO.BRANCH_OFFICE_NAME;";
                        break;
                    }

                case ReportSQLCommand.Generalate.ProfitandLossbyHoseWiseInterAcc:
                    {
                        query = @"SELECT C.CID,  MIP.SOCIETYNAME, MIP.PRINCIPAL_ACTIVITY, ABS(SUM(IF(C.CON_LEDGER_CODE LIKE '%C%', AMOUNT, 0))) AS PAYMENT, 
                                                ABS(SUM(IF(C.CON_LEDGER_CODE LIKE '%D%', AMOUNT, 0))) AS RECEIPT,
                                                SUM(INTER_CR) AS INTER_CR, SUM(INTER_DR) AS INTER_DR, 
                                                SUM(CONTRIBUTION_FROM_CR) AS CONTRIBUTION_FROM_CR, SUM(CONTRIBUTION_TO_DR) AS CONTRIBUTION_TO_DR
                                                FROM (SELECT IE.CUSTOMERID AS CID, MPCG.PROJECT_CATOGORY_GROUP_ID, CL.CON_LEDGER_CODE, CL.CON_LEDGER_ID, 
                                                SUM(IE.AMOUNT) AS AMOUNT, SUM(IE.INTER_CR) AS INTER_CR, SUM(IE.INTER_DR) AS INTER_DR,
                                                SUM(IE.CONTRIBUTION_FROM_CR) AS CONTRIBUTION_FROM_CR, SUM(IE.CONTRIBUTION_TO_DR) AS CONTRIBUTION_TO_DR
                                                FROM
                                                (SELECT MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, VT.LEDGER_ID, 
                                                SUM( IF(VT.TRANS_MODE = 'CR', IF(VT.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID, ?INTER_AC_FROM_TRANSFER_ID, ?INTER_AC_TO_TRANSFER_ID),
                                                       IFNULL(VT.AMOUNT,0), 0) , -IF(VT.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID, ?INTER_AC_FROM_TRANSFER_ID, ?INTER_AC_TO_TRANSFER_ID), 
                                                       IFNULL(VT.AMOUNT,0), 0) ) ) AS AMOUNT,
                                                SUM(IF(TRANS_MODE='CR' AND VT.LEDGER_ID IN (?INTER_AC_FROM_TRANSFER_ID), AMOUNT,0)) AS INTER_CR,
                                                SUM(IF(TRANS_MODE='DR' AND VT.LEDGER_ID IN (?INTER_AC_TO_TRANSFER_ID), AMOUNT,0)) AS INTER_DR,
                                                SUM(IF(TRANS_MODE='CR' AND VT.LEDGER_ID IN (?CONTRIBUTION_FROM_PROVINCE_ID), AMOUNT,0)) AS CONTRIBUTION_FROM_CR,
                                                SUM(IF(TRANS_MODE='DR' AND VT.LEDGER_ID IN (?CONTRIBUTION_TO_PROVINCE_ID), AMOUNT,0)) AS CONTRIBUTION_TO_DR
                                                FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, PROJECT_ID, VOUCHER_TYPE, VOUCHER_DATE, STATUS
                                                      FROM VOUCHER_MASTER_TRANS WHERE STATUS = 1 AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND PROJECT_ID IN (?PROJECT_ID)
                                                      {AND BRANCH_ID IN (?BRANCH_ID)}) AS VMT
                                                INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID {AND VT.BRANCH_ID IN (?BRANCH_ID)}
                                                INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND MP.PROJECT_ID IN (?PROJECT_ID)
                                                WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND MP.PROJECT_ID IN (?PROJECT_ID) AND 
                                                    MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) {AND VMT.BRANCH_ID IN (?BRANCH_ID)} AND VMT.VOUCHER_TYPE IN ('RC', 'PY', 'JN') AND VMT.STATUS=1 
                                                GROUP BY MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, VT.LEDGER_ID) AS IE
                                                INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID
                                                INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID
                                                INNER JOIN MASTER_PROJECT_CATOGORY MPC ON MPC.PROJECT_CATOGORY_ID = IE.PROJECT_CATEGORY_ID
                                                LEFT JOIN MASTER_PROJECT_CATOGORY_GROUP MPCG ON MPCG.PROJECT_CATOGORY_GROUP_ID = MPC.PROJECT_CATOGORY_GROUP_ID
                                                LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = IE.LEDGER_ID AND CLM.PROJECT_CATOGORY_GROUP_ID = MPCG.PROJECT_CATOGORY_GROUP_ID
                                                LEFT JOIN CONGREGATION_LEDGER AS CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                                                WHERE (LG.NATURE_ID IN (1,2) OR ML.LEDGER_ID IN (?INTER_AC_FROM_TRANSFER_ID, ?INTER_AC_TO_TRANSFER_ID))
                                                GROUP BY MPC.PROJECT_CATOGORY_GROUP_ID, CUSTOMERID, CL.CON_LEDGER_ID) AS C
                                                INNER JOIN MASTER_INSTI_PERFERENCE MIP ON MIP.CUSTOMERID = C.CID GROUP BY C.CID";

                        //On 09/11/2020, to have proper Income  -Expense Side (C-Expense. D-Income) - Final
                        //                        query = @"SELECT C.CID,  MIP.SOCIETYNAME, MIP.PRINCIPAL_ACTIVITY, ABS(SUM(IF(C.CON_LEDGER_CODE LIKE '%C%', AMOUNT, 0))) AS PAYMENT, 
                        //                                    ABS(SUM(IF(C.CON_LEDGER_CODE LIKE '%D%', AMOUNT, 0))) AS RECEIPT,
                        //                                    IFNULL(INTER_CR, 0) AS INTER_CR, IFNULL(INTER_DR, 0) AS INTER_DR, IFNULL(CONTRIBUTION_FROM_CR,0) AS CONTRIBUTION_FROM_CR, IFNULL(CONTRIBUTION_TO_DR,0) AS CONTRIBUTION_TO_DR
                        //                                    FROM (SELECT IE.CUSTOMERID AS CID, MPCG.PROJECT_CATOGORY_GROUP_ID, CL.CON_LEDGER_CODE, CL.CON_LEDGER_ID, SUM(IE.AMOUNT) AS AMOUNT
                        //                                    FROM
                        //                                    (SELECT MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, VT.LEDGER_ID, SUM( IF(VT.TRANS_MODE = 'CR', IFNULL(VT.AMOUNT,0), -IFNULL(VT.AMOUNT,0)) ) AS AMOUNT
                        //                                    FROM VOUCHER_MASTER_TRANS AS VMT
                        //                                    INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID
                        //                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND MP.PROJECT_ID IN (?PROJECT_ID) 
                        //                                    -- INNER JOIN PROJECT_BRANCH PB ON PB.PROJECT_ID = MP.PROJECT_ID AND PB.BRANCH_ID = VMT.BRANCH_ID
                        //                                    WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND MP.PROJECT_ID IN (?PROJECT_ID) AND 
                        //                                        MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND VMT.VOUCHER_TYPE IN ('RC', 'PY', 'JN') AND VMT.STATUS=1 
                        //                                        AND VT.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                                    GROUP BY MP.PROJECT_CATEGORY_ID, MP.CUSTOMERID, VT.LEDGER_ID) AS IE
                        //                                    INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID
                        //                                    INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID
                        //                                    INNER JOIN MASTER_PROJECT_CATOGORY MPC ON MPC.PROJECT_CATOGORY_ID = IE.PROJECT_CATEGORY_ID
                        //                                    LEFT JOIN MASTER_PROJECT_CATOGORY_GROUP MPCG ON MPCG.PROJECT_CATOGORY_GROUP_ID = MPC.PROJECT_CATOGORY_GROUP_ID
                        //                                    LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = IE.LEDGER_ID AND CLM.PROJECT_CATOGORY_GROUP_ID = MPCG.PROJECT_CATOGORY_GROUP_ID
                        //                                    LEFT JOIN CONGREGATION_LEDGER AS CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                        //                                    WHERE LG.NATURE_ID IN (1,2)
                        //                                    GROUP BY MPC.PROJECT_CATOGORY_GROUP_ID, CUSTOMERID, CL.CON_LEDGER_ID) AS C
                        //                                    LEFT JOIN (SELECT MP.CUSTOMERID, SUM(IF(TRANS_MODE='CR' AND VT.LEDGER_ID=?INTER_AC_TRANSFER_ID,AMOUNT,0)) AS INTER_CR,
                        //                                    SUM(IF(TRANS_MODE='DR' AND VT.LEDGER_ID=?INTER_AC_TRANSFER_ID,AMOUNT,0)) AS INTER_DR,
                        //                                    SUM(IF(TRANS_MODE='CR' AND VT.LEDGER_ID=?CONTRIBUTION_FROM_PROVINCE_ID,AMOUNT,0)) AS CONTRIBUTION_FROM_CR,
                        //                                    SUM(IF(TRANS_MODE='DR' AND VT.LEDGER_ID=?CONTRIBUTION_TO_PROVINCE_ID,AMOUNT,0)) AS CONTRIBUTION_TO_DR
                        //                                    FROM VOUCHER_MASTER_TRANS VMT
                        //                                    INNER JOIN VOUCHER_TRANS VT ON VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.BRANCH_ID = VMT.BRANCH_ID
                        //                                    AND VT.LOCATION_ID = VMT.LOCATION_ID AND VT.LEDGER_ID IN (?LEDGER_ID)
                        //                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID
                        //                                    WHERE VMT.STATUS=1 AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND MP.PROJECT_ID IN (?PROJECT_ID)
                        //                                    AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) GROUP BY MP.CUSTOMERID) AS INTER_AC_BAL ON INTER_AC_BAL.CUSTOMERID = C.CID
                        //                                    INNER JOIN MASTER_INSTI_PERFERENCE MIP ON MIP.CUSTOMERID = C.CID GROUP BY C.CID";

                        //on 11/11/2020, Records from ledger Balance
                        //(SELECT PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID,
                        //            SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT
                        //            FROM LEDGER_BALANCE AS LB
                        //            INNER JOIN (SELECT P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                      FROM LEDGER_BALANCE LBA
                        //                      INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                      WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <=?DATE_TO AND LBA.LEDGER_ID NOT IN(?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                      GROUP BY P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                      ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //            WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID
                        //            UNION ALL
                        //            SELECT PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID,
                        //            -SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT
                        //            FROM LEDGER_BALANCE AS LB
                        //            INNER JOIN (SELECT P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                        //                      FROM LEDGER_BALANCE LBA
                        //                      INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID
                        //                      WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.BALANCE_DATE <?DATE_FROM AND LBA.LEDGER_ID NOT IN(?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID)
                        //                      GROUP BY P.PROJECT_CATEGORY_ID, P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1
                        //                      ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID
                        //            WHERE LB.BRANCH_ID  = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY PROJECT_CATEGORY_ID, CUSTOMERID, LB.LEDGER_ID) AS IE


                        //query = "SELECT MIP.CUSTOMERID, MIP.SOCIETYNAME, MIP.PRINCIPAL_ACTIVITY,\n" +
                        //            "ABS(SUM(IF(AMOUNT<=0, AMOUNT, 0))) AS PAYMENT, SUM(IF(AMOUNT>0, AMOUNT, 0)) AS RECEIPT,\n" +
                        //            "IFNULL(INTER_CR, 0) AS INTER_CR, IFNULL(INTER_DR, 0) AS INTER_DR,\n" +
                        //            "IFNULL(CONTRIBUTION_FROM_CR,0) AS CONTRIBUTION_FROM_CR, IFNULL(CONTRIBUTION_TO_DR,0) AS CONTRIBUTION_TO_DR\n" +
                        //            "FROM (SELECT IE.CUSTOMERID, IE.LEDGER_ID, SUM(IE.AMOUNT) AMOUNT\n" +
                        //            "FROM (SELECT CUSTOMERID, LB.LEDGER_ID,\n" +
                        //            "SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT\n" +
                        //            "FROM LEDGER_BALANCE AS LB\n" +
                        //            "INNER JOIN (SELECT P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //            "         FROM LEDGER_BALANCE LBA\n" +
                        //            "         INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                        //            "         WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.LEDGER_ID NOT IN (?LEDGER_ID) AND LBA.BALANCE_DATE <=?DATE_TO\n" +
                        //            "         GROUP BY P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1\n" +
                        //            "         ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //            "WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY CUSTOMERID, LB.LEDGER_ID\n" +
                        //            "UNION ALL\n" +
                        //            "SELECT CUSTOMERID, LB.LEDGER_ID,\n" +
                        //            "-SUM(IF(LB.TRANS_MODE ='CR', LB.AMOUNT, -LB.AMOUNT)) AS AMOUNT\n" +
                        //            "FROM LEDGER_BALANCE AS LB\n" +
                        //            "INNER JOIN (SELECT P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //            "         FROM LEDGER_BALANCE LBA\n" +
                        //            "         INNER JOIN MASTER_PROJECT P ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                        //            "         WHERE 1 = 1 AND P.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND LBA.LEDGER_ID NOT IN (?LEDGER_ID) AND LBA.BALANCE_DATE <?DATE_FROM\n" +
                        //            "         GROUP BY P.CUSTOMERID, LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB1\n" +
                        //            "         ON LB.BRANCH_ID = LB1.BRANCH_ID AND LB.PROJECT_ID = LB1.PROJECT_ID AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //            "WHERE LB.BRANCH_ID = LB1.BRANCH_ID AND LB.BALANCE_DATE = LB1.BAL_DATE GROUP BY CUSTOMERID, LB.LEDGER_ID) AS IE\n" +
                        //            "INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID\n" +
                        //            "INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID\n" +
                        //            "WHERE LG.NATURE_ID IN (1,2) AND IE.LEDGER_ID NOT IN (?LEDGER_ID)\n" +
                        //            "GROUP BY IE.CUSTOMERID, IE.LEDGER_ID) AS LEBAL\n" +
                        //            "INNER JOIN MASTER_INSTI_PERFERENCE MIP ON MIP.CUSTOMERID = LEBAL.CUSTOMERID\n" +
                        //            "  LEFT JOIN (SELECT MP.CUSTOMERID, SUM(IF(TRANS_MODE='CR' AND VT.LEDGER_ID=?INTER_AC_TRANSFER_ID,AMOUNT,0)) AS INTER_CR,\n" +
                        //            "  SUM(IF(TRANS_MODE='DR' AND VT.LEDGER_ID=?INTER_AC_TRANSFER_ID,AMOUNT,0)) AS INTER_DR,\n" +
                        //            "  SUM(IF(TRANS_MODE='CR' AND VT.LEDGER_ID=?CONTRIBUTION_FROM_PROVINCE_ID,AMOUNT,0)) AS CONTRIBUTION_FROM_CR,\n" +
                        //            "  SUM(IF(TRANS_MODE='DR' AND VT.LEDGER_ID=?CONTRIBUTION_TO_PROVINCE_ID,AMOUNT,0)) AS CONTRIBUTION_TO_DR\n" +
                        //            "  FROM VOUCHER_MASTER_TRANS VMT\n" +
                        //            "  INNER JOIN VOUCHER_TRANS VT ON VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.BRANCH_ID = VMT.BRANCH_ID\n" +
                        //            "  AND VT.LOCATION_ID = VMT.LOCATION_ID AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                        //            "  INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                        //            "  WHERE VMT.STATUS=1 AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //            "  AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) GROUP BY MP.CUSTOMERID) AS INTER_AC_BAL\n" +
                        //            "ON INTER_AC_BAL.CUSTOMERID = LEBAL.CUSTOMERID\n" +
                        //            "GROUP BY LEBAL.CUSTOMERID;";

                        //On 31/10/2019
                        //query = "SELECT LE.CUSTOMERID,\n" +
                        // "       LE.SOCIETYNAME,LE.PRINCIPAL_ACTIVITY,\n" +
                        // "       SUM(IFNULL(IE.AMOUNT_CR,0)) AS RECEIPT,\n" +
                        // "       SUM(IFNULL(IE.AMOUNT_DR,0)) AS PAYMENT,\n" +
                        // "       IFNULL(INTER_CR, 0) AS INTER_CR,\n" +
                        // "       IFNULL(INTER_DR, 0) AS INTER_DR,\n" +
                        // "       IFNULL(CONTRIBUTION_FROM_CR, 0 ) AS CONTRIBUTION_FROM_CR,\n" +
                        // "       IFNULL(CONTRIBUTION_TO_DR, 0) AS CONTRIBUTION_TO_DR,\n" +
                        // "       (SUM(IFNULL(IE.AMOUNT_CR,0))+ IFNULL(INTER_CR,0) + IFNULL(CONTRIBUTION_FROM_CR,0)) AS TOTAL_CR,\n" +
                        // "       (SUM(IFNULL(IE.AMOUNT_DR,0))+ IFNULL(INTER_DR,0) + IFNULL(CONTRIBUTION_TO_DR,0)) AS TOTAL_DR,\n" +
                        // "       (SUM(IFNULL(IE.AMOUNT_CR,0))+ IFNULL(INTER_CR,0) + IFNULL(CONTRIBUTION_FROM_CR,0)) - (SUM(IFNULL(IE.AMOUNT_DR,0))+ IFNULL(INTER_DR,0) + IFNULL(CONTRIBUTION_TO_DR,0)) AS FINAL\n" +
                        // "  FROM MASTER_INSTI_PERFERENCE AS LE\n" +
                        // " INNER JOIN (SELECT MP.CUSTOMERID,\n" +
                        // "                    (CASE\n" +
                        // "                      WHEN (SUM(CASE\n" +
                        // "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        // "                                   IFNULL(LB2.AMOUNT, 0)\n" +
                        // "                                  ELSE\n" +
                        // "                                   -IFNULL(LB2.AMOUNT, 0)\n" +
                        // "                                END)) >= 0 THEN\n" +
                        // "                       - (SUM(CASE\n" +
                        // "                                WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        // "                                 IFNULL(LB2.AMOUNT, 0)\n" +
                        // "                                ELSE\n" +
                        // "                                 -IFNULL(LB2.AMOUNT, 0)\n" +
                        // "                              END))\n" +
                        // "                      ELSE\n" +
                        // "                       ABS(SUM(CASE\n" +
                        // "                                 WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        // "                                  IFNULL(LB2.AMOUNT, 0)\n" +
                        // "                                 ELSE\n" +
                        // "                                  -IFNULL(LB2.AMOUNT, 0)\n" +
                        // "                               END))\n" +
                        // "                    END) AS AMOUNT,\n" +
                        // "                    SUM(CASE\n" +
                        // "                          WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        // "                           LB2.AMOUNT\n" +
                        // "                          ELSE\n" +
                        // "                           0\n" +
                        // "                        END) AS AMOUNT_DR,\n" +
                        // "                    SUM(CASE\n" +
                        // "                          WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        // "                           LB2.AMOUNT\n" +
                        // "                          ELSE\n" +
                        // "                           0\n" +
                        // "                        END) AS AMOUNT_CR,\n" +
                        // "                    CASE\n" +
                        // "                      WHEN (SUM(CASE\n" +
                        // "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        // "                                   LB2.AMOUNT\n" +
                        // "                                  ELSE\n" +
                        // "                                   -LB2.AMOUNT\n" +
                        // "                                END) >= 0) THEN\n" +
                        // "                       'DR'\n" +
                        // "                      ELSE\n" +
                        // "                       'CR'\n" +
                        // "                    END AS TRANS_MODE\n" +
                        // "               FROM MASTER_LEDGER AS ML\n" +
                        // "              INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        // "                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        // "              INNER JOIN MASTER_PROJECT AS MP\n" +
                        // "                 ON MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                        // "              INNER JOIN PROJECT_LEDGER AS PL\n" +
                        // "                 ON PL.PROJECT_ID = MP.PROJECT_ID\n" +
                        // "                AND PL.LEDGER_ID = ML.LEDGER_ID\n" +
                        // "               LEFT JOIN (SELECT LB.BALANCE_DATE,\n" +
                        // "                                LB1.CUSTOMERID,\n" +
                        // "                                LB.PROJECT_ID,\n" +
                        // "                                LB.LEDGER_ID,\n" +
                        // "                                LB.AMOUNT,\n" +
                        // "                                LB.TRANS_MODE\n" +
                        // "                           FROM LEDGER_BALANCE AS LB\n" +
                        // "                           LEFT JOIN (SELECT P.CUSTOMERID,\n" +
                        // "                                            LBA.PROJECT_ID,\n" +
                        // "                                            LBA.LEDGER_ID,\n" +
                        // "                                            MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        // "                                       FROM LEDGER_BALANCE LBA\n" +
                        // "                                      INNER JOIN MASTER_PROJECT P\n" +
                        // "                                         ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                        // "                                      WHERE 1 = 1\n" +
                        // "                                        AND LBA.BALANCE_DATE <=?DATE_TO\n" +
                        // "                                      GROUP BY P.CUSTOMERID,\n" +
                        // "                                               LBA.PROJECT_ID,\n" +
                        // "                                               LBA.LEDGER_ID) AS LB1\n" +
                        // "                             ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        // "                            AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        // "                          WHERE LB1.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                        // "                            AND LB.BALANCE_DATE = LB1.BAL_DATE AND LB.LEDGER_ID NOT IN (?LEDGER_ID)) LB2\n" +
                        // "                 ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        // "                AND MP.CUSTOMERID = LB2.CUSTOMERID\n" +
                        // "                AND PL.PROJECT_ID = LB2.PROJECT_ID\n" +
                        // "              WHERE 1 = 1\n" +
                        // "                AND LG.GROUP_ID NOT IN (12, 13, 14) AND ML.LEDGER_ID NOT IN (?LEDGER_ID)\n" +
                        // "                AND LG.NATURE_ID IN (1, 2)\n" +
                        // "              GROUP BY MP.CUSTOMERID\n" +
                        // "             UNION ALL\n" +
                        // "             SELECT MP.CUSTOMERID,\n" +
                        // "                    - (CASE\n" +
                        // "                        WHEN (SUM(CASE\n" +
                        // "                                    WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        // "                                     IFNULL(LB2.AMOUNT, 0)\n" +
                        // "                                    ELSE\n" +
                        // "                                     -IFNULL(LB2.AMOUNT, 0)\n" +
                        // "                                  END)) >= 0 THEN\n" +
                        // "                         - (SUM(CASE\n" +
                        // "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        // "                                   IFNULL(LB2.AMOUNT, 0)\n" +
                        // "                                  ELSE\n" +
                        // "                                   -IFNULL(LB2.AMOUNT, 0)\n" +
                        // "                                END))\n" +
                        // "                        ELSE\n" +
                        // "                         ABS(SUM(CASE\n" +
                        // "                                   WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        // "                                    IFNULL(LB2.AMOUNT, 0)\n" +
                        // "                                   ELSE\n" +
                        // "                                    -IFNULL(LB2.AMOUNT, 0)\n" +
                        // "                                 END))\n" +
                        // "                      END) AS AMOUNT,\n" +
                        // "                    -SUM(CASE\n" +
                        // "                           WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        // "                            LB2.AMOUNT\n" +
                        // "                           ELSE\n" +
                        // "                            0\n" +
                        // "                         END) AS AMOUNT_DR,\n" +
                        // "                    -SUM(CASE\n" +
                        // "                           WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        // "                            LB2.AMOUNT\n" +
                        // "                           ELSE\n" +
                        // "                            0\n" +
                        // "                         END) AS AMOUNT_CR,\n" +
                        // "                    CASE\n" +
                        // "                      WHEN (SUM(CASE\n" +
                        // "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        // "                                   LB2.AMOUNT\n" +
                        // "                                  ELSE\n" +
                        // "                                   -LB2.AMOUNT\n" +
                        // "                                END) >= 0) THEN\n" +
                        // "                       'DR'\n" +
                        // "                      ELSE\n" +
                        // "                       'CR'\n" +
                        // "                    END AS TRANS_MODE\n" +
                        // "               FROM MASTER_LEDGER AS ML\n" +
                        // "              INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        // "                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        // "              INNER JOIN MASTER_PROJECT AS MP\n" +
                        // "                 ON MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                        // "              INNER JOIN PROJECT_LEDGER AS PL\n" +
                        // "                 ON PL.PROJECT_ID = MP.PROJECT_ID\n" +
                        // "                AND PL.LEDGER_ID = ML.LEDGER_ID\n" +
                        // "               LEFT JOIN (SELECT LB.BALANCE_DATE,\n" +
                        // "                                 LB1.CUSTOMERID,\n" +
                        // "                                 LB.PROJECT_ID,\n" +
                        // "                                 LB.LEDGER_ID,\n" +
                        // "                                 LB.AMOUNT,\n" +
                        // "                                 LB.TRANS_MODE\n" +
                        // "                            FROM LEDGER_BALANCE AS LB\n" +
                        // "                            LEFT JOIN (SELECT P.CUSTOMERID,\n" +
                        // "                                             LBA.PROJECT_ID,\n" +
                        // "                                             LBA.LEDGER_ID,\n" +
                        // "                                             MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        // "                                        FROM LEDGER_BALANCE LBA\n" +
                        // "                                       INNER JOIN MASTER_PROJECT P\n" +
                        // "                                          ON P.PROJECT_ID = LBA.PROJECT_ID\n" +
                        // "                                       WHERE 1 = 1\n" +
                        // "                                         AND LBA.BALANCE_DATE <?DATE_FROM\n" +
                        // "                                       GROUP BY P.CUSTOMERID,\n" +
                        // "                                                LBA.PROJECT_ID,\n" +
                        // "                                                LBA.LEDGER_ID) AS LB1\n" +
                        // "                              ON LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        // "                             AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        // "                           WHERE LB1.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                        // "                             AND LB.BALANCE_DATE = LB1.BAL_DATE AND LB.LEDGER_ID NOT IN (?LEDGER_ID)) LB2\n" +
                        // "                 ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        // "                AND MP.CUSTOMERID = LB2.CUSTOMERID\n" +
                        // "                AND PL.PROJECT_ID = LB2.PROJECT_ID\n" +
                        // "              WHERE 1 = 1\n" +
                        // "                AND LG.GROUP_ID NOT IN (12, 13, 14) AND ML.LEDGER_ID NOT IN (?LEDGER_ID)\n" +
                        // "                AND LG.NATURE_ID IN (1, 2)\n" +
                        // "              GROUP BY MP.CUSTOMERID) AS IE\n" +
                        // "    ON IE.CUSTOMERID = LE.CUSTOMERID\n" +
                        // "  LEFT JOIN (SELECT MP.CUSTOMERID, SUM(IF(TRANS_MODE='CR' AND VT.LEDGER_ID=?BANK_ACCOUNT_ID,AMOUNT,0)) AS INTER_CR,\n" +
                        // "  SUM(IF(TRANS_MODE='DR' AND VT.LEDGER_ID=?BANK_ACCOUNT_ID,AMOUNT,0)) AS INTER_DR,\n" +
                        // "  SUM(IF(TRANS_MODE='CR' AND VT.LEDGER_ID=?DIVISION_ID,AMOUNT,0)) AS CONTRIBUTION_FROM_CR,\n" +
                        // "  SUM(IF(TRANS_MODE='DR' AND VT.LEDGER_ID=?FD_ACCOUNT_ID,AMOUNT,0)) AS CONTRIBUTION_TO_DR\n" +
                        // "  FROM VOUCHER_MASTER_TRANS VMT\n" +
                        // "  INNER JOIN VOUCHER_TRANS VT ON VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.BRANCH_ID = VMT.BRANCH_ID\n" +
                        // "  AND VT.LOCATION_ID = VMT.LOCATION_ID AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                        // "  INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                        // "  WHERE VMT.STATUS=1 AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        // "  AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) GROUP BY MP.CUSTOMERID ) AS INTERACCOUNT ON INTERACCOUNT.CUSTOMERID = LE.CUSTOMERID\n" +
                        // "  GROUP BY LE.CUSTOMERID";
                        break;
                    }
                case ReportSQLCommand.Generalate.ProfitandLossbyHoseWiseInterAccByBranch:
                    {
                        query = @"SELECT C.BRANCH_ID, BO.BRANCH_OFFICE_NAME, ABS(SUM(IF(C.CON_LEDGER_CODE LIKE '%C%', AMOUNT, 0))) AS PAYMENT,
                                                ABS(SUM(IF(C.CON_LEDGER_CODE LIKE '%D%', AMOUNT, 0))) AS RECEIPT,
                                                SUM(INTER_CR) AS INTER_CR, SUM(INTER_DR) AS INTER_DR,
                                                SUM(CONTRIBUTION_FROM_CR) AS CONTRIBUTION_FROM_CR, SUM(CONTRIBUTION_TO_DR) AS CONTRIBUTION_TO_DR
                                                FROM (SELECT IE.BRANCH_ID, MPCG.PROJECT_CATOGORY_GROUP_ID, CL.CON_LEDGER_CODE, CL.CON_LEDGER_ID,
                                                SUM(IE.AMOUNT) AS AMOUNT, SUM(IE.INTER_CR) AS INTER_CR, SUM(IE.INTER_DR) AS INTER_DR,
                                                SUM(IE.CONTRIBUTION_FROM_CR) AS CONTRIBUTION_FROM_CR, SUM(IE.CONTRIBUTION_TO_DR) AS CONTRIBUTION_TO_DR
                                                FROM (SELECT MP.PROJECT_CATEGORY_ID, VMT.BRANCH_ID, VT.LEDGER_ID,
                                                SUM( IF(VT.TRANS_MODE = 'CR', IF(VT.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID, ?INTER_AC_FROM_TRANSFER_ID, ?INTER_AC_TO_TRANSFER_ID),
                                                       IFNULL(VT.AMOUNT,0), 0) , -IF(VT.LEDGER_ID NOT IN (?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID, ?INTER_AC_FROM_TRANSFER_ID, ?INTER_AC_TO_TRANSFER_ID), 
                                                       IFNULL(VT.AMOUNT,0), 0) ) ) AS AMOUNT,
                                                SUM(IF(TRANS_MODE='CR' AND VT.LEDGER_ID IN (?INTER_AC_FROM_TRANSFER_ID), AMOUNT,0)) AS INTER_CR,
                                                SUM(IF(TRANS_MODE='DR' AND VT.LEDGER_ID IN (?INTER_AC_TO_TRANSFER_ID), AMOUNT,0)) AS INTER_DR,
                                                SUM(IF(TRANS_MODE='CR' AND VT.LEDGER_ID IN (?CONTRIBUTION_FROM_PROVINCE_ID), AMOUNT,0)) AS CONTRIBUTION_FROM_CR,
                                                SUM(IF(TRANS_MODE='DR' AND VT.LEDGER_ID IN (?CONTRIBUTION_TO_PROVINCE_ID), AMOUNT,0)) AS CONTRIBUTION_TO_DR
                                                FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, PROJECT_ID, VOUCHER_TYPE, VOUCHER_DATE, STATUS
                                                      FROM VOUCHER_MASTER_TRANS WHERE STATUS = 1 AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND PROJECT_ID IN (?PROJECT_ID)
                                                      {AND BRANCH_ID IN (?BRANCH_ID)}) AS VMT
                                                INNER JOIN VOUCHER_TRANS AS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID
                                                INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)
                                                -- INNER JOIN PROJECT_BRANCH PB ON PB.PROJECT_ID = VMT.PROJECT_ID AND PB.BRANCH_ID = VMT.BRANCH_ID AND PB.BRANCH_ID IN (?BRANCH_ID)
                                                WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND MP.PROJECT_ID IN (?PROJECT_ID) AND
                                                    VMT.BRANCH_ID IN (?BRANCH_ID) AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) AND VMT.VOUCHER_TYPE IN ('RC', 'PY', 'JN') AND VMT.STATUS=1
                                                GROUP BY MP.PROJECT_CATEGORY_ID, VMT.BRANCH_ID, VT.LEDGER_ID) AS IE
                                                INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = IE.LEDGER_ID
                                                INNER JOIN MASTER_LEDGER_GROUP LG ON LG.GROUP_ID = ML.GROUP_ID
                                                INNER JOIN MASTER_PROJECT_CATOGORY MPC ON MPC.PROJECT_CATOGORY_ID = IE.PROJECT_CATEGORY_ID
                                                LEFT JOIN MASTER_PROJECT_CATOGORY_GROUP MPCG ON MPCG.PROJECT_CATOGORY_GROUP_ID = MPC.PROJECT_CATOGORY_GROUP_ID
                                                LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = IE.LEDGER_ID AND CLM.PROJECT_CATOGORY_GROUP_ID = MPCG.PROJECT_CATOGORY_GROUP_ID
                                                LEFT JOIN CONGREGATION_LEDGER AS CL ON CL.CON_LEDGER_ID = CLM.CON_LEDGER_ID
                                                WHERE (LG.NATURE_ID IN (1,2) OR ML.LEDGER_ID IN (?INTER_AC_FROM_TRANSFER_ID, ?INTER_AC_TO_TRANSFER_ID))
                                                GROUP BY MPC.PROJECT_CATOGORY_GROUP_ID, BRANCH_ID, CL.CON_LEDGER_ID) AS C
                                                INNER JOIN BRANCH_OFFICE BO ON BO.BRANCH_OFFICE_ID = C.BRANCH_ID GROUP BY C.BRANCH_ID;";
                        break;
                    }
                case ReportSQLCommand.Generalate.ProfitandLossbyHoseWiseInterAccDetail:
                    {
                        query = "SELECT MP.CUSTOMERID, MP.PROJECT_ID, MP.PROJECT, VMT.VOUCHER_DATE,\n" +
                                    "SUM(IF(TRANS_MODE='CR' AND VT.LEDGER_ID IN (?INTER_AC_FROM_TRANSFER_ID), AMOUNT,0)) AS INTER_CR,\n" +
                                    "SUM(IF(TRANS_MODE='DR' AND VT.LEDGER_ID IN (?INTER_AC_TO_TRANSFER_ID), AMOUNT,0)) AS INTER_DR,\n" +
                                    "SUM(IF(TRANS_MODE='CR' AND VT.LEDGER_ID IN (?CONTRIBUTION_FROM_PROVINCE_ID), AMOUNT,0)) AS CONTRIBUTION_FROM_CR,\n" +
                                    "SUM(IF(TRANS_MODE='DR' AND VT.LEDGER_ID IN (?CONTRIBUTION_FROM_PROVINCE_ID), AMOUNT,0)) AS CONTRIBUTION_FROM_DR,\n" +
                                    "SUM(IF(TRANS_MODE='CR' AND VT.LEDGER_ID IN (?CONTRIBUTION_TO_PROVINCE_ID), AMOUNT,0)) AS CONTRIBUTION_TO_CR,\n" +
                                    "SUM(IF(TRANS_MODE='DR' AND VT.LEDGER_ID IN (?CONTRIBUTION_TO_PROVINCE_ID), AMOUNT,0)) AS CONTRIBUTION_TO_DR\n" +
                                    "FROM (SELECT BRANCH_ID, VOUCHER_ID, LOCATION_ID, PROJECT_ID, VOUCHER_TYPE, VOUCHER_DATE, STATUS\n" +
                                    "           FROM VOUCHER_MASTER_TRANS WHERE STATUS = 1 AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND PROJECT_ID IN (?PROJECT_ID)\n" +
                                    "           {AND BRANCH_ID IN (?BRANCH_ID)}) AS VMT\n" +
                                    "INNER JOIN VOUCHER_TRANS VT ON VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.BRANCH_ID = VMT.BRANCH_ID AND VT.LOCATION_ID = VMT.LOCATION_ID {AND VT.BRANCH_ID IN (?BRANCH_ID)} \n" +
                                    "INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                                    "WHERE VMT.STATUS=1 AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND \n" +
                                    "VT.LEDGER_ID IN (?INTER_AC_FROM_TRANSFER_ID, ?INTER_AC_TO_TRANSFER_ID, ?CONTRIBUTION_FROM_PROVINCE_ID, ?CONTRIBUTION_TO_PROVINCE_ID) AND\n" +
                                    "MP.PROJECT_ID IN (?PROJECT_ID) AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) {AND VMT.BRANCH_ID IN (?BRANCH_ID)}  \n" +
                                    "GROUP BY MP.CUSTOMERID, MP.PROJECT_ID, VMT.VOUCHER_DATE;";
                        break;
                    }
                //case ReportSQLCommand.Generalate.GetLedgerContributionFromProvince:
                //    {
                //        query = @"SELECT * FROM MASTER_LEDGER WHERE LEDGER_NAME = ?LEDGER_NAME";
                //        break;
                //    }
                //case ReportSQLCommand.Generalate.GetLegerContributionToProvince:
                //    {
                //        query = @"SELECT * FROM MASTER_LEDGER WHERE LEDGER_NAME = ?LEDGER_NAME";
                //        break;
                //    }
                //case ReportSQLCommand.Generalate.GetLedgerInterAccountTransferId:
                //    {
                //        query = @"SELECT * FROM MASTER_LEDGER WHERE LEDGER_NAME = ?LEDGER_NAME";
                //        break;
                //    }
                #endregion

                #region Profit and Loss by Foundation wise

                case ReportSQLCommand.Generalate.ProfitandLossbyFoundationWise:
                    {
                        query = "SELECT MIP.CUSTOMERID,\n" +
                                "       MIP.SOCIETYNAME,PRINCIPAL_ACTIVITY,\n" +
                                "       IFNULL(SUM(DDF.RECEIPT), 0.00) AS RECEIPT,\n" +
                                "       IFNULL(SUM(DDF.PAYMENT), 0.00) AS PAYMENT,\n" +
                                "       IFNULL(SUM(FINAL), 0.00) AS FINAL\n" +
                                "  FROM MASTER_INSTI_PERFERENCE MIP\n" +
                                "  LEFT JOIN (SELECT IFNULL(BO.BRANCH_OFFICE_ID, '') AS BRANCH_ID,\n" +
                                "                    MIP.CUSTOMERID,\n" +
                                "                    SOCIETYNAME,\n" +
                                "                    IFNULL(BO.BRANCH_OFFICE_NAME, '') AS BRANCH_OFFICE_NAME,\n" +
                                "                    IFNULL(MP.PROJECT_ID, '') AS PROJECT_ID,\n" +
                                "                    IFNULL(MP.PROJECT, '') AS PROJECT,\n" +
                                "                    IFNULL((FNL.RECEIPT), 0.00) AS RECEIPT,\n" +
                                "                    IFNULL((FNL.PAYMENT), 0.00) AS PAYMENT,\n" +
                                "                    IFNULL((FNL.FINAL), 0.00) AS FINAL\n" +
                                "               FROM (SELECT BRANCH_ID,\n" +
                                "                            BRANCH_OFFICE_NAME,\n" +
                                "                            PROJECT_ID,\n" +
                                "                            PROJECT,\n" +
                                "                            SUM(RECEIPT) AS RECEIPT,\n" +
                                "                            SUM(PAYMENT) AS PAYMENT,\n" +
                                "                            SUM((RECEIPT) - (PAYMENT)) AS FINAL\n" +
                                "                       FROM (SELECT MP.PROJECT_ID,\n" +
                                "                                    MP.PROJECT,\n" +
                                "                                    BRANCH_ID,\n" +
                                "                                    BRANCH_OFFICE_NAME,\n" +
                                "                                    SUM(RECEIPT) AS RECEIPT,\n" +
                                "                                    0 AS PAYMENT\n" +
                                "                               FROM (SELECT (T.RECEIPTAMT) AS RECEIPT,\n" +
                                "                                            T.SORT_ORDER,\n" +
                                "                                            PROJECT_ID,\n" +
                                "                                            BRANCH_ID\n" +
                                "                                       FROM (SELECT ML.LEDGER_ID,\n" +
                                "                                                    MT.PROJECT_ID,\n" +
                                "                                                    MT.BRANCH_ID,\n" +
                                "                                                    ML.GROUP_ID,\n" +
                                "                                                    LG.GROUP_CODE,\n" +
                                "                                                    CASE\n" +
                                "                                                      WHEN PARENT_GROUP_ID IN\n" +
                                "                                                           (1, 2, 3, 4) THEN\n" +
                                "                                                       CONCAT(LG.LEDGER_GROUP)\n" +
                                "                                                      ELSE\n" +
                                "                                                       CONCAT('  ',\n" +
                                "                                                              LG.LEDGER_GROUP)\n" +
                                "                                                    END AS LEDGER_GROUP,\n" +
                                "                                                    ML.LEDGER_CODE,\n" +
                                "                                                    LG.SORT_ORDER,\n" +
                                "                                                    CASE\n" +
                                "                                                      WHEN SUM(CASE\n" +
                                "                                                                 WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                                                  VT.AMOUNT\n" +
                                "                                                                 ELSE\n" +
                                "                                                                  -VT.AMOUNT\n" +
                                "                                                               END) < 0 THEN\n" +
                                "                                                       ABS(SUM(CASE\n" +
                                "                                                                 WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                                                  VT.AMOUNT\n" +
                                "                                                                 ELSE\n" +
                                "                                                                  -VT.AMOUNT\n" +
                                "                                                               END))\n" +
                                "                                                    END AS RECEIPTAMT\n" +
                                "                                               FROM MASTER_LEDGER_GROUP LG\n" +
                                "                                               LEFT JOIN MASTER_LEDGER ML\n" +
                                "                                                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                                               LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                                                 ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                                               LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                                                 ON VT.VOUCHER_ID =\n" +
                                "                                                    MT.VOUCHER_ID\n" +
                                "                                                AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                                                AND MT.STATUS = 1\n" +
                                "                                                AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                                                AND LG.GROUP_ID NOT IN (12, 13)\n" +
                                "                                                AND LG.NATURE_ID NOT IN (3, 4)\n" +
                                "                                              GROUP BY MT.PROJECT_ID,\n" +
                                "                                                       VT.LEDGER_ID) AS T\n" +
                                "                                      WHERE T.RECEIPTAMT > 0\n" +
                                "                                      ORDER BY SORT_ORDER) AS TT\n" +
                                "                              INNER JOIN MASTER_PROJECT MP\n" +
                                "                                 ON TT.PROJECT_ID = MP.PROJECT_ID\n" +
                                "                              INNER JOIN BRANCH_OFFICE BO\n" +
                                "                                 ON TT.BRANCH_ID = BO.BRANCH_OFFICE_ID\n" +
                                "                              GROUP BY PROJECT_ID\n" +
                                "                             UNION ALL\n" +
                                "                             SELECT MP.PROJECT_ID,\n" +
                                "                                    MP.PROJECT,\n" +
                                "                                    BRANCH_ID,\n" +
                                "                                    BRANCH_OFFICE_NAME,\n" +
                                "                                    0 AS RECEIPT,\n" +
                                "                                    SUM(PAYMENT) AS PAYMENT\n" +
                                "                               FROM (SELECT (T.PAYMENTAMT) AS PAYMENT,\n" +
                                "                                            T.SORT_ORDER,\n" +
                                "                                            PROJECT_ID,\n" +
                                "                                            BRANCH_ID\n" +
                                "                                       FROM (SELECT ML.LEDGER_ID,\n" +
                                "                                                    ML.GROUP_ID,\n" +
                                "                                                    MT.PROJECT_ID,\n" +
                                "                                                    MT.BRANCH_ID,\n" +
                                "                                                    LG.GROUP_CODE,\n" +
                                "                                                    CASE\n" +
                                "                                                      WHEN PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                                "                                                       CONCAT(LG.LEDGER_GROUP)\n" +
                                "                                                      ELSE\n" +
                                "                                                       CONCAT('  ',\n" +
                                "                                                              LG.LEDGER_GROUP)\n" +
                                "                                                    END AS LEDGER_GROUP,\n" +
                                "                                                    ML.LEDGER_CODE,\n" +
                                "                                                    LG.SORT_ORDER,\n" +
                                "                                                    CASE\n" +
                                "                                                      WHEN SUM(CASE\n" +
                                "                                                                 WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                                                  VT.AMOUNT\n" +
                                "                                                                 ELSE\n" +
                                "                                                                  -VT.AMOUNT\n" +
                                "                                                               END) > 0 THEN\n" +
                                "                                                       ABS(SUM(CASE\n" +
                                "                                                                 WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                                                  VT.AMOUNT\n" +
                                "                                                                 ELSE\n" +
                                "                                                                  -VT.AMOUNT\n" +
                                "                                                               END))\n" +
                                "                                                    END AS PAYMENTAMT\n" +
                                "                                               FROM MASTER_LEDGER_GROUP LG\n" +
                                "                                               LEFT JOIN MASTER_LEDGER ML\n" +
                                "                                                 ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                                               LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                                                 ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                                               LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                                                 ON VT.VOUCHER_ID =\n" +
                                "                                                    MT.VOUCHER_ID\n" +
                                "                                                AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                                                AND MT.STATUS = 1\n" +
                                "                                                AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                                                AND LG.GROUP_ID NOT IN (12, 13)\n" +
                                "                                                AND LG.NATURE_ID NOT IN (3, 4)\n" +
                                "                                              GROUP BY MT.BRANCH_ID,\n" +
                                "                                                       MT.PROJECT_ID,\n" +
                                "                                                       VT.LEDGER_ID) AS T\n" +
                                "                                      WHERE T.PAYMENTAMT > 0\n" +
                                "                                      ORDER BY SORT_ORDER) AS TT\n" +
                                "                              INNER JOIN MASTER_PROJECT MP\n" +
                                "                                 ON TT.PROJECT_ID = MP.PROJECT_ID\n" +
                                "                              INNER JOIN BRANCH_OFFICE BO\n" +
                                "                                 ON TT.BRANCH_ID = BO.BRANCH_OFFICE_ID\n" +
                                "                              GROUP BY PROJECT_ID) AS PYMT\n" +
                                "                      GROUP BY BRANCH_ID, PROJECT\n" +
                                "                      ORDER BY PROJECT_ID) AS FNL\n" +
                                "              RIGHT JOIN MASTER_PROJECT MP\n" +
                                "                 ON MP.PROJECT_ID = FNL.PROJECT_ID\n" +
                                "              RIGHT JOIN PROJECT_BRANCH PB\n" +
                                "                 ON MP.PROJECT_ID = PB.PROJECT_ID\n" +
                                "              RIGHT JOIN BRANCH_OFFICE BO\n" +
                                "                 ON PB.BRANCH_ID = BO.BRANCH_OFFICE_ID\n" +
                                "                AND MP.PROJECT_ID = PB.PROJECT_ID\n" +
                                "                AND BO.BRANCH_OFFICE_ID = FNL.BRANCH_ID\n" +
                                "               JOIN master_insti_perference MIP\n" +
                                "                 ON MP.CUSTOMERID = MIP.CUSTOMERID\n" +
                                "              WHERE MP.PROJECT <> '' AND IS_FOUNDATION =1\n" +
                                "                AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                                "              GROUP BY MP.CUSTOMERID, SOCIETYNAME\n" +
                                "              ORDER BY BRANCH_OFFICE_NAME, PROJECT ASC) AS DDF\n" +
                                "    ON MIP.CUSTOMERID = DDF.CUSTOMERID\n" +
                                " WHERE IS_FOUNDATION =1 AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID)\n" +
                                " GROUP BY CUSTOMERID\n" +
                                " ORDER BY SOCIETYNAME";
                        break;
                    }

                #endregion
            }
            return query;
        }
    }

    public class ReportCostCenter
    {
        string query = string.Empty;
        public string GetCostCenterSQL(ReportSQLCommand.CostCentre queryId)
        {
            switch (queryId)
            {
                #region Cash Journal
                case ReportSQLCommand.CostCentre.CostCenterCashJournal:
                    {
                        query = "SELECT COST_CENTER.DATE AS DATE,\n" +
                               "       COST_CENTER.VOUCHER_ID,\n" +
                               "       COST_CENTER.BRANCH_ID,\n" +
                               "       COST_CENTER.VOUCHER_NO,\n" +
                               "       MCC.COST_CENTRE_NAME AS COST_CENTRE,\n" +
                               "       MCCC.COST_CENTRE_CATEGORY_NAME,\n" +
                               "       COST_CENTER.LEDGER_CODE,\n" +
                               "       COST_CENTER.CHEQUE_NO,\n" +
                               "       COST_CENTER.LEDGER AS LEDGER,\n" +
                               "       IFNULL(SUM(VCC.AMOUNT), 0) AS RECEIPT,\n" +
                               "       0 AS PAYMENT,\n" +
                               "       COST_CENTER.NARRATION\n" +
                               "  FROM (SELECT MT.VOUCHER_ID,\n" +
                                "              VT.BRANCH_ID,\n" +
                               "               VT.LEDGER_ID,\n" +
                               "               MT.VOUCHER_DATE AS DATE,\n" +
                               "               MT.VOUCHER_NO,\n" +
                               "               ML.LEDGER_CODE,\n" +
                               "               CHEQUE_NO,\n" +
                               "               ML.LEDGER_NAME  AS LEDGER,\n" +
                               "               0               AS PAYMENT,\n" +
                               "               MT.NARRATION\n" +
                               "\n" +
                               "          FROM master_ledger_GROUP LG\n" +
                               "\n" +
                               "          LEFT JOIN master_ledger ML\n" +
                               "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                               "          LEFT JOIN voucher_trans VT\n" +
                               "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                               "          LEFT JOIN voucher_master_trans MT\n" +
                               "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                               "\n" +
                               "          JOIN (SELECT CASHBANK.VOUCHER_ID,\n" +
                               "                      CASHBANK.LEDGER_ID,\n" +
                               "                      CASHBANK.CASH_FLAG,\n" +
                               "                      CASHBANK.BANK_FLAG,\n" +
                               "                      CASHBANK.LEDGER_CODE\n" +
                               "                 FROM (SELECT VT.VOUCHER_ID,\n" +
                               "                              VT.LEDGER_ID,\n" +
                               "                              ML.LEDGER_CODE,\n" +
                               "                              CASE\n" +
                               "                                WHEN LG.GROUP_ID = 13 THEN\n" +
                               "                                 1\n" +
                               "                                ELSE\n" +
                               "                                 0\n" +
                               "                              END AS CASH_FLAG,\n" +
                               "                              CASE\n" +
                               "                                WHEN LG.GROUP_ID IN (12) THEN\n" +
                               "                                 1\n" +
                               "                                ELSE\n" +
                               "                                 0\n" +
                               "                              END AS BANK_FLAG\n" +
                               "\n" +
                               "                         FROM master_ledger_GROUP LG\n" +
                               "\n" +
                               "                         LEFT JOIN master_ledger ML\n" +
                               "                           ON ML.GROUP_ID = LG.GROUP_ID\n" +
                               "                         LEFT JOIN voucher_trans VT\n" +
                               "                           ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                               "                         LEFT JOIN voucher_master_trans MT\n" +
                               "                           ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                               "\n" +
                               "                        WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                               "\n" +
                               "                          AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                               "                          AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                               "                          and lg.group_id in (13)\n" +
                               "                          AND MT.STATUS = 1\n" +
                               "                        GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                               "                        ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                               "                GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                               "            ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                               "\n" +
                               "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                               "           AND MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                               "               AND VT.TRANS_MODE = 'CR'\n" +
                               "           AND MT.STATUS = 1\n" +
                               "\n" +
                               "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                               "           AND LG.GROUP_ID NOT IN (12,14)\n" +
                               "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                               "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                               "         GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, VT.LEDGER_ID) AS COST_CENTER\n" +
                               " INNER JOIN VOUCHER_CC_TRANS AS VCC\n" +
                               "    ON COST_CENTER.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                               "   AND COST_CENTER.LEDGER_ID = VCC.LEDGER_ID  {AND VCC.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                               "   AND VCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                               "\n" +
                               "  LEFT JOIN MASTER_COST_CENTRE MCC\n" +
                               "    ON VCC.COST_CENTRE_ID = MCC.COST_CENTRE_ID\n" +
                               " INNER JOIN COSTCATEGORY_COSTCENTRE CC " +
                               "ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID " +
                               " LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC " +
                               " ON MCCC.COST_CENTRECATEGORY_ID=COST_CATEGORY_ID " +
                               " GROUP BY MCC.COST_CENTRE_NAME, COST_CENTER.DATE, COST_CENTER.VOUCHER_ID, COST_CENTER.LEDGER_ID\n" +
                               "UNION ALL\n" +
                               "\n" +
                               "SELECT COST_CENTER.DATE AS DATE,\n" +
                               "       COST_CENTER.VOUCHER_ID,\n" +
                                "      COST_CENTER.BRANCH_ID,\n" +
                               "       COST_CENTER.VOUCHER_NO,\n" +
                               "       MCC.COST_CENTRE_NAME AS COST_CENTRE,\n" +
                               "       MCCC.COST_CENTRE_CATEGORY_NAME,\n" +
                               "       COST_CENTER.LEDGER_CODE,\n" +
                               "       COST_CENTER.CHEQUE_NO,\n" +
                               "       COST_CENTER.LEDGER AS LEDGER,\n" +
                               "       0 AS RECEIPT,\n" +
                               "       IFNULL(SUM(VCC.AMOUNT), 0) AS PAYMENT,\n" +
                               "       COST_CENTER.NARRATION\n" +
                               "  FROM (SELECT MT.VOUCHER_ID,\n" +
                                "              MT.BRANCH_ID,\n" +
                               "               VT.LEDGER_ID,\n" +
                               "               MT.VOUCHER_DATE AS DATE,\n" +
                               "               MT.VOUCHER_NO,\n" +
                               "               ML.LEDGER_CODE,\n" +
                               "               CHEQUE_NO,\n" +
                               "               ML.LEDGER_NAME  AS LEDGER,\n" +
                               "               0               AS RECEIPT,\n" +
                               "               MT.NARRATION\n" +
                               "\n" +
                               "          FROM master_ledger_GROUP LG\n" +
                               "\n" +
                               "          LEFT JOIN master_ledger ML\n" +
                               "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                               "          LEFT JOIN voucher_trans VT\n" +
                               "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                               "          LEFT JOIN voucher_master_trans MT\n" +
                               "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                               "         AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                               "          LEFT JOIN MASTER_PROJECT MP\n" +
                               "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                               "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                               "            ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                               "\n" +
                               "          JOIN (SELECT CASHBANK.VOUCHER_ID,\n" +
                               "                      CASHBANK.BRANCH_ID,\n" +
                               "                      CASHBANK.LEDGER_ID,\n" +
                               "                      CASHBANK.CASH_FLAG,\n" +
                               "                      CASHBANK.BANK_FLAG,\n" +
                               "                      CASHBANK.LEDGER_CODE\n" +
                               "                 FROM (SELECT VT.VOUCHER_ID,\n" +
                               "                              VT.BRANCH_ID,\n" +
                               "                              VT.LEDGER_ID,\n" +
                               "                              ML.LEDGER_CODE,\n" +
                               "                              CASE\n" +
                               "                                WHEN LG.GROUP_ID = 13 THEN\n" +
                               "                                 1\n" +
                               "                                ELSE\n" +
                               "                                 0\n" +
                               "                              END AS CASH_FLAG,\n" +
                               "                              CASE\n" +
                               "                                WHEN LG.GROUP_ID IN (12) THEN\n" +
                               "                                 1\n" +
                               "                                ELSE\n" +
                               "                                 0\n" +
                               "                              END AS BANK_FLAG\n" +
                               "\n" +
                               "                         FROM master_ledger_GROUP LG\n" +
                               "\n" +
                               "                         LEFT JOIN master_ledger ML\n" +
                               "                           ON ML.GROUP_ID = LG.GROUP_ID\n" +
                               "                         LEFT JOIN voucher_trans VT\n" +
                               "                           ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                               "                         LEFT JOIN voucher_master_trans MT\n" +
                               "                           ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                               "                        AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                               "\n" +
                               "                        WHERE MT.VOUCHER_TYPE IN ('PY', 'RC')\n" +
                               "\n" +
                               "                          AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                               "                          AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                               "                          and lg.group_id in (13)\n" +
                               "                          AND MT.STATUS = 1\n" +
                               "                        GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                               "                        ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                               "                GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                               "            ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                               "\n" +
                               "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                               "           AND MT.VOUCHER_TYPE IN ('PY', 'RC')\n" +
                               "               AND VT.TRANS_MODE = 'DR'\n" +
                               "           AND MT.STATUS = 1\n" +
                               "\n" +
                               "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                               "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                               "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                               "           AND LG.GROUP_ID NOT IN (12,14)\n" +
                               "         GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, VT.LEDGER_ID) AS COST_CENTER\n" +
                               " INNER JOIN VOUCHER_CC_TRANS AS VCC\n" +
                               "    ON COST_CENTER.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                               "   AND COST_CENTER.LEDGER_ID = VCC.LEDGER_ID {AND VCC.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                               "  AND VCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                               "\n" +
                               "  LEFT JOIN MASTER_COST_CENTRE MCC\n" +
                               "    ON VCC.COST_CENTRE_ID = MCC.COST_CENTRE_ID\n" +
                               "INNER JOIN COSTCATEGORY_COSTCENTRE CC\n " +
                               "ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n " +
                               " LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n " +
                               " ON MCCC.COST_CENTRECATEGORY_ID=COST_CATEGORY_ID\n " +
                               " GROUP BY MCC.COST_CENTRE_NAME, COST_CENTER.DATE,\n " +
                               " COST_CENTER.VOUCHER_ID, COST_CENTER.LEDGER_ID  ORDER BY DATE";

                        //query = "SELECT COST_CENTER.DATE AS DATE,\n" +
                        //        "       COST_CENTER.VOUCHER_ID,\n" +
                        //        "       COST_CENTER.BRANCH_ID,\n" +
                        //        "       COST_CENTER.VOUCHER_NO,\n" +
                        //        "       MCC.COST_CENTRE_NAME AS COST_CENTRE,\n" +
                        //        "       MCCC.COST_CENTRE_CATEGORY_NAME,\n" +
                        //        "       COST_CENTER.LEDGER_CODE,\n" +
                        //        "       COST_CENTER.CHEQUE_NO,\n" +
                        //        "       COST_CENTER.LEDGER AS LEDGER,\n" +
                        //        "       IFNULL(SUM(VCC.AMOUNT), 0) AS RECEIPT,\n" +
                        //        "       0 AS PAYMENT,\n" +
                        //        "       COST_CENTER.NARRATION\n" +
                        //        "  FROM (SELECT MT.VOUCHER_ID,\n" +
                        //        "               VT.BRANCH_ID,\n" +
                        //        "               VT.LEDGER_ID,\n" +
                        //        "               MT.VOUCHER_DATE AS DATE,\n" +
                        //        "               MT.VOUCHER_NO,\n" +
                        //        "               ML.LEDGER_CODE,\n" +
                        //        "               CHEQUE_NO,\n" +
                        //        "               ML.LEDGER_NAME  AS LEDGER,\n" +
                        //        "               0               AS PAYMENT,\n" +
                        //        "               MT.NARRATION\n" +
                        //        "\n" +
                        //        "          FROM master_ledger_GROUP LG\n" +
                        //        "\n" +
                        //        "          LEFT JOIN master_ledger ML\n" +
                        //        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "          LEFT JOIN voucher_trans VT\n" +
                        //        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "          LEFT JOIN voucher_master_trans MT\n" +
                        //        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "            AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "            AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "            ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                        //        "          JOIN (SELECT CASHBANK.VOUCHER_ID,\n" +
                        //        "                      CASHBANK.BRANCH_ID,\n" +
                        //        "                      CASHBANK.LEDGER_ID,\n" +
                        //        "                      CASHBANK.CASH_FLAG,\n" +
                        //        "                      CASHBANK.BANK_FLAG,\n" +
                        //        "                      CASHBANK.LEDGER_CODE\n" +
                        //        "                 FROM (SELECT VT.VOUCHER_ID,\n" +
                        //        "                              VT.BRANCH_ID,\n" +
                        //        "                              VT.LEDGER_ID,\n" +
                        //        "                              ML.LEDGER_CODE,\n" +
                        //        "                              CASE\n" +
                        //        "                                WHEN LG.GROUP_ID = 13 THEN\n" +
                        //        "                                 1\n" +
                        //        "                                ELSE\n" +
                        //        "                                 0\n" +
                        //        "                              END AS CASH_FLAG,\n" +
                        //        "                              CASE\n" +
                        //        "                                WHEN LG.GROUP_ID IN (12) THEN\n" +
                        //        "                                 1\n" +
                        //        "                                ELSE\n" +
                        //        "                                 0\n" +
                        //        "                              END AS BANK_FLAG\n" +
                        //        "\n" +
                        //        "                         FROM master_ledger_GROUP LG\n" +
                        //        "\n" +
                        //        "                         LEFT JOIN master_ledger ML\n" +
                        //        "                           ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                         LEFT JOIN voucher_trans VT\n" +
                        //        "                           ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                         LEFT JOIN voucher_master_trans MT\n" +
                        //        "                           ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                          AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "\n" +
                        //        "                        WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "\n" +
                        //        "                          AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                          AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                          and lg.group_id in (13)\n" +
                        //        "                          AND MT.STATUS = 1\n" +
                        //        "                        GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                        //        "                        ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                        //        "                GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                        //        "            ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                        //        "\n" +
                        //        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "           AND MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "           AND VT.TRANS_MODE = 'CR'\n" +
                        //        "           AND MT.STATUS = 1\n" +
                        //        "\n" +
                        //        "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "           AND LG.GROUP_ID NOT IN (12, 14)\n" +
                        //        "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "         GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, VT.LEDGER_ID) AS COST_CENTER\n" +
                        //        " INNER JOIN VOUCHER_CC_TRANS AS VCC\n" +
                        //        "    ON COST_CENTER.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                        //        "   AND COST_CENTER.LEDGER_ID = VCC.LEDGER_ID {AND VCC.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "   AND VCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                        //        "\n" +

                        //        "  LEFT JOIN MASTER_COST_CENTRE MCC\n" +
                        //        "    ON VCC.COST_CENTRE_ID = MCC.COST_CENTRE_ID\n" +
                        //        " INNER JOIN COSTCATEGORY_COSTCENTRE CC " +
                        //        " ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID " +
                        //        " LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC " +
                        //        " ON MCCC.COST_CENTRECATEGORY_ID=COST_CATEGORY_ID " +

                        //        " GROUP BY MCC.COST_CENTRE_NAME, COST_CENTER.DATE, COST_CENTER.VOUCHER_ID, COST_CENTER.LEDGER_ID\n" +
                        //        "UNION ALL\n" +
                        //        "\n" +
                        //        "SELECT COST_CENTER.DATE AS DATE,\n" +
                        //        "       COST_CENTER.VOUCHER_ID,\n" +
                        //        "       COST_CENTER.BRANCH_ID,\n" +
                        //        "       COST_CENTER.VOUCHER_NO,\n" +
                        //        "       MCC.COST_CENTRE_NAME AS COST_CENTRE,\n" +
                        //        "       MCCC.COST_CENTRE_CATEGORY_NAME,\n" +
                        //        "       COST_CENTER.LEDGER_CODE,\n" +
                        //        "       COST_CENTER.CHEQUE_NO,\n" +
                        //        "       COST_CENTER.LEDGER AS LEDGER,\n" +
                        //        "       0 AS RECEIPT,\n" +
                        //        "       IFNULL(SUM(VCC.AMOUNT), 0) AS PAYMENT,\n" +
                        //        "       COST_CENTER.NARRATION\n" +
                        //        "  FROM (SELECT MT.VOUCHER_ID,\n" +
                        //        "               MT.BRANCH_ID,\n" +
                        //        "               VT.LEDGER_ID,\n" +
                        //        "               MT.VOUCHER_DATE AS DATE,\n" +
                        //        "               MT.VOUCHER_NO,\n" +
                        //        "               ML.LEDGER_CODE,\n" +
                        //        "               CHEQUE_NO,\n" +
                        //        "               ML.LEDGER_NAME  AS LEDGER,\n" +
                        //        "               0               AS RECEIPT,\n" +
                        //        "               MT.NARRATION\n" +
                        //        "\n" +
                        //        "          FROM master_ledger_GROUP LG\n" +
                        //        "\n" +
                        //        "          LEFT JOIN master_ledger ML\n" +
                        //        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "          LEFT JOIN voucher_trans VT\n" +
                        //        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "          LEFT JOIN voucher_master_trans MT\n" +
                        //        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "            AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "            AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "            ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                        //        "\n" +
                        //        "          JOIN (SELECT CASHBANK.VOUCHER_ID,\n" +
                        //        "                      CASHBANK.BRANCH_ID,\n" +
                        //        "                      CASHBANK.LEDGER_ID,\n" +
                        //        "                      CASHBANK.CASH_FLAG,\n" +
                        //        "                      CASHBANK.BANK_FLAG,\n" +
                        //        "                      CASHBANK.LEDGER_CODE\n" +
                        //        "                 FROM (SELECT VT.VOUCHER_ID,\n" +
                        //        "                              VT.BRANCH_ID,\n" +
                        //        "                              VT.LEDGER_ID,\n" +
                        //        "                              ML.LEDGER_CODE,\n" +
                        //        "                              CASE\n" +
                        //        "                                WHEN LG.GROUP_ID = 13 THEN\n" +
                        //        "                                 1\n" +
                        //        "                                ELSE\n" +
                        //        "                                 0\n" +
                        //        "                              END AS CASH_FLAG,\n" +
                        //        "                              CASE\n" +
                        //        "                                WHEN LG.GROUP_ID IN (12) THEN\n" +
                        //        "                                 1\n" +
                        //        "                                ELSE\n" +
                        //        "                                 0\n" +
                        //        "                              END AS BANK_FLAG\n" +
                        //        "\n" +
                        //        "                         FROM master_ledger_GROUP LG\n" +
                        //        "\n" +
                        //        "                         LEFT JOIN master_ledger ML\n" +
                        //        "                           ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                         LEFT JOIN voucher_trans VT\n" +
                        //        "                           ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                         LEFT JOIN voucher_master_trans MT\n" +
                        //        "                           ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "\n" +
                        //        "                        WHERE MT.VOUCHER_TYPE IN ('PY', 'RC')\n" +
                        //        "\n" +
                        //        "                          AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                          AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                          and lg.group_id in (13)\n" +
                        //        "                          AND MT.STATUS = 1\n" +
                        //        "                        GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                        //        "                        ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                        //        "                GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                        //        "            ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                        //        "\n" +
                        //        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "           AND MT.VOUCHER_TYPE IN ('PY', 'RC')\n" +
                        //        "           AND VT.TRANS_MODE = 'DR'\n" +
                        //        "           AND MT.STATUS = 1\n" +
                        //        "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "           AND LG.GROUP_ID NOT IN (12, 14)\n" +
                        //        "         GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, VT.LEDGER_ID) AS COST_CENTER\n" +
                        //        " INNER JOIN VOUCHER_CC_TRANS AS VCC\n" +
                        //        "    ON COST_CENTER.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                        //        "   AND COST_CENTER.LEDGER_ID = VCC.LEDGER_ID {AND VCC.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "   AND VCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                        //        "\n" +

                        //         "  LEFT JOIN MASTER_COST_CENTRE MCC\n" +
                        //        "    ON VCC.COST_CENTRE_ID = MCC.COST_CENTRE_ID\n" +
                        //        " INNER JOIN COSTCATEGORY_COSTCENTRE CC\n " +
                        //        " ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n " +
                        //        " LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n " +
                        //        " ON MCCC.COST_CENTRECATEGORY_ID=COST_CATEGORY_ID\n " +
                        //        " GROUP BY MCC.COST_CENTRE_NAME, COST_CENTER.DATE, COST_CENTER.VOUCHER_ID, COST_CENTER.LEDGER_ID";

                        break;
                    }

                #endregion

                #region Bank Journal
                case ReportSQLCommand.CostCentre.CostCenterBankJournal:
                    {
                        query = "SELECT COST_CENTER.DATE AS DATE,\n" +
                                "       COST_CENTER.VOUCHER_ID,\n" +
                                "       COST_CENTER.VOUCHER_NO,\n" +
                                "       MCC.COST_CENTRE_NAME AS COST_CENTRE,\n" +
                                "       MCCC.COST_CENTRE_CATEGORY_NAME,\n" +
                                "       COST_CENTER.LEDGER_CODE,\n" +
                                "       COST_CENTER.CHEQUE_NO,\n" +
                                "       CONCAT(COST_CENTER.LEDGER, ' - ', COST_CENTER.BANKLEDGER_NAME) LEDGER,\n" +
                                "       IFNULL(SUM(VCC.AMOUNT), 0) AS RECEIPT,\n" +
                                "       0 AS PAYMENT,\n" +
                                "       COST_CENTER.NARRATION\n" +
                                "  FROM (SELECT MT.VOUCHER_ID,\n" +
                                "               VT.LEDGER_ID,\n" +
                                "               MT.VOUCHER_DATE   AS DATE,\n" +
                                "               MT.VOUCHER_NO,\n" +
                                "               ML.LEDGER_CODE,\n" +
                                "               T.CHEQUE_NO,\n" +
                                "               ML.LEDGER_NAME    AS LEDGER,\n" +
                                "               0                 AS PAYMENT,\n" +
                                "               T.BANKLEDGER_NAME,\n" +
                                "               MT.NARRATION\n" +
                                "\n" +
                                "          FROM master_ledger_GROUP LG\n" +
                                "\n" +
                                "          LEFT JOIN master_ledger ML\n" +
                                "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "          LEFT JOIN voucher_trans VT\n" +
                                "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "          LEFT JOIN voucher_master_trans MT\n" +
                                "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "\n" +
                                "           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "          LEFT JOIN MASTER_PROJECT MP\n" +
                                "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "            ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                "\n" +
                                "          JOIN (SELECT CASHBANK.VOUCHER_ID,\n" +
                                "                      CASHBANK.LEDGER_ID,\n" +
                                "                      CASHBANK.CASH_FLAG,\n" +
                                "                      CASHBANK.BANK_FLAG,\n" +
                                "                      CASHBANK.LEDGER_CODE,\n" +
                                "                      CASHBANK.BANKLEDGER_NAME,\n" +
                                "                      CASHBANK.CHEQUE_NO\n" +
                                "                 FROM (SELECT VT.VOUCHER_ID,\n" +
                                "                              VT.LEDGER_ID,\n" +
                                "                              ML.LEDGER_CODE,\n" +
                                "                              ML.LEDGER_NAME AS BANKLEDGER_NAME,\n" +
                                "                              VT.CHEQUE_NO,\n" +
                                "                              CASE\n" +
                                "                                WHEN LG.GROUP_ID = 13 THEN\n" +
                                "                                 1\n" +
                                "                                ELSE\n" +
                                "                                 0\n" +
                                "                              END AS CASH_FLAG,\n" +
                                "                              CASE\n" +
                                "                                WHEN LG.GROUP_ID IN (12) THEN\n" +
                                "                                 1\n" +
                                "                                ELSE\n" +
                                "                                 0\n" +
                                "                              END AS BANK_FLAG\n" +
                                "\n" +
                                "                         FROM master_ledger_GROUP LG\n" +
                                "\n" +
                                "                         LEFT JOIN master_ledger ML\n" +
                                "                           ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                         LEFT JOIN voucher_trans VT\n" +
                                "                           ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                         LEFT JOIN voucher_master_trans MT\n" +
                                "                           ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "\n" +
                                "                          AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                          AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                         LEFT JOIN MASTER_PROJECT MP\n" +
                                "                           ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "                         LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                           ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                "\n" +
                                "                        WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                                "\n" +
                                "                          AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "\n" +
                                "                          AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                       {   AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                       {   AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "                          and lg.group_id in (12, 14)\n" +
                                "                          AND MT.STATUS = 1\n" +
                                "                        GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                                "                        ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                                "                GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                                "            ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                                "\n" +
                                "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "           AND MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                                "           AND VT.TRANS_MODE = 'CR'\n" +
                                "           AND MT.STATUS = 1\n" +
                                "\n" +
                                "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "\n" +
                                "           AND LG.GROUP_ID NOT IN (13)\n" +
                                "         GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, VT.LEDGER_ID) AS COST_CENTER\n" +
                                " INNER JOIN VOUCHER_CC_TRANS AS VCC\n" +
                                "    ON COST_CENTER.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                                "   AND COST_CENTER.LEDGER_ID = VCC.LEDGER_ID {AND VCC.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "   AND VCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                                "  LEFT JOIN MASTER_COST_CENTRE MCC\n" +
                                "    ON VCC.COST_CENTRE_ID = MCC.COST_CENTRE_ID\n" +
                                " INNER JOIN COSTCATEGORY_COSTCENTRE CC\n" +
                                "    ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                                "  LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n" +
                                "    ON MCCC.COST_CENTRECATEGORY_ID = COST_CATEGORY_ID\n" +
                                " GROUP BY MCC.COST_CENTRE_NAME,\n" +
                                "          COST_CENTER.DATE,\n" +
                                "          COST_CENTER.VOUCHER_ID,\n" +
                                "          COST_CENTER.LEDGER_ID\n" +
                                "UNION ALL\n" +
                                "\n" +
                                "SELECT COST_CENTER.DATE AS DATE,\n" +
                                "       COST_CENTER.VOUCHER_ID,\n" +
                                "       COST_CENTER.VOUCHER_NO,\n" +
                                "       MCC.COST_CENTRE_NAME AS COST_CENTRE,\n" +
                                "       MCCC.COST_CENTRE_CATEGORY_NAME,\n" +
                                "       COST_CENTER.LEDGER_CODE,\n" +
                                "       COST_CENTER.CHEQUE_NO,\n" +
                                "       COST_CENTER.BANKLEDGER_NAME,\n" +
                                "       0 AS RECEIPT,\n" +
                                "       IFNULL(SUM(VCC.AMOUNT), 0) AS PAYMENT,\n" +
                                "       COST_CENTER.NARRATION\n" +
                                "  FROM (SELECT MT.VOUCHER_ID,\n" +
                                "               VT.LEDGER_ID,\n" +
                                "               MT.VOUCHER_DATE   AS DATE,\n" +
                                "               MT.VOUCHER_NO,\n" +
                                "               ML.LEDGER_CODE,\n" +
                                "               T.CHEQUE_NO,\n" +
                                "               ML.LEDGER_NAME    AS LEDGER,\n" +
                                "               T.BANKLEDGER_NAME,\n" +
                                "               0                 AS PAYMENT,\n" +
                                "               MT.NARRATION\n" +
                                "\n" +
                                "          FROM master_ledger_GROUP LG\n" +
                                "\n" +
                                "          LEFT JOIN master_ledger ML\n" +
                                "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "          LEFT JOIN voucher_trans VT\n" +
                                "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "          LEFT JOIN voucher_master_trans MT\n" +
                                "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "\n" +
                                "           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "          LEFT JOIN MASTER_PROJECT MP\n" +
                                "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "            ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                "\n" +
                                "          JOIN (SELECT CASHBANK.VOUCHER_ID,\n" +
                                "                      CASHBANK.LEDGER_ID,\n" +
                                "                      CASHBANK.CASH_FLAG,\n" +
                                "                      CASHBANK.BANK_FLAG,\n" +
                                "                      CASHBANK.LEDGER_CODE,\n" +
                                "                      CASHBANK.BANKLEDGER_NAME,\n" +
                                "                      CASHBANK.CHEQUE_NO\n" +
                                "                 FROM (SELECT VT.VOUCHER_ID,\n" +
                                "                              VT.LEDGER_ID,\n" +
                                "                              ML.LEDGER_CODE,\n" +
                                "                              ML.LEDGER_NAME AS BANKLEDGER_NAME,\n" +
                                "                              VT.CHEQUE_NO,\n" +
                                "                              CASE\n" +
                                "                                WHEN LG.GROUP_ID = 13 THEN\n" +
                                "                                 1\n" +
                                "                                ELSE\n" +
                                "                                 0\n" +
                                "                              END AS CASH_FLAG,\n" +
                                "                              CASE\n" +
                                "                                WHEN LG.GROUP_ID IN (12) THEN\n" +
                                "                                 1\n" +
                                "                                ELSE\n" +
                                "                                 0\n" +
                                "                              END AS BANK_FLAG\n" +
                                "\n" +
                                "                         FROM master_ledger_GROUP LG\n" +
                                "\n" +
                                "                         LEFT JOIN master_ledger ML\n" +
                                "                           ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                         LEFT JOIN voucher_trans VT\n" +
                                "                           ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                         LEFT JOIN voucher_master_trans MT\n" +
                                "                           ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "\n" +
                                "                          AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                          AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "                         LEFT JOIN MASTER_PROJECT MP\n" +
                                "                           ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "                         LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                           ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                                "\n" +
                                "                        WHERE MT.VOUCHER_TYPE IN ('PY', 'RC')\n" +
                                "\n" +
                                "                          AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "\n" +
                                "                          AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                       {   AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                       {   AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "                          and lg.group_id in (12, 14)\n" +
                                "                          AND MT.STATUS = 1\n" +
                                "                        GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                                "                        ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                                "                GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                                "            ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                                "\n" +
                                "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "           AND MT.VOUCHER_TYPE IN ('PY', 'RC')\n" +
                                "           AND VT.TRANS_MODE = 'DR'\n" +
                                "           AND MT.STATUS = 1\n" +
                                "\n" +
                                "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "\n" +
                                "           AND LG.GROUP_ID NOT IN (13)\n" +
                                "         GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, VT.LEDGER_ID) AS COST_CENTER\n" +
                                " INNER JOIN VOUCHER_CC_TRANS AS VCC\n" +
                                "    ON COST_CENTER.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                                "   AND COST_CENTER.LEDGER_ID = VCC.LEDGER_ID {AND VCC.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "   AND VCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                                "\n" +
                                "  LEFT JOIN MASTER_COST_CENTRE MCC\n" +
                                "    ON VCC.COST_CENTRE_ID = MCC.COST_CENTRE_ID\n" +
                                " INNER JOIN COSTCATEGORY_COSTCENTRE CC\n" +
                                "    ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                                "  LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n" +
                                "    ON MCCC.COST_CENTRECATEGORY_ID = COST_CATEGORY_ID\n" +
                                " GROUP BY MCC.COST_CENTRE_NAME,\n" +
                                "          COST_CENTER.DATE,\n" +
                                "          COST_CENTER.VOUCHER_ID,\n" +
                                "          COST_CENTER.LEDGER_ID ORDER BY DATE";


                        #region Old query

                        //query = "SELECT COST_CENTER.DATE AS DATE,\n" +
                        //        "       COST_CENTER.VOUCHER_ID,\n" +
                        //        "       COST_CENTER.BRANCH_ID,\n" +
                        //        "       COST_CENTER.VOUCHER_NO,\n" +
                        //        "       MCC.COST_CENTRE_NAME AS COST_CENTRE,\n" +
                        //        "       MCCC.COST_CENTRE_CATEGORY_NAME,\n" +
                        //        "       COST_CENTER.LEDGER_CODE,\n" +
                        //        "       COST_CENTER.CHEQUE_NO,\n" +
                        //        "       CONCAT(COST_CENTER.LEDGER, ' - ', COST_CENTER.BANKLEDGER_NAME) LEDGER,\n" +
                        //        "       IFNULL(SUM(VCC.AMOUNT), 0) AS RECEIPT,\n" +
                        //        "       0 AS PAYMENT,\n" +
                        //        "       COST_CENTER.NARRATION\n" +
                        //        "  FROM (SELECT MT.VOUCHER_ID,\n" +
                        //        "               MT.BRANCH_ID,\n" +
                        //        "               VT.LEDGER_ID,\n" +
                        //        "               MT.VOUCHER_DATE   AS DATE,\n" +
                        //        "               MT.VOUCHER_NO,\n" +
                        //        "               ML.LEDGER_CODE,\n" +
                        //        "               T.CHEQUE_NO,\n" +
                        //        "               ML.LEDGER_NAME    AS LEDGER,\n" +
                        //        "               0                 AS PAYMENT,\n" +
                        //        "               T.BANKLEDGER_NAME,\n" +
                        //        "               MT.NARRATION\n" +
                        //        "\n" +
                        //        "          FROM master_ledger_GROUP LG\n" +
                        //        "\n" +
                        //        "          LEFT JOIN master_ledger ML\n" +
                        //        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "          LEFT JOIN voucher_trans VT\n" +
                        //        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "          LEFT JOIN voucher_master_trans MT\n" +
                        //        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "            ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                        //        "\n" +
                        //        "          JOIN (SELECT CASHBANK.VOUCHER_ID,\n" +
                        //        "                      CASHBANK.BRANCH_ID,\n" +
                        //        "                      CASHBANK.LEDGER_ID,\n" +
                        //        "                      CASHBANK.CASH_FLAG,\n" +
                        //        "                      CASHBANK.BANK_FLAG,\n" +
                        //        "                      CASHBANK.LEDGER_CODE,\n" +
                        //        "                      CASHBANK.BANKLEDGER_NAME,\n" +
                        //        "                      CASHBANK.CHEQUE_NO\n" +
                        //        "                 FROM (SELECT VT.VOUCHER_ID,\n" +
                        //        "                              VT.BRANCH_ID,\n" +
                        //        "                              VT.LEDGER_ID,\n" +
                        //        "                              ML.LEDGER_CODE,\n" +
                        //        "                              ML.LEDGER_NAME AS BANKLEDGER_NAME,\n" +
                        //        "                              VT.CHEQUE_NO,\n" +
                        //        "                              CASE\n" +
                        //        "                                WHEN LG.GROUP_ID = 13 THEN\n" +
                        //        "                                 1\n" +
                        //        "                                ELSE\n" +
                        //        "                                 0\n" +
                        //        "                              END AS CASH_FLAG,\n" +
                        //        "                              CASE\n" +
                        //        "                                WHEN LG.GROUP_ID IN (12) THEN\n" +
                        //        "                                 1\n" +
                        //        "                                ELSE\n" +
                        //        "                                 0\n" +
                        //        "                              END AS BANK_FLAG\n" +
                        //        "\n" +
                        //        "                         FROM master_ledger_GROUP LG\n" +
                        //        "\n" +
                        //        "                         LEFT JOIN master_ledger ML\n" +
                        //        "                           ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                         LEFT JOIN voucher_trans VT\n" +
                        //        "                           ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                         LEFT JOIN voucher_master_trans MT\n" +
                        //        "                           ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                          AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                          AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "\n" +
                        //        "                        WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "\n" +
                        //        "                          AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                          AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                          and lg.group_id in (12, 14)\n" +
                        //        "                          AND MT.STATUS = 1\n" +
                        //        "                        GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                        //        "                        ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                        //        "                GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                        //        "            ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                        //        "\n" +
                        //        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "           AND MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "           AND VT.TRANS_MODE = 'CR'\n" +
                        //        "           AND MT.STATUS = 1\n" +
                        //        "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "           AND LG.GROUP_ID NOT IN (13)\n" +
                        //        "         GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, VT.LEDGER_ID) AS COST_CENTER\n" +
                        //        " INNER JOIN VOUCHER_CC_TRANS AS VCC\n" +
                        //        "    ON COST_CENTER.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                        //        "   AND COST_CENTER.LEDGER_ID = VCC.LEDGER_ID\n" +
                        //        "   AND VCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                        //        "\n" +

                        //        "   LEFT JOIN MASTER_COST_CENTRE MCC\n" +
                        //        "    ON VCC.COST_CENTRE_ID = MCC.COST_CENTRE_ID \n" +
                        //        "    INNER JOIN COSTCATEGORY_COSTCENTRE CC\n " +
                        //        "   ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n " +
                        //        "   LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n " +
                        //        "   ON MCCC.COST_CENTRECATEGORY_ID=COST_CATEGORY_ID\n " +

                        //        " GROUP BY MCC.COST_CENTRE_NAME, COST_CENTER.DATE, COST_CENTER.VOUCHER_ID, COST_CENTER.LEDGER_ID\n" +
                        //        "UNION ALL\n" +
                        //        "\n" +
                        //        "SELECT COST_CENTER.DATE AS DATE,\n" +
                        //        "       COST_CENTER.VOUCHER_ID,\n" +
                        //        "       COST_CENTER.BRANCH_ID,\n" +
                        //        "       COST_CENTER.VOUCHER_NO,\n" +
                        //        "       MCC.COST_CENTRE_NAME AS COST_CENTRE,\n" +
                        //        "       MCCC.COST_CENTRE_CATEGORY_NAME,\n" +
                        //        "       COST_CENTER.LEDGER_CODE,\n" +
                        //        "       COST_CENTER.CHEQUE_NO,\n" +
                        //        "       COST_CENTER.BANKLEDGER_NAME,\n" +
                        //        "       0 AS RECEIPT,\n" +
                        //        "       IFNULL(SUM(VCC.AMOUNT), 0) AS PAYMENT,\n" +
                        //        "       COST_CENTER.NARRATION\n" +
                        //        "  FROM (SELECT MT.VOUCHER_ID,\n" +
                        //        "               MT.BRANCH_ID,\n" +
                        //        "               VT.LEDGER_ID,\n" +
                        //        "               MT.VOUCHER_DATE   AS DATE,\n" +
                        //        "               MT.VOUCHER_NO,\n" +
                        //        "               ML.LEDGER_CODE,\n" +
                        //        "               T.CHEQUE_NO,\n" +
                        //        "               ML.LEDGER_NAME    AS LEDGER,\n" +
                        //        "               T.BANKLEDGER_NAME,\n" +
                        //        "               0                 AS PAYMENT,\n" +
                        //        "               MT.NARRATION\n" +
                        //        "\n" +
                        //        "          FROM master_ledger_GROUP LG\n" +
                        //        "\n" +
                        //        "          LEFT JOIN master_ledger ML\n" +
                        //        "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "          LEFT JOIN voucher_trans VT\n" +
                        //        "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "          LEFT JOIN voucher_master_trans MT\n" +
                        //        "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "            AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "            ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                        //        "\n" +
                        //        "          JOIN (SELECT CASHBANK.VOUCHER_ID,\n" +
                        //        "                      CASHBANK.BRANCH_ID,\n" +
                        //        "                      CASHBANK.LEDGER_ID,\n" +
                        //        "                      CASHBANK.CASH_FLAG,\n" +
                        //        "                      CASHBANK.BANK_FLAG,\n" +
                        //        "                      CASHBANK.LEDGER_CODE,\n" +
                        //        "                      CASHBANK.BANKLEDGER_NAME,\n" +
                        //        "                      CASHBANK.CHEQUE_NO\n" +
                        //        "                 FROM (SELECT VT.VOUCHER_ID,\n" +
                        //        "                              VT.BRANCH_ID,\n" +
                        //        "                              VT.LEDGER_ID,\n" +
                        //        "                              ML.LEDGER_CODE,\n" +
                        //        "                              ML.LEDGER_NAME AS BANKLEDGER_NAME,\n" +
                        //        "                              VT.CHEQUE_NO,\n" +
                        //        "                              CASE\n" +
                        //        "                                WHEN LG.GROUP_ID = 13 THEN\n" +
                        //        "                                 1\n" +
                        //        "                                ELSE\n" +
                        //        "                                 0\n" +
                        //        "                              END AS CASH_FLAG,\n" +
                        //        "                              CASE\n" +
                        //        "                                WHEN LG.GROUP_ID IN (12) THEN\n" +
                        //        "                                 1\n" +
                        //        "                                ELSE\n" +
                        //        "                                 0\n" +
                        //        "                              END AS BANK_FLAG\n" +
                        //        "\n" +
                        //        "                         FROM master_ledger_GROUP LG\n" +
                        //        "\n" +
                        //        "                         LEFT JOIN master_ledger ML\n" +
                        //        "                           ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                         LEFT JOIN voucher_trans VT\n" +
                        //        "                           ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                         LEFT JOIN voucher_master_trans MT\n" +
                        //        "                           ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                          AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "\n" +
                        //        "                        WHERE MT.VOUCHER_TYPE IN ('PY', 'RC')\n" +
                        //        "\n" +
                        //        "                          AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                          AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                          and lg.group_id in (12, 14)\n" +
                        //        "                          AND MT.STATUS = 1\n" +
                        //        "                        GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                        //        "                        ORDER BY VT.VOUCHER_ID, VT.SEQUENCE_NO) AS CASHBANK\n" +
                        //        "                GROUP BY CASHBANK.VOUCHER_ID) AS T\n" +
                        //        "            ON MT.VOUCHER_ID = T.VOUCHER_ID\n" +
                        //        "\n" +
                        //        "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "           AND MT.VOUCHER_TYPE IN ('PY', 'RC')\n" +
                        //        "           AND VT.TRANS_MODE = 'DR'\n" +
                        //        "           AND MT.STATUS = 1\n" +
                        //        "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "           AND LG.GROUP_ID NOT IN (13)\n" +
                        //        "         GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, VT.LEDGER_ID) AS COST_CENTER\n" +
                        //        " INNER JOIN VOUCHER_CC_TRANS AS VCC\n" +
                        //        "    ON COST_CENTER.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                        //        "   AND COST_CENTER.LEDGER_ID = VCC.LEDGER_ID\n" +
                        //        "   AND VCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                        //        "\n" +

                        //        "  LEFT JOIN MASTER_COST_CENTRE MCC\n" +
                        //        "    ON VCC.COST_CENTRE_ID = MCC.COST_CENTRE_ID \n" +
                        //        "    INNER JOIN COSTCATEGORY_COSTCENTRE CC\n " +
                        //        "   ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n " +
                        //        "  LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n " +
                        //        "   ON MCCC.COST_CENTRECATEGORY_ID=COST_CATEGORY_ID\n " +

                        //        " GROUP BY MCC.COST_CENTRE_NAME, COST_CENTER.DATE, COST_CENTER.VOUCHER_ID, COST_CENTER.LEDGER_ID";
                        #endregion
                        break;
                    }
                #endregion

                #region Cash Bank Book
                case ReportSQLCommand.CostCentre.CostCenterCashBankBook:
                    {

                        query = "SELECT TT.VOUCHER_ID,\n" +
                              "       TT.BRANCH_ID,\n" +
                              "       TRIM(GROUP_CONCAT(TT.LEDGER_ID ORDER BY TT.sort_id DESC SEPARATOR '')) AS LEDGER_ID,\n" +
                              "       DATE(TT.VOUCHER_DATE) AS 'DATE',\n" +
                              "       TRIM(GROUP_CONCAT(TT.VOUCHER_NO ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS RECEIPT_NO,\n" +
                              "       TRIM(GROUP_CONCAT(TT.LEDGER_CODE ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS LEDGER_CODE,\n" +
                              "       TRIM(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS 'RECEIPT',\n" +
                              "       SUM(TT.CASH) AS CASH,\n" +
                              "       SUM(TT.BANK) AS BANK,\n" +
                              "       TT.COST_CENTRE_NAME,\n" +
                              "        TT.COST_CENTRE_CATEGORY_NAME,\n" +
                              "       TRIM(GROUP_CONCAT(TT.NARRATION ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS NARRATION,\n" +
                              "       TRIM(GROUP_CONCAT(TT.PAY_VOUCHER_ID ORDER BY TT.sort_id DESC\n" +
                              "                         SEPARATOR '')) AS PAY_VOUCHER_ID,\n" +
                              "       TRIM(GROUP_CONCAT(TT.PAY_VID ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS PAY_VNO,\n" +
                              "       TRIM(GROUP_CONCAT(TT.PAY_LED_ID ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS PAY_LED_ID,\n" +
                              "       TRIM(GROUP_CONCAT(TT.PAY_CODE ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS PAY_CODE,\n" +
                              "       TRIM(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS 'PAYMENT',\n" +
                              "       SUM(TT.PAY_CASH) AS PAY_CASH,\n" +
                              "       SUM(TT.PAY_BANK) AS PAY_BANK,\n" +
                              "       TRIM(GROUP_CONCAT(TT.NAP ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS NARRATION_PAY\n" +
                              "  FROM (\n" +
                              "\n" +
                              "        SELECT RC.VOUCHER_ID,\n" +
                              "                RC.BRANCH_ID,\n" +
                              "                RC.LEDGER_ID,\n" +
                              "                RC.VOUCHER_NO,\n" +
                              "                MC.COST_CENTRE_NAME,\n " +
                              "                MCCC.COST_CENTRE_CATEGORY_NAME, " +
                              "                RC.LEDGER_CODE,\n" +
                              "                RC.SORT_ID,\n" +
                              "                RC.VOUCHER_DATE,\n" +
                              "                RC.LEDGER_NAME,\n" +
                              "                CASE\n" +
                              "                  WHEN RC.CASH = 1 THEN\n" +
                              "                   SUM(VC.AMOUNT)\n" +
                              "                END AS CASH,\n" +
                              "                CASE\n" +
                              "                  WHEN RC.BANK = 1 THEN\n" +
                              "                   SUM(VC.AMOUNT)\n" +
                              "                END AS BANK,\n" +
                              "                '' AS PAY_VOUCHER_ID,\n" +
                              "                '' AS PAY_VID,\n" +
                              "                '' as PAY_LED_ID,\n" +
                              "                '' AS PAY_CODE,\n" +
                              "                '' AS PAY_LEDGER,\n" +
                              "                0 AS PAY_CASH,\n" +
                              "                0 AS PAY_BANK,\n" +
                              "                RC.NARRATION,\n" +
                              "                '' AS NAP\n" +
                              "\n" +
                              "          FROM (SELECT VT.VOUCHER_ID,\n" +
                              "                        VT.BRANCH_ID,\n" +
                              "                        VT.LEDGER_ID,\n" +
                              "                        --     GROUP_CONCAT(MT.VOUCHER_NO ORDER BY sort_id DESC SEPARATOR ' ') AS VOUCHER_NO,\n" +
                              "                        --    GROUP_CONCAT(ML.LEDGER_CODE ORDER BY sort_id DESC SEPARATOR ' ') AS LEDGER_CODE,\n" +
                              "                        MT.VOUCHER_NO AS VOUCHER_NO,\n" +
                              "                        ML.LEDGER_CODE AS LEDGER_CODE,\n" +
                              "                        @row_num :=\n" +
                              "                        IF(@prev_value = T.voucher_date, @row_num + 1, 1) AS sort_id,\n" +
                              "                        @prev_value := T.voucher_date as VOUCHER_DATE,\n" +
                              "                         CONCAT(ML.LEDGER_NAME,T.ACCOUNT_NUMBER)AS LEDGER_NAME,\n" +
                              "                        CASE\n" +
                              "                          WHEN T.CASH_FLAG = 1 THEN\n" +
                              "                           1\n" +
                              "                          ELSE\n" +
                              "                           0.00\n" +
                              "                        END AS CASH,\n" +
                              "                        CASE\n" +
                              "                          WHEN T.BANK_FLAG = 1 THEN\n" +
                              "                           1\n" +
                              "                          ELSE\n" +
                              "                           0.00\n" +
                              "                        END AS BANK,\n" +
                              "                        '' AS PAY_VOUCHER_ID,\n" +
                              "                        '' AS PAY_VID,\n" +
                              "                        '' as PAY_LED_ID,\n" +
                              "                        '' AS PAY_CODE,\n" +
                              "                        '' AS PAY_LEDGER,\n" +
                              "                        0 AS PAY_CASH,\n" +
                              "                        0 AS PAY_BANK,\n" +
                              "                        MT.NARRATION,\n" +
                              "                        '' AS NAP\n" +
                              "\n" +
                              "                   FROM master_ledger_GROUP LG\n" +
                              "\n" +
                              "                   LEFT JOIN master_ledger ML\n" +
                              "                     ON ML.GROUP_ID = LG.GROUP_ID\n" +
                              "                   LEFT JOIN voucher_trans VT\n" +
                              "                     ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                              "                   LEFT JOIN voucher_master_trans MT\n" +
                              "                     ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                              "                    AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                              "                   LEFT JOIN MASTER_PROJECT MP\n" +
                              "                     ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                              "                   LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                              "                     ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +

                              "\n" +
                              "                   JOIN (SELECT CASHBANK.VOUCHER_DATE,\n" +
                              "                               CASHBANK.VOUCHER_ID,\n" +
                              "                               CASHBANK.BRANCH_ID,\n" +
                              "                               CASHBANK.LEDGER_ID,\n" +
                              "                               CASHBANK.CASH_FLAG,\n" +
                              "                               CASHBANK.BANK_FLAG,\n" +
                              "                               CASHBANK.LEDGER_CODE,CASHBANK.ACCOUNT_NUMBER\n" +
                              "                          FROM (SELECT MT.VOUCHER_DATE,\n" +
                              "                                       VT.BRANCH_ID,\n" +
                              "                                       VT.VOUCHER_ID,\n" +
                              "                                       VT.LEDGER_ID,\n" +
                              "                                       ML.LEDGER_CODE,\n" +
                              "                                 IFNULL(CONCAT(' - ',MBA.ACCOUNT_NUMBER),' ') AS ACCOUNT_NUMBER,\n" +
                              "                                       CASE\n" +
                              "                                         WHEN LG.GROUP_ID = 13 THEN\n" +
                              "                                          1\n" +
                              "                                         ELSE\n" +
                              "                                          0\n" +
                              "                                       END AS CASH_FLAG,\n" +
                              "                                       CASE\n" +
                              "                                         WHEN LG.GROUP_ID = 12 THEN\n" +
                              "                                          1\n" +
                              "                                         ELSE\n" +
                              "                                          0\n" +
                              "                                       END AS BANK_FLAG\n" +
                              "\n" +
                              "                                  FROM master_ledger_GROUP LG\n" +
                              "\n" +
                              "                                  LEFT JOIN master_ledger ML\n" +
                              "                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                              "                                  LEFT JOIN voucher_trans VT\n" +
                              "                                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                              "                                  LEFT JOIN voucher_master_trans MT\n" +
                              "                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                              "                                    AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                              "                                 LEFT JOIN MASTER_BANK_ACCOUNT MBA \n" +
                              "                                     ON MBA.LEDGER_ID=VT.LEDGER_ID\n" +
                              "                                  LEFT JOIN MASTER_BANK MB \n" +
                              "                                     ON MB.BANK_ID=MBA.BANK_ID \n" +
                              "                                 WHERE MT.VOUCHER_TYPE IN('RC')\n" +  // ,'PY'
                              "                                   AND mt.VOUCHER_DATE BETWEEN\n" +
                              "                                   ?DATE_FROM AND ?DATE_TO\n" +
                              "                                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                              "                                   and lg.group_id in (12, 13)\n" +
                              "                                   AND MT.STATUS = 1\n" +
                              "                                 GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                              "                                 ORDER BY MT.VOUCHER_DATE,\n" +
                              "                                          VT.VOUCHER_ID,\n" +
                              "                                          VT.SEQUENCE_NO) AS CASHBANK\n" +
                              "                         GROUP BY CASHBANK.VOUCHER_ID\n" +
                              "                         ORDER BY CASHBANK.VOUCHER_DATE) AS T\n" +
                              "                     ON MT.VOUCHER_ID = T.VOUCHER_ID,\n" +
                              "\n" +
                              "                  (SELECT @row_num := 1) x, (SELECT @prev_value := null) y\n" +
                              "                  WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                              "                    AND MT.VOUCHER_TYPE IN ('RC')\n" +   //,'PY'
                              "                    AND VT.TRANS_MODE IN('CR','DR') \n" +
                              "                    AND MT.STATUS = 1\n" +
                              "                    AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                              "                    AND LG.GROUP_ID NOT IN (12, 13)\n" +
                              "      { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                              "      { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                              "                  GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, VT.Ledger_id) as RC\n" +
                              "         INNER JOIN VOUCHER_CC_TRANS AS VC\n" +
                              "            ON RC.VOUCHER_ID = VC.VOUCHER_ID\n" +
                              "           AND RC.LEDGER_ID = VC.LEDGER_ID\n" +
                              "           AND VC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                              "            LEFT JOIN MASTER_COST_CENTRE MC\n" +
                              "                  ON MC.COST_CENTRE_ID = VC.COST_CENTRE_ID\n" +
                              "       INNER JOIN COSTCATEGORY_COSTCENTRE\n CC " +
                               " ON CC.COST_CENTRE_ID = VC.COST_CENTRE_ID\n " +
                               "  LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n " +
                               "      ON MCCC.COST_CENTRECATEGORY_ID=COST_CATEGORY_ID\n " +
                              "       GROUP BY MC.COST_CENTRE_NAME,RC.VOUCHER_DATE, RC.VOUCHER_ID, RC.LEDGER_ID,RC.SORT_ID\n" +
                              "\n" +
                              "        UNION ALL\n" +
                              "\n" +
                              "        SELECT '' AS VOUCHER_ID,\n" +
                              "                  PY.BRANCH_ID,\n" +
                              "               '' AS LEDGER_ID,\n" +
                              "               '' AS VOUCHER_NO,\n" +
                              "                MC.COST_CENTRE_NAME,\n" +
                              "                MCCC.COST_CENTRE_CATEGORY_NAME," +
                              "               '' AS LEDGER_CODE,\n" +
                              "               PY. sort_id,\n" +
                              "               PY.VOUCHER_DATE,\n" +
                              "               '' AS LEDGER_NAME,\n" +
                              "               0 AS CASH,\n" +
                              "               0 AS BANK,\n" +
                              "               PY.PAY_VOUCHER_ID,\n" +
                              "               PY.PAY_VID,\n" +
                              "               PY.PAY_LED_ID,\n" +
                              "               PY.PAY_CODE,\n" +
                              "               PY. PAY_LEDGER,\n" +
                              "               CASE\n" +
                              "                 WHEN PY.PAY_CASH = 1 THEN\n" +
                              "                  SUM(VC.AMOUNT)\n" +
                              "                 ELSE\n" +
                              "                  0.00\n" +
                              "               END AS PAY_CASH,\n" +
                              "               CASE\n" +
                              "                 WHEN PY.PAY_BANK = 1 THEN\n" +
                              "                  SUM(VC.AMOUNT)\n" +
                              "                 ELSE\n" +
                              "                  0.00\n" +
                              "               END AS PAY_BANK,\n" +
                              "               '' AS NARRATION,\n" +
                              "               PY.NAP AS NAP\n" +
                              "          FROM (SELECT '' AS VOUCHER_ID,\n" +
                              "                       VT.BRANCH_ID,\n" +
                              "                       '' AS LEDGER_ID,\n" +
                              "                       '' AS VOUCHER_NO,\n" +
                              "                       '' AS LEDGER_CODE,\n" +
                              "                       @row_number :=\n" +
                              "                       IF(@prev_val = T.voucher_date, @row_number + 1, 1) AS sort_id,\n" +
                              "                       @prev_val := T.voucher_date as VOUCHER_DATE,\n" +
                              "                       '' AS LEDGER_NAME,\n" +
                              "                       0 AS CASH,\n" +
                              "                       0 AS BANK,\n" +
                              "                       VT.VOUCHER_ID AS PAY_VOUCHER_ID,\n" +
                              "                       --  GROUP_CONCAT(T.VOUCHER_NO ORDER BY sort_id DESC SEPARATOR '') AS PAY_VID,\n" +
                              "                       -- VT.LEDGER_ID as PAY_LED_ID,\n" +
                              "                       -- GROUP_CONCAT(ML.LEDGER_CODE ORDER BY sort_id DESC SEPARATOR '') AS PAY_CODE,\n" +
                              "                       --  GROUP_CONCAT(ML.LEDGER_NAME ORDER BY sort_id DESC SEPARATOR ' ') AS PAY_LEDGER,\n" +
                              "                       T.VOUCHER_NO   AS PAY_VID,\n" +
                              "                       VT.LEDGER_ID   as PAY_LED_ID,\n" +
                              "                       ML.LEDGER_CODE AS PAY_CODE,\n" +
                              "\n" +
                              "                      CONCAT(ML.LEDGER_NAME,T.ACCOUNT_NUMBER)AS PAY_LEDGER,\n" +
                              "                       CASE\n" +
                              "                         WHEN T.CASH_FLAG = 1 THEN\n" +
                              "                          1\n" +
                              "                         ELSE\n" +
                              "                          0.00\n" +
                              "                       END AS PAY_CASH,\n" +
                              "                       CASE\n" +
                              "                         WHEN T.BANK_FLAG = 1 THEN\n" +
                              "                          1\n" +
                              "                         ELSE\n" +
                              "                          0.00\n" +
                              "                       END AS PAY_BANK,\n" +
                              "                       '' AS NARRATION,\n" +
                              "                       MT.NARRATION AS NAP\n" +
                              "                  FROM master_ledger_GROUP LG\n" +
                              "\n" +
                              "                  LEFT JOIN master_ledger ML\n" +
                              "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                              "                  LEFT JOIN voucher_trans VT\n" +
                              "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                              "                  LEFT JOIN voucher_master_trans MT\n" +
                              "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                              "                     AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                              "                  LEFT JOIN MASTER_PROJECT MP\n" +
                              "                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                              "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                              "                    ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                              "\n" +
                              "                  JOIN (SELECT CASHBANK.VOUCHER_DATE,\n" +
                              "                              CASHBANK.VOUCHER_ID,\n" +
                              "                              CASHBANK.BRANCH_ID,\n" +
                              "                              CASHBANK.LEDGER_ID,\n" +
                              "                              CASHBANK.CASH_FLAG,\n" +
                              "                              CASHBANK.BANK_FLAG,\n" +
                              "                              CASHBANK.VOUCHER_NO,\n" +
                              "                              CASHBANK.LEDGER_CODE,CASHBANK.ACCOUNT_NUMBER\n" +
                              "                         FROM (SELECT MT.VOUCHER_DATE,\n" +
                              "                                      VT.BRANCH_ID,\n" +
                              "                                      VT.VOUCHER_ID,\n" +
                              "                                      MT.VOUCHER_NO,\n" +
                              "                                      ML.LEDGER_CODE,\n" +
                              "                                      VT.LEDGER_ID,\n" +
                               "                                 IFNULL(CONCAT(' - ',MBA.ACCOUNT_NUMBER),' ') AS ACCOUNT_NUMBER,\n" +
                              "                                      CASE\n" +
                              "                                        WHEN LG.GROUP_ID = 13 THEN\n" +
                              "                                         1\n" +
                              "                                        ELSE\n" +
                              "                                         0\n" +
                              "                                      END AS CASH_FLAG,\n" +
                              "                                      CASE\n" +
                              "                                        WHEN LG.GROUP_ID = 12 THEN\n" +
                              "                                         1\n" +
                              "                                        ELSE\n" +
                              "                                         0\n" +
                              "                                      END AS BANK_FLAG\n" +
                              "\n" +
                              "                                 FROM master_ledger_GROUP LG\n" +
                              "\n" +
                              "                                 LEFT JOIN master_ledger ML\n" +
                              "\n" +
                              "                                   ON ML.GROUP_ID = LG.GROUP_ID\n" +
                              "                                 LEFT JOIN voucher_trans VT\n" +
                              "                                   ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                              "                                 LEFT JOIN voucher_master_trans MT\n" +
                              "                                   ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                              "                                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                              "                                 LEFT JOIN MASTER_BANK_ACCOUNT MBA \n" +
                              "                                     ON MBA.LEDGER_ID=VT.LEDGER_ID\n" +
                              "                                  LEFT JOIN MASTER_BANK MB \n" +
                              "                                     ON MB.BANK_ID=MBA.BANK_ID \n" +
                              "                                WHERE MT.VOUCHER_TYPE IN ('PY')\n" +  //'RC',
                              "                                  AND mt.VOUCHER_DATE BETWEEN\n" +
                              "                                     ?DATE_FROM AND ?DATE_TO\n" +
                              "                                  AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                              "                                  and lg.group_id in (12, 13)\n" +
                              "                                  AND MT.STATUS = 1\n" +
                              "                                GROUP BY MT.VOUCHER_ID, VT.LEDGER_ID\n" +
                              "                                ORDER BY MT.VOUCHER_DATE,\n" +
                              "                                         VT.VOUCHER_ID,\n" +
                              "                                         VT.SEQUENCE_NO) AS CASHBANK\n" +
                              "                        GROUP BY CASHBANK.VOUCHER_ID\n" +
                              "                        ORDER BY CASHBANK.VOUCHER_DATE) AS T\n" +
                              "                    ON MT.VOUCHER_ID = T.VOUCHER_ID, (SELECT @row_number := 1) x,\n" +
                              "                 (SELECT @prev_val := null) y\n" +
                              "                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                              "                    AND MT.VOUCHER_TYPE IN ('PY')\n" +  //'RC',
                              "                    AND VT.TRANS_MODE IN('CR','DR') \n" +
                              "                   AND MT.STATUS = 1\n" +
                              "                   AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                              "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                              "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                              "\n" +
                              "                   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                              "                 GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, ML.LEDGER_ID) AS PY\n" +
                              "         INNER JOIN VOUCHER_CC_TRANS AS VC\n" +
                              "            ON PY.PAY_VOUCHER_ID = VC.VOUCHER_ID\n" +
                              "           AND PY.PAY_LED_id = VC.LEDGER_ID  {AND VC.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                              "           AND VC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                              "            LEFT JOIN MASTER_COST_CENTRE MC\n" +
                              "              ON MC.COST_CENTRE_ID = VC.COST_CENTRE_ID\n" +
                              "      INNER JOIN COSTCATEGORY_COSTCENTRE CC ON CC.COST_CENTRE_ID = VC.COST_CENTRE_ID " +
                              "      LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC ON MCCC.COST_CENTRECATEGORY_ID=COST_CATEGORY_ID " +
                              "         GROUP BY MC.COST_CENTRE_NAME,PY.VOUCHER_DATE, PY.VOUCHER_ID, PY.LEDGER_ID,PY.SORT_ID) AS TT\n" +
                              " GROUP BY TT.COST_CENTRE_NAME,TT.VOUCHER_DATE, tt.SORT_ID\n" +
                              " ORDER BY TT.VOUCHER_DATE";


                        //query = "SELECT TT.VOUCHER_ID,\n" +
                        //        " TT.BRANCH_ID,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.LEDGER_ID ORDER BY TT.sort_id DESC SEPARATOR '')) AS LEDGER_ID,\n" +
                        //        "       DATE(TT.VOUCHER_DATE) AS 'DATE',\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.VOUCHER_NO ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS RECEIPT_NO,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.LEDGER_CODE ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS LEDGER_CODE,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.LEDGER_NAME ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS 'RECEIPT',\n" +
                        //        "       SUM(TT.CASH) AS CASH,\n" +
                        //        "       SUM(TT.BANK) AS BANK,\n" +
                        //        "       TT.COST_CENTRE_NAME,\n" +
                        //        "       TT.COST_CENTRE_CATEGORY_NAME,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.NARRATION ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS NARRATION,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.PAY_VOUCHER_ID ORDER BY TT.sort_id DESC\n" +
                        //        "                         SEPARATOR '')) AS PAY_VOUCHER_ID,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.PAY_VID ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS PAY_VNO,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.PAY_LED_ID ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS PAY_LED_ID,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.PAY_CODE ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS PAY_CODE,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.PAY_LEDGER ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS 'PAYMENT',\n" +
                        //        "       SUM(TT.PAY_CASH) AS PAY_CASH,\n" +
                        //        "       SUM(TT.PAY_BANK) AS PAY_BANK,\n" +
                        //        "       TRIM(GROUP_CONCAT(TT.NAP ORDER BY TT.sort_id DESC SEPARATOR ' ')) AS NARRATION_PAY\n" +
                        //        "  FROM (\n" +
                        //        "\n" +
                        //        "        SELECT RC.VOUCHER_ID,\n" +
                        //        "                RC.BRANCH_ID,\n" +
                        //        "                RC.LEDGER_ID,\n" +
                        //        "                RC.VOUCHER_NO,\n" +

                        //        "                MC.COST_CENTRE_NAME,\n " +
                        //        "                MCCC.COST_CENTRE_CATEGORY_NAME, " +

                        //        "                RC.LEDGER_CODE,\n" +
                        //        "                RC.SORT_ID,\n" +
                        //        "                RC.VOUCHER_DATE,\n" +
                        //        "                RC.LEDGER_NAME,\n" +
                        //        "                CASE\n" +
                        //        "                  WHEN RC.CASH = 1 THEN\n" +
                        //        "                   SUM(VC.AMOUNT)\n" +
                        //        "                END AS CASH,\n" +
                        //        "                CASE\n" +
                        //        "                  WHEN RC.BANK = 1 THEN\n" +
                        //        "                   SUM(VC.AMOUNT)\n" +
                        //        "                END AS BANK,\n" +
                        //        "                '' AS PAY_VOUCHER_ID,\n" +
                        //        "                '' AS PAY_VID,\n" +
                        //        "                '' as PAY_LED_ID,\n" +
                        //        "                '' AS PAY_CODE,\n" +
                        //        "                '' AS PAY_LEDGER,\n" +
                        //        "                0 AS PAY_CASH,\n" +
                        //        "                0 AS PAY_BANK,\n" +
                        //        "                RC.NARRATION,\n" +
                        //        "                '' AS NAP\n" +
                        //        "\n" +
                        //        "          FROM (SELECT VT.VOUCHER_ID,\n" +
                        //        "                        VT.BRANCH_ID,\n" +
                        //        "                        VT.LEDGER_ID,\n" +
                        //        "                        --     GROUP_CONCAT(MT.VOUCHER_NO ORDER BY sort_id DESC SEPARATOR ' ') AS VOUCHER_NO,\n" +
                        //        "                        --    GROUP_CONCAT(ML.LEDGER_CODE ORDER BY sort_id DESC SEPARATOR ' ') AS LEDGER_CODE,\n" +
                        //        "                        MT.VOUCHER_NO AS VOUCHER_NO,\n" +
                        //        "                        ML.LEDGER_CODE AS LEDGER_CODE,\n" +
                        //        "                        @row_num :=\n" +
                        //        "                        IF(@prev_value = T.voucher_date, @row_num + 1, 1) AS sort_id,\n" +
                        //        "                        @prev_value := T.voucher_date as VOUCHER_DATE,\n" +
                        //        "                        CONCAT(ML.LEDGER_NAME, T.ACCOUNT_NUMBER) AS LEDGER_NAME,\n" +
                        //        "                        CASE\n" +
                        //        "                          WHEN T.CASH_FLAG = 1 THEN\n" +
                        //        "                           1\n" +
                        //        "                          ELSE\n" +
                        //        "                           0.00\n" +
                        //        "                        END AS CASH,\n" +
                        //        "                        CASE\n" +
                        //        "                          WHEN T.BANK_FLAG = 1 THEN\n" +
                        //        "                           1\n" +
                        //        "                          ELSE\n" +
                        //        "                           0.00\n" +
                        //        "                        END AS BANK,\n" +
                        //        "                        '' AS PAY_VOUCHER_ID,\n" +
                        //        "                        '' AS PAY_VID,\n" +
                        //        "                        '' as PAY_LED_ID,\n" +
                        //        "                        '' AS PAY_CODE,\n" +
                        //        "                        '' AS PAY_LEDGER,\n" +
                        //        "                        0 AS PAY_CASH,\n" +
                        //        "                        0 AS PAY_BANK,\n" +
                        //        "                        MT.NARRATION,\n" +
                        //        "                        '' AS NAP\n" +
                        //        "\n" +
                        //        "                   FROM master_ledger_GROUP LG\n" +
                        //        "\n" +
                        //        "                   LEFT JOIN master_ledger ML\n" +
                        //        "                     ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                   LEFT JOIN voucher_trans VT\n" +
                        //        "                     ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                   LEFT JOIN voucher_master_trans MT\n" +
                        //        "                     ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                     AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                     AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                   LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "                     ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "                   LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                     ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                        //        "\n" +
                        //        "                   JOIN (SELECT CASHBANK.VOUCHER_DATE,\n" +
                        //        "                               CASHBANK.BRANCH_ID,\n" +
                        //        "                               CASHBANK.VOUCHER_ID,\n" +
                        //        "                               CASHBANK.LEDGER_ID,\n" +
                        //        "                               CASHBANK.CASH_FLAG,\n" +
                        //        "                               CASHBANK.BANK_FLAG,\n" +
                        //        "                               CASHBANK.LEDGER_CODE,\n" +
                        //        "                               CASHBANK.ACCOUNT_NUMBER\n" +
                        //        "                          FROM (SELECT MT.VOUCHER_DATE,\n" +
                        //        "                                       VT.VOUCHER_ID,\n" +
                        //        "                                       VT.BRANCH_ID,\n" +
                        //        "                                       VT.LEDGER_ID,\n" +
                        //        "                                       ML.LEDGER_CODE,\n" +
                        //        "                                       IFNULL(CONCAT(' - ', MBA.ACCOUNT_NUMBER),\n" +
                        //        "                                              ' ') AS ACCOUNT_NUMBER,\n" +
                        //        "                                       CASE\n" +
                        //        "                                         WHEN LG.GROUP_ID = 13 THEN\n" +
                        //        "                                          1\n" +
                        //        "                                         ELSE\n" +
                        //        "                                          0\n" +
                        //        "                                       END AS CASH_FLAG,\n" +
                        //        "                                       CASE\n" +
                        //        "                                         WHEN LG.GROUP_ID = 12 THEN\n" +
                        //        "                                          1\n" +
                        //        "                                         ELSE\n" +
                        //        "                                          0\n" +
                        //        "                                       END AS BANK_FLAG\n" +
                        //        "\n" +
                        //        "                                  FROM master_ledger_GROUP LG\n" +
                        //        "\n" +
                        //        "                                  LEFT JOIN master_ledger ML\n" +
                        //        "                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                                  LEFT JOIN voucher_trans VT\n" +
                        //        "                                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                                  LEFT JOIN voucher_master_trans MT\n" +
                        //        "                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                                    AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                                     AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                                  LEFT JOIN MASTER_BANK_ACCOUNT MBA\n" +
                        //        "                                    ON MBA.LEDGER_ID = VT.LEDGER_ID\n" +
                        //        "                                  LEFT JOIN MASTER_BANK MB\n" +
                        //        "                                    ON MB.BANK_ID = MBA.BANK_ID\n" +
                        //        "                                 WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "                                   AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                                   and lg.group_id in (12, 13)\n" +
                        //        "                                   AND MT.STATUS = 1\n" +
                        //        "                                 GROUP BY VT.VOUCHER_ID, VT.LEDGER_ID\n" +
                        //        "                                 ORDER BY MT.VOUCHER_DATE,\n" +
                        //        "                                          VT.VOUCHER_ID,\n" +
                        //        "                                          VT.SEQUENCE_NO) AS CASHBANK\n" +
                        //        "                         GROUP BY CASHBANK.VOUCHER_ID\n" +
                        //        "                         ORDER BY CASHBANK.VOUCHER_DATE) AS T\n" +
                        //        "                     ON MT.VOUCHER_ID = T.VOUCHER_ID,\n" +
                        //        "\n" +
                        //        "                  (SELECT @row_num := 1) x, (SELECT @prev_value := null) y\n" +
                        //        "                  WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                    AND MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "                    AND VT.TRANS_MODE = 'CR'\n" +
                        //        "                    AND MT.STATUS = 1\n" +
                        //        "                    AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                    AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "                  GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, VT.Ledger_id) as RC\n" +
                        //        "         INNER JOIN VOUCHER_CC_TRANS AS VC\n" +
                        //        "            ON RC.VOUCHER_ID = VC.VOUCHER_ID\n" +
                        //        "           AND RC.LEDGER_ID = VC.LEDGER_ID {AND VC.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "           AND VC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +

                        //        "       LEFT JOIN MASTER_COST_CENTRE MC\n" +
                        //        "       ON MC.COST_CENTRE_ID = VC.COST_CENTRE_ID\n" +
                        //        "       INNER JOIN COSTCATEGORY_COSTCENTRE\n CC " +
                        //        "       ON CC.COST_CENTRE_ID = VC.COST_CENTRE_ID\n " +
                        //        "       LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n " +
                        //        "       ON MCCC.COST_CENTRECATEGORY_ID=COST_CATEGORY_ID\n " +


                        //        "         GROUP BY MC.COST_CENTRE_NAME, RC.VOUCHER_DATE, RC.VOUCHER_ID, RC.LEDGER_ID, RC.SORT_ID\n" +
                        //        "\n" +
                        //        "        UNION ALL\n" +
                        //        "\n" +
                        //        "        SELECT '' AS VOUCHER_ID,\n" +
                        //        "               PY.BRANCH_ID,\n" +
                        //        "               '' AS LEDGER_ID,\n" +
                        //        "               '' AS VOUCHER_NO,\n" +

                        //        "                MC.COST_CENTRE_NAME,\n" +
                        //        "                MCCC.COST_CENTRE_CATEGORY_NAME," +

                        //        "               '' AS LEDGER_CODE,\n" +
                        //        "               PY. sort_id,\n" +
                        //        "               PY.VOUCHER_DATE,\n" +
                        //        "               '' AS LEDGER_NAME,\n" +
                        //        "               0 AS CASH,\n" +
                        //        "               0 AS BANK,\n" +
                        //        "               PY.PAY_VOUCHER_ID,\n" +
                        //        "               PY.PAY_VID,\n" +
                        //        "               PY.PAY_LED_ID,\n" +
                        //        "               PY.PAY_CODE,\n" +
                        //        "               PY. PAY_LEDGER,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN PY.PAY_CASH = 1 THEN\n" +
                        //        "                  SUM(VC.AMOUNT)\n" +
                        //        "                 ELSE\n" +
                        //        "                  0.00\n" +
                        //        "               END AS PAY_CASH,\n" +
                        //        "               CASE\n" +
                        //        "                 WHEN PY.PAY_BANK = 1 THEN\n" +
                        //        "                  SUM(VC.AMOUNT)\n" +
                        //        "                 ELSE\n" +
                        //        "                  0.00\n" +
                        //        "               END AS PAY_BANK,\n" +
                        //        "               '' AS NARRATION,\n" +
                        //        "               PY.NARRATION AS NAP\n" +
                        //        "          FROM (SELECT '' AS VOUCHER_ID,\n" +
                        //        "                       VT.BRANCH_ID,\n" +
                        //        "                       '' AS LEDGER_ID,\n" +
                        //        "                       '' AS VOUCHER_NO,\n" +
                        //        "                       '' AS LEDGER_CODE,\n" +
                        //        "                       @row_number :=\n" +
                        //        "                       IF(@prev_val = T.voucher_date, @row_number + 1, 1) AS sort_id,\n" +
                        //        "                       @prev_val := T.voucher_date as VOUCHER_DATE,\n" +
                        //        "                       '' AS LEDGER_NAME,\n" +
                        //        "                       0 AS CASH,\n" +
                        //        "                       0 AS BANK,\n" +
                        //        "                       VT.VOUCHER_ID AS PAY_VOUCHER_ID,\n" +
                        //        "                       --  GROUP_CONCAT(T.VOUCHER_NO ORDER BY sort_id DESC SEPARATOR '') AS PAY_VID,\n" +
                        //        "                       -- VT.LEDGER_ID as PAY_LED_ID,\n" +
                        //        "                       -- GROUP_CONCAT(ML.LEDGER_CODE ORDER BY sort_id DESC SEPARATOR '') AS PAY_CODE,\n" +
                        //        "                       --  GROUP_CONCAT(ML.LEDGER_NAME ORDER BY sort_id DESC SEPARATOR ' ') AS PAY_LEDGER,\n" +
                        //        "                       T.VOUCHER_NO   AS PAY_VID,\n" +
                        //        "                       VT.LEDGER_ID   as PAY_LED_ID,\n" +
                        //        "                       ML.LEDGER_CODE AS PAY_CODE,\n" +
                        //        "\n" +
                        //        "                       CONCAT(ML.LEDGER_NAME, T.ACCOUNT_NUMBER) AS PAY_LEDGER,\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN T.CASH_FLAG = 1 THEN\n" +
                        //        "                          1\n" +
                        //        "                         ELSE\n" +
                        //        "                          0.00\n" +
                        //        "                       END AS PAY_CASH,\n" +
                        //        "                       CASE\n" +
                        //        "                         WHEN T.BANK_FLAG = 1 THEN\n" +
                        //        "                          1\n" +
                        //        "                         ELSE\n" +
                        //        "                          0.00\n" +
                        //        "                       END AS PAY_BANK,\n" +
                        //        "                       '' AS NARRATION,\n" +
                        //        "                       MT.NARRATION AS NAP\n" +
                        //        "                  FROM master_ledger_GROUP LG\n" +
                        //        "\n" +
                        //        "                  LEFT JOIN master_ledger ML\n" +
                        //        "                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                  LEFT JOIN voucher_trans VT\n" +
                        //        "                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                  LEFT JOIN voucher_master_trans MT\n" +
                        //        "                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                     AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                     AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                  LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                    ON MIP.CUSTOMERID = MP.PROJECT_ID\n" +
                        //        "                  JOIN (SELECT CASHBANK.VOUCHER_DATE,\n" +
                        //        "                              CASHBANK.VOUCHER_ID,\n" +
                        //        "                              CASHBANK.BRANCH_ID,\n" +
                        //        "                              CASHBANK.LEDGER_ID,\n" +
                        //        "                              CASHBANK.CASH_FLAG,\n" +
                        //        "                              CASHBANK.BANK_FLAG,\n" +
                        //        "                              CASHBANK.VOUCHER_NO,\n" +
                        //        "                              CASHBANK.LEDGER_CODE,\n" +
                        //        "                              CASHBANK.ACCOUNT_NUMBER\n" +
                        //        "                         FROM (SELECT MT.VOUCHER_DATE,\n" +
                        //        "                                      VT.VOUCHER_ID,\n" +
                        //        "                                      VT.BRANCH_ID,\n" +
                        //        "                                      MT.VOUCHER_NO,\n" +
                        //        "                                      ML.LEDGER_CODE,\n" +
                        //        "                                      VT.LEDGER_ID,\n" +
                        //        "                                      IFNULL(CONCAT(' - ', MBA.ACCOUNT_NUMBER),\n" +
                        //        "                                             ' ') AS ACCOUNT_NUMBER,\n" +
                        //        "                                      CASE\n" +
                        //        "                                        WHEN LG.GROUP_ID = 13 THEN\n" +
                        //        "                                         1\n" +
                        //        "                                        ELSE\n" +
                        //        "                                         0\n" +
                        //        "                                      END AS CASH_FLAG,\n" +
                        //        "                                      CASE\n" +
                        //        "                                        WHEN LG.GROUP_ID = 12 THEN\n" +
                        //        "                                         1\n" +
                        //        "                                        ELSE\n" +
                        //        "                                         0\n" +
                        //        "                                      END AS BANK_FLAG\n" +
                        //        "\n" +
                        //        "                                 FROM master_ledger_GROUP LG\n" +
                        //        "\n" +
                        //        "                                 LEFT JOIN master_ledger ML\n" +
                        //        "\n" +
                        //        "                                   ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                                 LEFT JOIN voucher_trans VT\n" +
                        //        "                                   ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                                 LEFT JOIN voucher_master_trans MT\n" +
                        //        "                                   ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                                    AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                                   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                        //        "                                 LEFT JOIN MASTER_BANK_ACCOUNT MBA\n" +
                        //        "                                   ON MBA.LEDGER_ID = VT.LEDGER_ID\n" +
                        //        "                                 LEFT JOIN MASTER_BANK MB\n" +
                        //        "                                   ON MB.BANK_ID = MBA.BANK_ID\n" +
                        //        "                                WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "                                  AND mt.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                                  AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                                  and lg.group_id in (12, 13)\n" +
                        //        "                                  AND MT.STATUS = 1\n" +
                        //        "                                GROUP BY MT.VOUCHER_ID, VT.LEDGER_ID\n" +
                        //        "                                ORDER BY MT.VOUCHER_DATE,\n" +
                        //        "                                         VT.VOUCHER_ID,\n" +
                        //        "                                         VT.SEQUENCE_NO) AS CASHBANK\n" +
                        //        "                        GROUP BY CASHBANK.VOUCHER_ID\n" +
                        //        "                        ORDER BY CASHBANK.VOUCHER_DATE) AS T\n" +
                        //        "                    ON MT.VOUCHER_ID = T.VOUCHER_ID, (SELECT @row_number := 1) x,\n" +
                        //        "                 (SELECT @prev_val := null) y\n" +
                        //        "                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                   AND MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "                   AND VT.TRANS_MODE = 'DR'\n" +
                        //        "                   AND MT.STATUS = 1\n" +
                        //        "                   AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                        //        "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //        "\n" +
                        //        "                 GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, ML.LEDGER_ID) AS PY\n" +
                        //        "         INNER JOIN VOUCHER_CC_TRANS AS VC\n" +
                        //        "            ON PY.PAY_VOUCHER_ID = VC.VOUCHER_ID\n" +
                        //        "           AND PY.PAY_LED_id = VC.LEDGER_ID {AND VC.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "           AND VC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +

                        //        "       LEFT JOIN MASTER_COST_CENTRE MC\n" +
                        //        "       ON MC.COST_CENTRE_ID = VC.COST_CENTRE_ID\n" +
                        //        "       INNER JOIN COSTCATEGORY_COSTCENTRE\n CC " +
                        //        "       ON CC.COST_CENTRE_ID = VC.COST_CENTRE_ID\n " +
                        //        "       LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n " +
                        //        "       ON MCCC.COST_CENTRECATEGORY_ID=COST_CATEGORY_ID\n " +

                        //        "         GROUP BY MC.COST_CENTRE_NAME, PY.VOUCHER_DATE, PY.VOUCHER_ID, PY.LEDGER_ID, PY.SORT_ID) AS TT\n" +
                        //        " GROUP BY TT.COST_CENTRE_NAME, TT.VOUCHER_DATE, tt.SORT_ID\n" +
                        //        " ORDER BY TT.VOUCHER_DATE";

                        break;
                    }
                #endregion

                #region Ledger
                case ReportSQLCommand.CostCentre.CostCenterLedger:
                    {
                        query = "SELECT T.VOUCHER_ID,\n" +
                                "       T.SORT_ORDER,\n" +
                                "       T.LEDGER_ID,\n" +
                                "       T.PARTICULAR_TYPE,\n" +
                                "       DATE_FORMAT(T.VOUCHER_DATE, '%d-%m-%Y') AS DATE,\n" +
                                "       T.VOUCHER_NO,\n" +
                                "       T.COST_CENTRE_NAME,\n" +
                                "       T.COST_CENTRE_CATEGORY_NAME,\n" +
                                "       T.LEDGER_GROUP AS 'GROUP',\n" +
                                "       IF(T.LEDGER_CODE IS NULL OR T.LEDGER_CODE = '',\n" +
                                "          T.LEDGER_NAME,\n" +
                                "          CONCAT(T.LEDGER_CODE, ' - ', T.LEDGER_NAME)) AS LEDGER_NAME,\n" +
                                "       T.PARTICULRARS as PARTICULARS,\n" +
                                "       IFNULL(SUM(T.CREDIT), 0) AS CREDIT,\n" +
                                "       IFNULL(SUM(T.DEBIT), 0) AS DEBIT,\n" +
                                "       T.NARRATION\n" +
                                "  FROM (SELECT VT.VOUCHER_ID,\n" +
                                "               LG.SORT_ORDER,\n" +
                                "               VT.LEDGER_ID,\n" +
                                "               'LEDGER_CASHBANK_VOUCHER' as PARTICULAR_TYPE,\n" +
                                "               MT.VOUCHER_DATE,\n" +
                                "               MT.VOUCHER_NO,\n" +
                                "               MC.COST_CENTRE_NAME,\n" +
                                "               MCCC.COST_CENTRE_CATEGORY_NAME,\n" +
                                "               LG.LEDGER_GROUP,\n" +
                                "               ML.LEDGER_NAME,\n" +
                                "               TA.TRANS_MODE AS 'PARTICULRARS',\n" +
                                "               CASE\n" +
                                "                 WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                                "                  IFNULL(VCC.AMOUNT, 0)\n" +
                                "                 ELSE\n" +
                                "                  0.00\n" +
                                "               END AS CREDIT,\n" +
                                "               CASE\n" +
                                "                 WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                  IFNULL(VCC.AMOUNT, 0)\n" +
                                "                 ELSE\n" +
                                "                  0.00\n" +
                                "               END AS DEBIT,\n" +
                                "               MT.NARRATION,\n" +
                                "               ML.LEDGER_CODE\n" +
                                "\n" +
                                "          FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "          LEFT JOIN MASTER_LEDGER ML\n" +
                                "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "          LEFT JOIN VOUCHER_TRANS VT\n" +
                                "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "         INNER JOIN VOUCHER_CC_TRANS AS VCC\n" +
                                "            ON VT.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                                "           AND VT.BRANCH_ID = VCC.BRANCH_ID\n" +
                                "           AND VT.LEDGER_ID = VCC.LEDGER_ID\n" +
                                "          LEFT JOIN MASTER_COST_CENTRE MC\n" +
                                "            ON MC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                                "         INNER JOIN COSTCATEGORY_COSTCENTRE CC\n" +
                                "            ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                                "          LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n" +
                                "            ON MCCC.COST_CENTRECATEGORY_ID = COST_CATEGORY_ID\n" +
                                "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "\n" +
                                "          LEFT JOIN MASTER_PROJECT MP\n" +
                                "            ON MT.PROJECT_ID = MP.PROJECT_ID\n" +
                                "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "            ON MP.CUSTOMERID = MIP.CUSTOMERID\n" +
                                "          JOIN (SELECT T.VOUCHER_ID, T.LEDGER_ID, T.TRANS_MODE\n" +
                                "\n" +
                                "                 FROM (SELECT VT.VOUCHER_ID,\n" +
                                "                              VT.LEDGER_ID,\n" +
                                "                              CASE\n" +
                                "                                WHEN LG.GROUP_ID = 12 AND VT.TRANS_MODE = 'CR' THEN\n" +
                                "                                 'TO BANK'\n" +
                                "                                ELSE\n" +
                                "                                 CASE\n" +
                                "                                   WHEN LG.GROUP_ID = 12 AND VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                    'BY BANK'\n" +
                                "                                   ELSE\n" +
                                "                                    CASE\n" +
                                "                                      WHEN LG.GROUP_ID = 13 AND VT.TRANS_MODE = 'CR' THEN\n" +
                                "                                       'TO CASH'\n" +
                                "                                      ELSE\n" +
                                "                                       CASE\n" +
                                "                                         WHEN LG.GROUP_ID = 13 AND VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                          'BY CASH'\n" +
                                "                                       END\n" +
                                "                                    END\n" +
                                "                                 END\n" +
                                "                              END AS 'TRANS_MODE'\n" +
                                "\n" +
                                "                         FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "                         LEFT JOIN MASTER_LEDGER ML\n" +
                                "                           ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                         LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                           ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                         LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                           ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                          AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "\n" +
                                "                         LEFT JOIN MASTER_PROJECT MP\n" +
                                "                           ON MT.PROJECT_ID = MP.PROJECT_ID\n" +
                                "                         LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                           ON MP.CUSTOMERID = MIP.CUSTOMERID\n" +
                                "                        WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                                "                          AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "\n" +
                                "                          AND MT.STATUS = 1\n" +
                                "                          AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                      {    AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                          AND LG.GROUP_ID IN (12, 13)\n" +
                                "                        ORDER BY VT.SEQUENCE_NO ASC) AS T\n" +
                                "                GROUP BY T.VOUCHER_ID) AS TA\n" +
                                "            ON MT.VOUCHER_ID = TA.VOUCHER_ID\n" +
                                "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "           AND VCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                                "           AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "         {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "          { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "           AND MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                                "           AND MT.STATUS = 1\n" +
                                "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "\n" +
                                "           AND LG.GROUP_ID NOT IN (12, 13)\n" +
                                "         GROUP BY MC.COST_CENTRE_NAME,\n" +
                                "                  MT.VOUCHER_DATE,\n" +
                                "                  VT.VOUCHER_ID,\n" +
                                "                  ML.LEDGER_ID,\n" +
                                "                  TA.TRANS_MODE\n" +
                                "        UNION\n" +
                                "        SELECT VT.VOUCHER_ID,\n" +
                                "               LG.SORT_ORDER,\n" +
                                "               VT.LEDGER_ID,\n" +
                                "               'LEDGER_JOURNAL_VOUCHER' as PARTICULAR_TYPE,\n" +
                                "               MT.VOUCHER_DATE,\n" +
                                "               MT.VOUCHER_NO,\n" +
                                "               MC.COST_CENTRE_NAME,\n" +
                                "               MCCC.COST_CENTRE_CATEGORY_NAME,\n" +
                                "               LG.LEDGER_GROUP,\n" +
                                "               T.LEDGER_NAME,\n" +
                                "               ML.LEDGER_NAME AS 'PARTICULARS',\n" +
                                "               CASE\n" +
                                "                 WHEN T.TRANS_MODE = 'CR' THEN\n" +
                                "                  IFNULL(T.AMOUNT, 0)\n" +
                                "                 ELSE\n" +
                                "                  0.00\n" +
                                "               END AS CREDIT,\n" +
                                "               CASE\n" +
                                "                 WHEN T.TRANS_MODE = 'DR' THEN\n" +
                                "                  IFNULL(T.AMOUNT, 0)\n" +
                                "                 ELSE\n" +
                                "                  0.00\n" +
                                "               END AS DEBIT,\n" +
                                "               MT.NARRATION,\n" +
                                "               T.LEDGER_CODE\n" +
                                "\n" +
                                "          FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "          LEFT JOIN MASTER_LEDGER ML\n" +
                                "            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "          LEFT JOIN VOUCHER_TRANS VT\n" +
                                "            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "         INNER JOIN VOUCHER_CC_TRANS AS VCC\n" +
                                "            ON VT.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                                "           AND VT.BRANCH_ID = VCC.BRANCH_ID\n" +
                                "           AND VT.LEDGER_ID = VCC.LEDGER_ID\n" +
                                "          LEFT JOIN MASTER_COST_CENTRE MC\n" +
                                "            ON MC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                                "         INNER JOIN COSTCATEGORY_COSTCENTRE CC\n" +
                                "            ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                                "          LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n" +
                                "            ON MCCC.COST_CENTRECATEGORY_ID = COST_CATEGORY_ID\n" +
                                "          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "           AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "\n" +
                                "          LEFT JOIN MASTER_PROJECT MP\n" +
                                "            ON MT.PROJECT_ID = MP.PROJECT_ID\n" +
                                "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "            ON MP.CUSTOMERID = MIP.CUSTOMERID\n" +
                                "         INNER JOIN (SELECT VT.VOUCHER_ID,\n" +
                                "                            VT.TRANS_MODE,\n" +
                                "                            ML.LEDGER_NAME,\n" +
                                "                            ML.LEDGER_CODE,\n" +
                                "                            ML.LEDGER_ID,\n" +
                                "                            VCC.AMOUNT\n" +
                                "                       FROM MASTER_LEDGER_GROUP LG\n" +
                                "                       LEFT JOIN MASTER_LEDGER ML\n" +
                                "                         ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                       LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                         ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                      INNER JOIN VOUCHER_CC_TRANS AS VCC\n" +
                                "                         ON VT.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                                "                        AND VT.BRANCH_ID = VCC.BRANCH_ID\n" +
                                "                        AND VT.LEDGER_ID = VCC.LEDGER_ID\n" +
                                "                       LEFT JOIN MASTER_COST_CENTRE MC\n" +
                                "                         ON MC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                                "                      INNER JOIN COSTCATEGORY_COSTCENTRE CC\n" +
                                "                         ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                                "                       LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n" +
                                "                         ON MCCC.COST_CENTRECATEGORY_ID = COST_CATEGORY_ID\n" +
                                "                       LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                         ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                        AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "\n" +
                                "                       LEFT JOIN MASTER_PROJECT MP\n" +
                                "                         ON MT.PROJECT_ID = MP.PROJECT_ID\n" +
                                "                       LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                         ON MP.CUSTOMERID = MIP.CUSTOMERID\n" +
                                "                      WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                      {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                        AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "                        AND MT.VOUCHER_TYPE IN ('JN')\n" +
                                "                        AND MT.STATUS = 1\n" +
                                "                        AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "\n" +
                                "                      GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, ML.LEDGER_ID) AS T\n" +
                                "            ON T.VOUCHER_ID = VT.VOUCHER_ID\n" +
                                "         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "          { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "          { AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "           AND VCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                                "           AND MT.VOUCHER_TYPE IN ('JN')\n" +
                                "           AND MT.STATUS = 1\n" +
                                "           AND VT.TRANS_MODE <> T.TRANS_MODE\n" +
                                "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "\n" +
                                "         GROUP BY MT.VOUCHER_DATE, VT.VOUCHER_ID, T.LEDGER_ID, T.TRANS_MODE\n" +
                                "         ORDER BY VOUCHER_ID) AS T\n" +
                                " GROUP BY T.COST_CENTRE_NAME, T.VOUCHER_ID, T.LEDGER_NAME";
                        break;
                    }
                #endregion

                #region Monthly Abstract
                case ReportSQLCommand.CostCentre.MonthlyAbstract:
                    {
                        query = "SELECT MLG.GROUP_ID, ML.LEDGER_ID, VMT.VOUCHER_DATE, MLG.GROUP_CODE,MC.COST_CENTRE_NAME,MCCC.COST_CENTRE_CATEGORY_NAME," +
                               "CASE " +
                               "WHEN PG.GROUP_ID IN (1, 2, 3, 4) THEN " +
                               "MLG.LEDGER_GROUP " +
                               "ELSE " +
                               "PG.LEDGER_GROUP " +
                               "END AS PARENT_GROUP, " +
                               "       IF(?SHOWGROUPCODE = 1 OR ?SHOWLEDGERCODE = 1,\n" +
                               "       CASE\n" +
                               "         WHEN MLG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                               "          CONCAT(MLG.LEDGER_GROUP)\n" +
                               "         ELSE\n" +
                               "        CONCAT('   ',MLG.LEDGER_GROUP)\n" +
                               "       END,MLG.LEDGER_GROUP) AS LEDGER_GROUP,\n" +
                               "       IF(?SHOWGROUPCODE = 1 AND ?SHOWLEDGERCODE = 1,\n" +
                               "          CASE\n" +
                               "            WHEN MLG.PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                               "             CONCAT('   ', ML.LEDGER_NAME)\n" +
                               "            ELSE\n" +
                               "             CONCAT('      ', ML.LEDGER_NAME)\n" +
                               "          END,\n" +
                               "          ML.LEDGER_NAME) AS LEDGER_NAME,\n" +
                               "       MLG.SORT_ORDER,\n" +
                               "ML.LEDGER_CODE, " +
                               "IF(VMT.VOUCHER_DATE >= ?DATE_FROM, " +
                               "   IF ((?VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') " +
                               "   OR (?VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'), " +
                               "   -IFNULL(SUM(VCC.AMOUNT), 0), IFNULL(SUM(VCC.AMOUNT), 0)), 0) AS AMOUNT_PERIOD, " +
                               "IF ((?VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') " +
                               "OR (?VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'), " +
                               "-IFNULL(SUM(VCC.AMOUNT), 0), IFNULL(SUM(VCC.AMOUNT), 0)) AS AMOUNT_PROGRESSIVE, " +
                               "IFNULL(VT.TRANS_MODE, '') AS TRANS_MODE, " +
                               "IF(ISNULL(VT.AMOUNT) = 0, 1,0) AS HAS_TRANS " +
                               "FROM PROJECT_LEDGER AS PL " +
                                " INNER JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = PL.PROJECT_ID\n" +
                                "    { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }\n" +
                                "\n" +
                               "INNER JOIN MASTER_LEDGER AS ML " +
                               "ON PL.LEDGER_ID = ML.LEDGER_ID " +
                               "AND PL.PROJECT_ID IN (?PROJECT_ID) " +
                               "INNER JOIN MASTER_LEDGER_GROUP AS MLG " +
                               "ON ML.GROUP_ID = MLG.GROUP_ID " +
                               "AND MLG.GROUP_ID NOT IN (?GROUP_ID) " +
                               "INNER JOIN MASTER_LEDGER_GROUP PG " +
                               "  ON MLG.PARENT_GROUP_ID=PG.GROUP_ID " +
                               "LEFT JOIN VOUCHER_TRANS AS VT " +
                               "INNER JOIN VOUCHER_MASTER_TRANS AS VMT " +
                               "ON VT.VOUCHER_ID = VMT.VOUCHER_ID " +
                               " AND VT.BRANCH_ID = VMT.BRANCH_ID\n" +
                               "AND VMT.VOUCHER_DATE BETWEEN ?DATE_PROGRESS_FROM AND ?DATE_TO " +
                               "AND VMT.VOUCHER_TYPE IN (?VOUCHER_TYPE) AND VT.TRANS_MODE=?TRANS_MODE AND VMT.STATUS = 1 " +
                               "ON ML.LEDGER_ID = VT.LEDGER_ID " +
                               "AND VMT.PROJECT_ID = PL.PROJECT_ID " +
                               "INNER JOIN VOUCHER_CC_TRANS AS VCC " +
                               "ON VT.VOUCHER_ID = VCC.VOUCHER_ID " +
                               "AND VT.BRANCH_ID = VCC.BRANCH_ID\n" +
                               " LEFT JOIN MASTER_COST_CENTRE MC " +
                               " ON MC.COST_CENTRE_ID=VCC.COST_CENTRE_ID " +
                               "INNER JOIN COSTCATEGORY_COSTCENTRE CC" +
                               " ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID " +
                               "LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC " +
                               "ON MCCC.COST_CENTRECATEGORY_ID=COST_CATEGORY_ID " +
                               "AND VT.LEDGER_ID = VCC.LEDGER_ID " +
                               "WHERE VCC.COST_CENTRE_ID IN(?COST_CENTRE_ID) " +
                               "{ AND VCC.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "GROUP BY MC.COST_CENTRE_NAME,VT.LEDGER_ID ORDER BY MLG.SORT_ORDER";

                        //query = "SELECT MLG.GROUP_ID,\n" +
                        //        "       ML.LEDGER_ID,\n" +
                        //        "       VMT.VOUCHER_DATE,\n" +
                        //        "       MLG.GROUP_CODE,\n" +
                        //        "       MC.COST_CENTRE_NAME,\n" +
                        //        "       MCCC.COST_CENTRE_CATEGORY_NAME,\n" +
                        //        "       CASE\n" +
                        //        "         WHEN PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                        //        "          CONCAT(MLG.LEDGER_GROUP)\n" +
                        //        "         ELSE\n" +
                        //        "          CONCAT('  ', MLG.LEDGER_GROUP)\n" +
                        //        "       END AS LEDGER_GROUP,\n" +
                        //        "       --   CASE\n" +
                        //        "       --     WHEN ML.GROUP_ID = MLG.MAIN_GROUP_ID THEN\n" +
                        //        "       --      CONCAT('  ',ML.LEDGER_NAME)\n" +
                        //        "       --      ELSE\n" +
                        //        "       --       CONCAT('    ',ML.LEDGER_NAME)\n" +
                        //        "       --    END AS LEDGER_NAME,\n" +
                        //        "       IF(0 = 1 AND 0 = 1,\n" +
                        //        "          CASE\n" +
                        //        "            WHEN ML.GROUP_ID = MLG.MAIN_GROUP_ID THEN\n" +
                        //        "             CONCAT('  ', ML.LEDGER_NAME)\n" +
                        //        "            ELSE\n" +
                        //        "             CONCAT('      ', ML.LEDGER_NAME)\n" +
                        //        "          END,\n" +
                        //        "          ML.LEDGER_NAME) AS LEDGER_NAME,\n" +
                        //        "       MLG.SORT_ORDER,\n" +
                        //        "       ML.LEDGER_CODE,\n" +
                        //        "       IF(VMT.VOUCHER_DATE >= ?DATE_FROM,\n" +
                        //        "          IF((?VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') OR\n" +
                        //        "             (?VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'),\n" +
                        //        "             -IFNULL(SUM(VCC.AMOUNT), 0),\n" +
                        //        "             IFNULL(SUM(VCC.AMOUNT), 0)),\n" +
                        //        "          0) AS AMOUNT_PERIOD,\n" +
                        //        "       IF((?VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') OR\n" +
                        //        "          (?VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'),\n" +
                        //        "          -IFNULL(SUM(VCC.AMOUNT), 0),\n" +
                        //        "          IFNULL(SUM(VCC.AMOUNT), 0)) AS AMOUNT_PROGRESSIVE,\n" +
                        //        "       IFNULL(VT.TRANS_MODE, '') AS TRANS_MODE,\n" +
                        //        "       IF(ISNULL(VT.AMOUNT) = 0, 1, 0) AS HAS_TRANS\n" +
                        //        "  FROM PROJECT_LEDGER AS PL\n" +
                        //        "\n" +
                        //        " INNER JOIN MASTER_PROJECT MP\n" +
                        //        "    ON MP.PROJECT_ID = PL.PROJECT_ID\n" +
                        //        "    { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }\n" +
                        //        "\n" +
                        //        " INNER JOIN MASTER_LEDGER AS ML\n" +
                        //        "    ON PL.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "   AND PL.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        " INNER JOIN MASTER_LEDGER_GROUP AS MLG\n" +
                        //        "    ON ML.GROUP_ID = MLG.GROUP_ID\n" +
                        //        "   AND MLG.GROUP_ID NOT IN (12, 13, 14)\n" +
                        //        "  LEFT JOIN VOUCHER_TRANS AS VT\n" +
                        //        " INNER JOIN VOUCHER_MASTER_TRANS AS VMT\n" +
                        //        "    ON VT.VOUCHER_ID = VMT.VOUCHER_ID\n" +
                        //        "   AND VT.BRANCH_ID = VMT.BRANCH_ID\n" +
                        //        "   AND VT.LOCATION_ID = VMT.LOCATION_ID\n" +
                        //        "   AND VMT.VOUCHER_DATE BETWEEN ?DATE_PROGRESS_FROM AND ?DATE_TO\n" +
                        //        "   AND VMT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        //        "   AND VT.TRANS_MODE = ?TRANS_MODE\n" +
                        //        "   AND VMT.STATUS = 1 ON ML.LEDGER_ID = VT.LEDGER_ID\n" +
                        //        "   AND VMT.PROJECT_ID = PL.PROJECT_ID\n" +
                        //        " INNER JOIN VOUCHER_CC_TRANS AS VCC\n" +
                        //        "    ON VT.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                        //        "   AND VT.BRANCH_ID = VCC.BRANCH_ID\n" +
                        //        "  LEFT JOIN MASTER_COST_CENTRE MC\n" +
                        //        "    ON MC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                        //        " INNER JOIN COSTCATEGORY_COSTCENTRE CC\n" +
                        //        "    ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                        //        "  LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n" +
                        //        "    ON MCCC.COST_CENTRECATEGORY_ID = COST_CATEGORY_ID\n" +
                        //        "   AND VT.LEDGER_ID = VCC.LEDGER_ID\n" +
                        //        " WHERE VCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                        //        "  { AND VCC.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        //        "\n" +
                        //        " GROUP BY MC.COST_CENTRE_NAME, VT.LEDGER_ID\n" +
                        //        " ORDER BY MC.COST_CENTRE_NAME, MLG.SORT_ORDER";
                        break;
                    }
                #endregion

                #region MultiAbstract
                case ReportSQLCommand.CostCentre.MultiAbstract:
                    {
                        query = "SELECT MONTH_YEAR, YEAR(MONTH_YEAR) AS 'YEAR', MONTH(MONTH_YEAR) AS 'MONTH', " +
                        "CONCAT(LEFT(MONTHNAME(MONTH_YEAR),3), '-', YEAR(MONTH_YEAR)) AS MONTH_NAME, " +
                        "VMT.VOUCHER_DATE, MLG.GROUP_CODE, MLG.LEDGER_GROUP, ML.LEDGER_CODE, ML.LEDGER_NAME, " +
                        "NULLIF(IF((?VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') " +
                        "OR (?VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'), " +
                        "-IFNULL(VCC.AMOUNT, 0), IFNULL(VCC.AMOUNT, 0)), 0) AS AMOUNT, " +
                        "IFNULL(VT.TRANS_MODE, '') AS TRANS_MODE, " +
                        "IF(ISNULL(VT.AMOUNT) = 0, 1, " +
                        "IF((?VOUCHER_TYPE = 'RC' AND MLG.NATURE_ID IN (1,4)) " +
                        "OR (?VOUCHER_TYPE = 'PY' AND MLG.NATURE_ID IN (2,3)), 1, 0)) AS HAS_TRANS " +
                        "FROM " +
                        " ( " +
                        "  SELECT (?DATE_FROM - INTERVAL DAYOFMONTH(?DATE_FROM) -1 DAY) " +
                        "     + INTERVAL NO_OF_MONTH MONTH AS MONTH_YEAR, NO_OF_MONTH " +
                        "  FROM " +
                        "  ( " +
                        "    SELECT @rownum := @rownum + 1 AS NO_OF_MONTH FROM " +
                        "      (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4) AS T1, " +
                        "      (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4) AS T2, " +
                        "      (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4) AS T3, " +
                        "      (SELECT @rownum := -1) AS T0 " + /* for 64 months */
                        "  ) D1 " +
                        " ) D2 " +
                        "LEFT JOIN PROJECT_LEDGER AS PL " +
                        "  INNER JOIN MASTER_LEDGER AS ML " +
                        "        INNER JOIN MASTER_LEDGER_GROUP AS MLG " +
                        "        ON ML.GROUP_ID = MLG.GROUP_ID AND MLG.GROUP_ID NOT IN (?GROUP_ID) " +
                        "  ON PL.LEDGER_ID = ML.LEDGER_ID " +
                        "  AND PL.PROJECT_ID IN (?PROJECT_ID) " +
                        "LEFT JOIN VOUCHER_MASTER_TRANS AS VMT " +
                        "INNER JOIN VOUCHER_TRANS AS VT " +
                        "ON VMT.VOUCHER_ID = VT.VOUCHER_ID " +
                        "AND VMT.BRANCH_ID = VT.BRANCH_ID " +
                        "{ AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)} " +
                        "INNER JOIN VOUCHER_CC_TRANS AS VCC " +
                        "ON VT.VOUCHER_ID = VCC.VOUCHER_ID " +
                        "AND VT.LEDGER_ID = VCC.LEDGER_ID {AND VCC.BRANCH_ID IN (?BRANCH_OFFICE_ID)} " +
                        "AND VT.BRANCH_ID = VCC.BRANCH_ID " +
                        "AND VCC.COST_CENTRE_ID IN(?COST_CENTRE_ID)" +
                        "AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
                        "AND VMT.STATUS NOT IN (0) " +
                        "AND VMT.VOUCHER_TYPE = ?VOUCHER_TYPE " +
                        "ON PL.PROJECT_ID = VMT.PROJECT_ID " +
                        "AND PL.LEDGER_ID = VT.LEDGER_ID " +
                        "AND YEAR(D2.MONTH_YEAR) = YEAR(VMT.VOUCHER_DATE) " +
                        "AND MONTH(D2.MONTH_YEAR) = MONTH(VMT.VOUCHER_DATE) " +
                        "INNER JOIN MASTER_PROJECT MP" +
                        " ON MP.PROJECT_ID = PL.PROJECT_ID" +
                        " { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) } " +
                        "WHERE D2.MONTH_YEAR <= ?DATE_TO";

                        //query = "SELECT CAST(MONTH_YEAR AS CHAR) AS MONTH_YEAR, CAST(YEAR(MONTH_YEAR) AS CHAR) AS 'YEAR', CAST(MONTH(MONTH_YEAR) AS CHAR) AS 'MONTH', " +
                        // "CAST(CONCAT(LEFT(MONTHNAME(MONTH_YEAR),3), '-', YEAR(MONTH_YEAR)) AS CHAR) AS MONTH_NAME, " +
                        //    //                  "MC.COST_CENTRE_NAME, MCCC.COST_CENTRE_CATEGORY_NAME, " +
                        //"VMT.VOUCHER_DATE, MLG.GROUP_CODE, MLG.LEDGER_GROUP, ML.LEDGER_CODE, ML.LEDGER_NAME, PL.PROJECT_ID,MP.PROJECT, " +
                        //"NULLIF(IF((?VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') " +
                        //"OR (?VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'), " +
                        //"-IFNULL(VCC.AMOUNT, 0), IFNULL(VCC.AMOUNT, 0)), 0) AS AMOUNT, " +
                        //"IFNULL(VT.TRANS_MODE, '') AS TRANS_MODE, " +
                        //"IF(ISNULL(VT.AMOUNT) = 0, 1, " +
                        //"IF((?VOUCHER_TYPE = 'RC' AND MLG.NATURE_ID IN (1,4)) " +
                        //"OR (?VOUCHER_TYPE = 'PY' AND MLG.NATURE_ID IN (2,3)), 1, 0)) AS HAS_TRANS " +
                        //"FROM " +
                        //" ( " +
                        //"  SELECT (?DATE_FROM - INTERVAL DAYOFMONTH(?DATE_FROM) -1 DAY) " +
                        //"     + INTERVAL NO_OF_MONTH MONTH AS MONTH_YEAR, NO_OF_MONTH " +
                        //"  FROM " +
                        //"  ( " +
                        //"    SELECT @rownum := @rownum + 1 AS NO_OF_MONTH FROM " +
                        //"      (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4) AS T1, " +
                        //"      (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4) AS T2, " +
                        //"      (SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4) AS T3, " +
                        //"      (SELECT @rownum := -1) AS T0 " + /* for 64 months */
                        //"  ) D1 " +
                        //" ) D2 " +
                        //"LEFT JOIN PROJECT_LEDGER AS PL " +
                        //"  INNER JOIN MASTER_LEDGER AS ML " +
                        //"        INNER JOIN MASTER_LEDGER_GROUP AS MLG " +
                        //"        ON ML.GROUP_ID = MLG.GROUP_ID AND MLG.GROUP_ID NOT IN (?GROUP_ID) " +
                        //"  ON PL.LEDGER_ID = ML.LEDGER_ID " +
                        //"  AND PL.PROJECT_ID IN (?PROJECT_ID) " +
                        //"LEFT JOIN VOUCHER_MASTER_TRANS AS VMT " +
                        //"INNER JOIN VOUCHER_TRANS AS VT " +
                        //"ON VMT.VOUCHER_ID = VT.VOUCHER_ID " +
                        //"AND VMT.LOCATION_ID = VT.LOCATION_ID " +
                        //"AND VMT.BRANCH_ID = VT.BRANCH_ID " +
                        //"{ AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)} " +
                        //"INNER JOIN VOUCHER_CC_TRANS AS VCC " +
                        //"ON VT.VOUCHER_ID = VCC.VOUCHER_ID " +
                        //"AND VT.LOCATION_ID = VCC.LOCATION_ID " +
                        //"AND VT.BRANCH_ID = VCC.BRANCH_ID " +
                        //"AND VT.LEDGER_ID = VCC.LEDGER_ID {AND VCC.BRANCH_ID IN (?BRANCH_OFFICE_ID)}" +
                        //"AND VCC.COST_CENTRE_ID IN(?COST_CENTRE_ID)" +
                        //"AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
                        //"AND VMT.STATUS NOT IN (0) " +
                        //"AND VMT.VOUCHER_TYPE = ?VOUCHER_TYPE " +
                        //"ON PL.PROJECT_ID = VMT.PROJECT_ID " +
                        //"AND PL.LEDGER_ID = VT.LEDGER_ID " +

                        //"AND YEAR(D2.MONTH_YEAR) = YEAR(VMT.VOUCHER_DATE) " +
                        //"AND MONTH(D2.MONTH_YEAR) = MONTH(VMT.VOUCHER_DATE) " +
                        //"INNER JOIN MASTER_PROJECT MP" +
                        //" ON MP.PROJECT_ID = PL.PROJECT_ID" +
                        //" { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) } " +
                        //" WHERE D2.MONTH_YEAR <= ?DATE_TO";

                        break;
                    }
                #endregion

                #region CostcentrePayments


                case ReportSQLCommand.CostCentre.CostCentrePayments:
                    {
                        query = "SELECT ML.LEDGER_ID,\n" +
                                "       ML.GROUP_ID,\n" +
                                "       LG.GROUP_CODE,\n" +
                                "       MP.PROJECT_ID,\n" +
                                "       MC.COST_CENTRE_NAME,\n" +
                                "       MCCC.COST_CENTRE_CATEGORY_NAME,\n" +
                                "       LG.LEDGER_GROUP,\n" +
                                "       ML.LEDGER_CODE,\n" +
                                "       MP.PROJECT_ID,\n" +
                                "       ML.LEDGER_NAME,\n" +
                                "       IFNULL(SUM(VCC.AMOUNT), 0) AS PAYMENTAMT\n" +
                                "  FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "  LEFT JOIN MASTER_LEDGER ML\n" +
                                "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                " INNER JOIN VOUCHER_CC_TRANS AS VCC\n" +
                                "    ON VT.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                                "   AND VT.LOCATION_ID = VCC.LOCATION_ID\n" +
                                "   AND VT.BRANCH_ID = VCC.BRANCH_ID\n" +
                                "   AND VT.LEDGER_ID = VCC.LEDGER_ID\n" +
                                "  { AND VCC.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "   AND VCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                                "  LEFT JOIN MASTER_COST_CENTRE MC\n" +
                                "    ON MC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                                " INNER JOIN COSTCATEGORY_COSTCENTRE CC\n" +
                                "    ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                                "  LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n" +
                                "    ON MCCC.COST_CENTRECATEGORY_ID = COST_CATEGORY_ID\n" +
                                "  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                " INNER JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                " WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "   AND MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                                "   AND VT.TRANS_MODE = 'DR'\n" +
                                "   AND MT.STATUS = 1\n" +
                                "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                                " GROUP BY MC.COST_CENTRE_NAME, VT.LEDGER_ID";

                        break;
                    }
                #endregion

                #region CostcentreReceipts


                case ReportSQLCommand.CostCentre.CostCentreReceipts:
                    {
                        query = "SELECT ML.LEDGER_ID,\n" +
                                "       ML.GROUP_ID,\n" +
                                "       MP.PROJECT_ID,\n" +
                                "       LG.GROUP_CODE,\n" +
                                "       MC.COST_CENTRE_NAME,\n" +
                                "       MCCC.COST_CENTRE_CATEGORY_NAME,\n" +
                                "       CASE\n" +
                                "         WHEN PARENT_GROUP_ID IN (1, 2, 3, 4) THEN\n" +
                                "          CONCAT(LG.LEDGER_GROUP)\n" +
                                "         ELSE\n" +
                                "          CONCAT('  ', LG.LEDGER_GROUP)\n" +
                                "       END AS LEDGER_GROUP,\n" +
                                "       --      CASE\n" +
                                "       --       WHEN ML.GROUP_ID = LG.MAIN_GROUP_ID THEN\n" +
                                "       --       CONCAT('  ',ML.LEDGER_NAME)\n" +
                                "       --       ELSE\n" +
                                "       --        CONCAT('    ',ML.LEDGER_NAME)\n" +
                                "       --     END AS LEDGER_NAME,\n" +
                                "       IF(0 = 1 AND 0 = 1,\n" +
                                "          CASE\n" +
                                "            WHEN ML.GROUP_ID = LG.MAIN_GROUP_ID THEN\n" +
                                "             CONCAT('  ', ML.LEDGER_NAME)\n" +
                                "            ELSE\n" +
                                "             CONCAT('      ', ML.LEDGER_NAME)\n" +
                                "          END,\n" +
                                "          ML.LEDGER_NAME) AS LEDGER_NAME,\n" +
                                "       ML.LEDGER_CODE,\n" +
                                "       LG.SORT_ORDER,\n" +
                                "       IFNULL(SUM(VCC.AMOUNT), 0) AS RECEIPTAMT\n" +
                                "\n" +
                                "  FROM MASTER_LEDGER_GROUP LG\n" +
                                "\n" +
                                "  LEFT JOIN MASTER_LEDGER ML\n" +
                                "    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                " INNER JOIN VOUCHER_CC_TRANS AS VCC\n" +
                                "    ON VT.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                                "   AND VT.LOCATION_ID = VCC.LOCATION_ID\n" +
                                "   AND VT.BRANCH_ID = VCC.BRANCH_ID\n" +
                                "   AND VT.LEDGER_ID = VCC.LEDGER_ID\n" +
                                "  { AND VCC.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "   AND VCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                                "  LEFT JOIN MASTER_COST_CENTRE MC\n" +
                                "    ON MC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                                " INNER JOIN COSTCATEGORY_COSTCENTRE CC\n" +
                                "    ON CC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                                "  LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCCC\n" +
                                "    ON MCCC.COST_CENTRECATEGORY_ID = COST_CATEGORY_ID\n" +
                                "  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "   AND VT.BRANCH_ID = MT.BRANCH_ID\n" +
                                "  { AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                " INNER JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                " {  AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                " WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "   AND MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                                "   AND VT.TRANS_MODE = 'CR'\n" +
                                "   AND MT.STATUS = 1\n" +
                                "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "   AND LG.GROUP_ID NOT IN (12, 13)\n" +
                                " GROUP BY MC.COST_CENTRE_NAME, VT.LEDGER_ID\n" +
                                " ORDER BY SORT_ORDER";

                        break;
                    }
                #endregion

                #region CostCentreSummary
                case ReportSQLCommand.CostCentre.CostCentreSummary:
                    {
                        query = "SELECT FNL.COST_CENTRE_CATEGORY_NAME,\n" +
                                "       COST_CENTRE_ID,\n" +
                                "       LEDGER_ID,\n" +
                                "       BRANCH_ID,\n" +
                                "       FNL.COST_CENTRE_NAME AS COST_CENTRE_NAME,\n" +
                                "       SUM(FNL.OP_AMOUNT) AS OP_AMOUNT,\n" +
                                "       IFNULL(SUM(FNL.DEBIT), 0) AS DEBIT,\n" +
                                "       IFNULL(SUM(FNL.CREDIT), 0) AS CREDIT,\n" +
                                "       (SUM(FNL.OP_AMOUNT) + IFNULL(SUM(FNL.DEBIT), 0) -\n" +
                                "       IFNULL(SUM(FNL.CREDIT), 0)) AS CLOSING_BALANCE\n" +
                                "  FROM (SELECT T1.COST_CENTRE_NAME AS COST_CENTRE_NAME,\n" +
                                "               T1.COST_CENTRE_CATEGORY_NAME AS COST_CENTRE_CATEGORY_NAME,\n" +
                                "               T1.COST_CENTRE_ID,\n" +
                                "               T1.BRANCH_ID,\n" +
                                "               0 AS OP_AMOUNT,\n" +
                                "               SUM(T1.DEBIT) AS DEBIT,\n" +
                                "               T1.LEDGER_ID,\n" +
                                "               SUM(T1.CREDIT) AS CREDIT,\n" +
                                "               T1.TRANS_MODE AS TR_TRANS_MODE,\n" +
                                "               T1.VOUCHER_ID\n" +
                                "          FROM (SELECT VCC.COST_CENTRE_ID,\n" +
                                "                       VT.VOUCHER_ID,\n" +
                                "                       VT.BRANCH_ID,\n" +
                                "                       VCC.LEDGER_ID,\n" +
                                "                       VT.TRANS_MODE,\n" +
                                "                       CASE\n" +
                                "                         WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                          SUM(VCC.AMOUNT)\n" +
                                "                         ELSE\n" +
                                "                          0\n" +
                                "                       END AS DEBIT,\n" +
                                "                       CASE\n" +
                                "                         WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                                "                          SUM(VCC.AMOUNT)\n" +
                                "                       END AS CREDIT,\n" +
                                "                       SUM(VCC.AMOUNT) AS AMOUNT,\n" +
                                "                       MCC.COST_CENTRE_NAME,\n" +
                                "                       MCO.COST_CENTRE_CATEGORY_NAME\n" +
                                "                  FROM VOUCHER_MASTER_TRANS VMT\n" +
                                "\n" +
                                "                 INNER JOIN MASTER_PROJECT MP\n" +
                                "                    ON VMT.PROJECT_ID = MP.PROJECT_ID\n" +
                                "                 INNER JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "\n" +
                                "                 INNER JOIN VOUCHER_CC_TRANS VCC\n" +
                                "                    ON VMT.VOUCHER_ID = VCC.VOUCHER_ID\n" +
                                "                   AND VMT.BRANCH_ID = VCC.BRANCH_ID\n" +
                                "                 INNER JOIN VOUCHER_TRANS VT\n" +
                                "                    ON VT.VOUCHER_ID = VMT.VOUCHER_ID\n" +
                                "                   AND VT.BRANCH_ID = VMT.BRANCH_ID\n" +
                                "                   AND VT.LEDGER_ID = VCC.LEDGER_ID\n" +
                                "                  LEFT JOIN MASTER_COST_CENTRE MCC\n" +
                                "                    ON MCC.COST_CENTRE_ID = VCC.COST_CENTRE_ID\n" +
                                "                  LEFT JOIN COSTCATEGORY_COSTCENTRE CCC\n" +
                                "                    ON CCC.COST_CENTRE_ID = MCC.COST_CENTRE_ID\n" +
                                "                  LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCO\n" +
                                "                    ON MCO.COST_CENTRECATEGORY_ID = CCC.COST_CATEGORY_ID\n" +
                                "                 WHERE VMT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                 {  AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                 {  AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "                   AND VT.LEDGER_ID IN (?LEDGER_ID)\n" +
                                "                   AND VMT.STATUS = 1\n" +
                                "                   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                   AND VCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                                "                 GROUP BY VCC.COST_CENTRE_ID, VT.TRANS_MODE) AS T1\n" +
                                "         GROUP BY T1.VOUCHER_ID, T1.COST_CENTRE_ID\n" +
                                "        UNION ALL\n" +
                                "        SELECT MCC.COST_CENTRE_NAME,\n" +
                                "               PB.BRANCH_ID,\n" +
                                "               MCO.COST_CENTRE_CATEGORY_NAME,\n" +
                                "               PCC.COST_CENTRE_ID,\n" +
                                "               CASE\n" +
                                "                 WHEN PCC.TRANS_MODE = 'CR' THEN\n" +
                                "                  -SUM(PCC.AMOUNT)\n" +
                                "                 ELSE\n" +
                                "                  SUM(PCC.AMOUNT)\n" +
                                "               END AS OP_AMOUNT,\n" +
                                "               0 AS DEBIT,\n" +
                                "               0 AS LEDGER_ID,\n" +
                                "               0 AS CREDIT,\n" +
                                "               '' AS TR_TRANS_MODE,\n" +
                                "               0 AS VOUCHER_ID\n" +
                                "          FROM PROJECT_COSTCENTRE PCC\n" +
                                "          LEFT JOIN MASTER_COST_CENTRE MCC\n" +
                                "            ON MCC.COST_CENTRE_ID = PCC.COST_CENTRE_ID\n" +
                                "\n" +
                                "          LEFT JOIN PROJECT_BRANCH PB\n" +
                                "            ON PCC.PROJECT_ID = PB.PROJECT_ID\n" +
                                "          LEFT JOIN BRANCH_OFFICE BO\n" +
                                "            ON BO.BRANCH_OFFICE_ID = PB.BRANCH_ID\n" +
                                "          LEFT JOIN MASTER_PROJECT MP\n" +
                                "            ON PB.PROJECT_ID = MP.PROJECT_ID\n" +
                                "          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "            ON MP.CUSTOMERID = MIP.CUSTOMERID\n" +
                                "\n" +
                                "          LEFT JOIN COSTCATEGORY_COSTCENTRE CCC\n" +
                                "            ON CCC.COST_CENTRE_ID = MCC.COST_CENTRE_ID\n" +
                                "          LEFT JOIN MASTER_COST_CENTRE_CATEGORY MCO\n" +
                                "            ON MCO.COST_CENTRECATEGORY_ID = CCC.COST_CATEGORY_ID\n" +
                                "         WHERE PCC.COST_CENTRE_ID IN (?COST_CENTRE_ID)\n" +
                                "           AND PCC.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "           AND AMOUNT > 0\n" +
                                "         {  AND PB.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "         {  AND MIP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "         GROUP BY PCC.COST_CENTRE_ID) AS FNL\n" +
                                " GROUP BY FNL.COST_CENTRE_ID;";
                        break;
                    }
                #endregion
            }
            return query;
        }
    }

    public class ReportCashBankVoucher
    {
        string query = string.Empty;
        public string GetCashBankSQL(ReportSQLCommand.CashBankVoucher queryId)
        {
            switch (queryId)
            {
                #region CashBankVoucherReceipts
                case ReportSQLCommand.CashBankVoucher.CashBankVoucherReceipts:
                    {
                        query = "SELECT VMT.VOUCHER_ID,VMT.VOUCHER_NO,VMT.VOUCHER_DATE,VMT.NAME_ADDRESS, " +
                                    "VT.SEQUENCE_NO, " +
                                    "ML.LEDGER_NAME, " +
                                    "VT.AMOUNT, " +
                                    "VMT.NARRATION " +
                                    "FROM VOUCHER_MASTER_TRANS VMT " +
                                    "LEFT JOIN VOUCHER_TRANS VT ON VT.VOUCHER_ID=VMT.VOUCHER_ID " +
                                    "LEFT JOIN MASTER_LEDGER ML ON ML.LEDGER_ID=VT.LEDGER_ID " +
                                    "LEFT JOIN MASTER_PROJECT MP ON MP.PROJECT_ID=VMT.PROJECT_ID " +
                                    "WHERE MP.PROJECT_ID IN (?PROJECT_ID) AND VOUCHER_TYPE ='RC' AND TRANS_MODE ='CR' " +
                                    "AND VMT.VOUCHER_DATE BETWEEN ?DATE_STARTED AND ?DATE_CLOSED AND VMT.STATUS=1 GROUP BY  VT.VOUCHER_ID,VT.LEDGER_ID ORDER BY VMT.VOUCHER_DATE,VMT.VOUCHER_NO ASC";
                        break;
                    }
                #endregion

                #region CashBankVoucherPayments
                case ReportSQLCommand.CashBankVoucher.CashBankVoucher:
                    {
                        query = "SELECT VMT.VOUCHER_ID,VMT.VOUCHER_NO,VOUCHER_DATE,VMT.NAME_ADDRESS, " +
                                    "VT.SEQUENCE_NO, " +
                                    "ML.LEDGER_NAME, " +
                                    "VT.AMOUNT, " +
                                    "VMT.NARRATION " +
                                    "FROM VOUCHER_MASTER_TRANS VMT " +
                                    "LEFT JOIN VOUCHER_TRANS VT ON VT.VOUCHER_ID=VMT.VOUCHER_ID " +
                                    "LEFT JOIN MASTER_LEDGER ML ON ML.LEDGER_ID=VT.LEDGER_ID " +
                                    "LEFT JOIN MASTER_PROJECT MP ON MP.PROJECT_ID=VMT.PROJECT_ID " +
                                    "WHERE MP.PROJECT_ID  IN (?PROJECT_ID) AND VOUCHER_TYPE ='PY' AND TRANS_MODE='DR' " +
                                    "AND VMT.VOUCHER_DATE BETWEEN ?DATE_STARTED AND ?DATE_CLOSED  AND VMT.STATUS=1 GROUP BY VT.VOUCHER_ID,VT.LEDGER_ID ORDER BY VMT.VOUCHER_DATE,VMT.VOUCHER_NO ";
                        break;
                    }
                #endregion

                #region JournalVoucher
                case ReportSQLCommand.CashBankVoucher.JournalVoucher:
                    {
                        query = "SELECT VMT.VOUCHER_ID,VMT.VOUCHER_NO,VMT.VOUCHER_DATE,VMT.NAME_ADDRESS, " +
                            "VT.SEQUENCE_NO, " +
                            "ML.LEDGER_NAME, " +
                            "CASE WHEN VT.TRANS_MODE ='CR' THEN  VT.AMOUNT ELSE 0 END AS CREDIT, " +
                            "CASE WHEN VT.TRANS_MODE ='DR' THEN  VT.AMOUNT ELSE 0 END AS DEBIT, " +
                            "CASE WHEN VT.TRANS_MODE ='DR' THEN  VT.AMOUNT  WHEN VT.TRANS_MODE ='CR' THEN VT.AMOUNT  ELSE 0 END AS AMOUNT," +
                            "VMT.NARRATION " +
                            "FROM VOUCHER_MASTER_TRANS VMT " +
                            "LEFT JOIN VOUCHER_TRANS VT ON VT.VOUCHER_ID=VMT.VOUCHER_ID " +
                            "LEFT JOIN MASTER_LEDGER ML ON ML.LEDGER_ID=VT.LEDGER_ID " +
                            "LEFT JOIN MASTER_PROJECT MP ON MP.PROJECT_ID=VMT.PROJECT_ID " +
                            "WHERE MP.PROJECT_ID  IN (?PROJECT_ID) AND VOUCHER_TYPE ='JN' AND TRANS_MODE='DR' " +
                             "AND VMT.VOUCHER_DATE BETWEEN ?DATE_STARTED AND ?DATE_CLOSED  AND VMT.STATUS=1 GROUP BY VT.VOUCHER_ID,VT.LEDGER_ID ORDER BY VMT.VOUCHER_DATE,VMT.VOUCHER_NO ";

                        break;
                    }
                #endregion

                #region Cash Bank Transactions
                case ReportSQLCommand.CashBankVoucher.CashBankTransactions:
                    {
                        query = "SELECT ML.LEDGER_ID,\n" +
                        "       ML.LEDGER_NAME,\n" +
                        "       VMT.VOUCHER_ID,VMT.VOUCHER_SUB_TYPE,\n" +
                        "       VMT.VOUCHER_DATE,\n" +
                        "       VMT.VOUCHER_NO,\n" +
                        "       VMT.VOUCHER_TYPE,\n" +
                        "       TA.TRANS_MODE,\n" +
                        "       VMT.NARRATION,\n" +
                        "       CASE\n" +
                        "         WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                        "          IFNULL(VT.AMOUNT, 0)\n" +
                        "         ELSE\n" +
                        "          0.00\n" +
                        "       END AS 'CREDIT',\n" +
                        "       CASE\n" +
                        "         WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        "          IFNULL(VT.AMOUNT, 0)\n" +
                        "         ELSE\n" +
                        "          0.00\n" +
                        "       END AS 'DEBIT'\n" +
                        "  FROM MASTER_LEDGER_GROUP AS MLG\n" +
                        " INNER JOIN MASTER_LEDGER AS ML\n" +
                        "    ON MLG.GROUP_ID = ML.GROUP_ID\n" +
                        " INNER JOIN PROJECT_LEDGER AS PL\n" +
                        "    ON ML.LEDGER_ID = PL.LEDGER_ID\n" +
                        " INNER JOIN VOUCHER_MASTER_TRANS AS VMT\n" +
                        "    ON PL.PROJECT_ID = VMT.PROJECT_ID\n" +
                        " INNER JOIN VOUCHER_TRANS AS VT\n" +
                        "    ON PL.LEDGER_ID = VT.LEDGER_ID\n" +
                        "   AND VMT.VOUCHER_ID = VT.VOUCHER_ID\n" +
                        " INNER JOIN MASTER_PROJECT AS MP\n" +
                        "    ON VMT.PROJECT_ID = MP.PROJECT_ID\n" +
                        "  JOIN (SELECT T.VOUCHER_ID, T.LEDGER_ID,T.VOUCHER_SUB_TYPE, T.TRANS_MODE\n" +
                        "          FROM (SELECT VTS.VOUCHER_ID,\n" +
                        "                       VTS.LEDGER_ID,MT.VOUCHER_SUB_TYPE, \n" +
                        "                       CASE\n" +
                        "                         WHEN LG.GROUP_ID = 12 AND VTS.TRANS_MODE = 'CR' THEN\n" +
                        "                          'TO BANK'\n" +
                        "                         ELSE\n" +
                        "                          CASE\n" +
                        "                            WHEN LG.GROUP_ID = 12 AND VTS.TRANS_MODE = 'DR' THEN\n" +
                        "                             'BY BANK'\n" +
                        "                            ELSE\n" +
                        "                             CASE\n" +
                        "                               WHEN LG.GROUP_ID = 13 AND VTS.TRANS_MODE = 'CR' THEN\n" +
                        "                                'TO CASH'\n" +
                        "                               ELSE\n" +
                        "                                CASE\n" +
                        "                                  WHEN LG.GROUP_ID = 13 AND VTS.TRANS_MODE = 'DR' THEN\n" +
                        "                                   'BY CASH'\n" +
                        "                                END\n" +
                        "                             END\n" +
                        "                          END\n" +
                        "                       END AS 'TRANS_MODE'\n" +
                        "\n" +
                        "                  FROM MASTER_LEDGER_GROUP LG\n" +
                        "\n" +
                        "                  LEFT JOIN MASTER_LEDGER MLD\n" +
                        "                    ON MLD.GROUP_ID = LG.GROUP_ID\n" +
                        "                  LEFT JOIN VOUCHER_TRANS VTS\n" +
                        "                    ON VTS.LEDGER_ID = MLD.LEDGER_ID\n" +
                        "                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        "                    ON VTS.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        "                  LEFT JOIN VOUCHER_CC_TRANS VCT\n" +
                        "                    ON VTS.VOUCHER_ID = VCT.VOUCHER_ID\n" +
                        "                 WHERE MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                        "                   AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        "                   AND MT.STATUS = 1\n" +
                        "                   AND MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "                   AND LG.GROUP_ID IN (12, 13)\n" +
                        "                 ORDER BY VTS.SEQUENCE_NO ASC) AS T\n" +
                        "         GROUP BY T.VOUCHER_ID) AS TA\n" +
                        "    ON VMT.VOUCHER_ID = TA.VOUCHER_ID\n" +
                        " WHERE VMT.VOUCHER_TYPE NOT IN ('CN')\n" +
                        "   AND VMT.STATUS = 1\n" +
                        "   AND VMT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        "   AND MLG.GROUP_ID NOT IN (12, 13)\n" +
                        " GROUP BY VMT.VOUCHER_ID, ML.LEDGER_ID, VMT.VOUCHER_DATE\n" +
                        " ORDER BY VOUCHER_NO, VMT.VOUCHER_DATE, VMT.VOUCHER_TYPE ASC";


                        break;
                    }
                #endregion

                #region Journal Transactions
                case ReportSQLCommand.CashBankVoucher.JournalTransactions:
                    {
                        query = "SELECT ML.LEDGER_ID,\n" +
                        "       ML.LEDGER_NAME,\n" +
                        "       VMT.VOUCHER_ID,\n" +
                        "       VMT.VOUCHER_DATE,\n" +
                        "       VMT.VOUCHER_NO,\n" +
                        "       VMT.VOUCHER_TYPE,\n" +
                        "       VMT.NARRATION,\n" +
                        "       VT.TRANS_MODE,\n" +
                        "       CASE\n" +
                        "         WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                        "          IFNULL(SUM(VT.AMOUNT), 0)\n" +
                        "         ELSE\n" +
                        "          0.00\n" +
                        "       END AS 'CREDIT',\n" +
                        "       CASE\n" +
                        "         WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        "          IFNULL(SUM(VT.AMOUNT), 0)\n" +
                        "         ELSE\n" +
                        "          0.00\n" +
                        "       END AS 'DEBIT'\n" +
                        "  FROM MASTER_LEDGER_GROUP AS MLG\n" +
                        " INNER JOIN MASTER_LEDGER AS ML\n" +
                        "    ON MLG.GROUP_ID = ML.GROUP_ID\n" +
                        " INNER JOIN PROJECT_LEDGER AS PL\n" +
                        "    ON ML.LEDGER_ID = PL.LEDGER_ID\n" +
                        " INNER JOIN VOUCHER_MASTER_TRANS AS VMT\n" +
                        "    ON PL.PROJECT_ID = VMT.PROJECT_ID\n" +
                        " INNER JOIN VOUCHER_TRANS AS VT\n" +
                        "    ON PL.LEDGER_ID = VT.LEDGER_ID\n" +
                        "   AND VMT.VOUCHER_ID = VT.VOUCHER_ID\n" +
                        " INNER JOIN MASTER_PROJECT AS MP\n" +
                        "    ON VMT.PROJECT_ID = MP.PROJECT_ID\n" +
                        " WHERE VMT.VOUCHER_TYPE IN ('JN')\n" +
                        "   AND VMT.STATUS = 1\n" +
                        "   AND VMT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        "   AND MLG.GROUP_ID NOT IN (12, 13)\n" +
                        " GROUP BY VMT.VOUCHER_ID, ML.LEDGER_ID, VMT.VOUCHER_DATE\n" +
                        " ORDER BY VOUCHER_NO, VMT.VOUCHER_DATE, VMT.VOUCHER_TYPE ASC";

                        break;
                    }
                #endregion

                #region cashBankJournalByVoucher
                case ReportSQLCommand.CashBankVoucher.FetchcashBankByVoucher:
                    {
                        //query = "SELECT VMT.VOUCHER_ID,VMT.VOUCHER_NO,VMT.VOUCHER_DATE,VMT.NAME_ADDRESS,MP.PROJECT_CODE, " +
                        //            "VT.SEQUENCE_NO, " +
                        //            "ML.LEDGER_NAME, " +
                        //            "VT.AMOUNT, " +
                        //            "VMT.NARRATION " +
                        //            "FROM VOUCHER_MASTER_TRANS VMT " +
                        //            "LEFT JOIN VOUCHER_TRANS VT ON VT.VOUCHER_ID=VMT.VOUCHER_ID " +
                        //            "LEFT JOIN MASTER_LEDGER ML ON ML.LEDGER_ID=VT.LEDGER_ID " +
                        //            "LEFT JOIN MASTER_PROJECT MP ON MP.PROJECT_ID=VMT.PROJECT_ID " +
                        //             "WHERE VMT.VOUCHER_ID IN(?VOUCHER_ID) ORDER BY VMT.VOUCHER_DATE ASC";


                        query = "SELECT VMT.VOUCHER_ID,\n" +
                        "       VMT.VOUCHER_NO,\n" +
                        "--  CASE WHEN T.TRANS_MODE='BANK' THEN T.CHEQUE \n" +
                        "--  ELSE T.TRANS_MODE END AS TRANS_MODE,T.DRAWN_ON,\n" +
                        "CASE WHEN T.TRANS_MODE='CASH' THEN T.TRANS_MODE \n" +
                        " ELSE T.CHEQUE END AS TRANS_MODE,T.DRAWN_ON,\n" +
                        "       T.CHEQUE,\n" +
                        "       VMT.VOUCHER_DATE,\n" +
                        "       VMT.NAME_ADDRESS,\n" +
                        "       MP.PROJECT_CODE,\n" +
                        "       VT.SEQUENCE_NO,\n" +
                        "       ML.LEDGER_NAME,\n" +
                            //"   IF ((VMT.VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') " +
                            //"   OR (VMT.VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'), " +
                            // "   -IFNULL(VT.AMOUNT, 0), IFNULL(VT.AMOUNT, 0)), 0) AS AMOUNT, " +
                        "       IF ((vmt.VOUCHER_TYPE = 'RC' AND VT.TRANS_MODE = 'DR') " +
                        "            OR (vmt.VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE = 'CR'), " +
                        "           -IFNULL(VT.AMOUNT, 0), IFNULL(VT.AMOUNT, 0))  AS  AMOUNT, " +
                            // "       VT.AMOUNT,\n" +
                        "       VMT.NARRATION\n" +
                        "  FROM VOUCHER_MASTER_TRANS VMT\n" +
                        "  LEFT JOIN VOUCHER_TRANS VT\n" +
                        "    ON VT.VOUCHER_ID = VMT.VOUCHER_ID\n" +
                        "  LEFT JOIN MASTER_LEDGER ML\n" +
                        "    ON ML.LEDGER_ID = VT.LEDGER_ID\n" +
                        "  LEFT JOIN MASTER_PROJECT MP\n" +
                        "    ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                        " INNER JOIN (SELECT VMT.VOUCHER_ID,VT.MATERIALIZED_ON AS DRAWN_ON,VT.CHEQUE_NO AS CHEQUE, -- CONCAT(CONCAT(MBA.ACCOUNT_NUMBER,' - '),VT.CHEQUE_NO) AS CHEQUE,\n" +
                        "                    CASE\n" +
                        "                      WHEN ML.GROUP_ID = 12 AND VT.TRANS_MODE = 'CR' THEN\n" +
                        "                       'BANK'\n" +
                        "                      ELSE\n" +
                        "                       CASE\n" +
                        "                         WHEN ML.GROUP_ID = 12 AND VT.TRANS_MODE = 'DR' THEN\n" +
                        "                          'BANK'\n" +
                        "                         ELSE\n" +
                        "                          CASE\n" +
                        "                            WHEN ML.GROUP_ID = 13 AND VT.TRANS_MODE = 'CR' THEN\n" +
                        "                             'CASH'\n" +
                        "                            ELSE\n" +
                        "                             CASE\n" +
                        "                               WHEN ML.GROUP_ID = 13 AND VT.TRANS_MODE = 'DR' THEN\n" +
                        "                                'CASH'\n" +
                        "                             END\n" +
                        "                          END\n" +
                        "                       END\n" +
                        "                    END AS 'TRANS_MODE'\n" +
                        "               FROM VOUCHER_MASTER_TRANS VMT\n" +
                        "               LEFT JOIN VOUCHER_TRANS VT\n" +
                        "                 ON VT.VOUCHER_ID = VMT.VOUCHER_ID\n" +
                        "               LEFT JOIN MASTER_LEDGER ML\n" +
                        "                 ON ML.LEDGER_ID = VT.LEDGER_ID\n" +
                        "             -- LEFT JOIN MASTER_PROJECT MP\n" +
                        "             -- ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                        "                LEFT JOIN MASTER_BANK_ACCOUNT  MBA \n" +
                        "                ON ML.LEDGER_ID = MBA.LEDGER_ID  \n" +
                        "              WHERE VMT.VOUCHER_ID IN (?VOUCHER_ID)\n" +
                        "                AND GROUP_ID IN (12, 13)\n" +
                        "              ORDER BY TRANS_MODE DESC ) AS T\n" +
                        "    ON VT.VOUCHER_ID = T.VOUCHER_ID\n" +
                        " WHERE VMT.VOUCHER_ID IN (?VOUCHER_ID)\n" +
                        "   AND GROUP_ID NOT IN (12, 13)\n" +
                        " GROUP BY VMT.VOUCHER_DATE,VMT.VOUCHER_ID,VT.SEQUENCE_NO \n" +
                        " ORDER BY VMT.VOUCHER_DATE ASC;";


                        break;
                    }
                #endregion

                #region JournalByVoucher
                case ReportSQLCommand.CashBankVoucher.FetchJournalByVoucher:
                    {
                        query = "SELECT VMT.VOUCHER_ID,VMT.VOUCHER_NO,DATE(VMT.VOUCHER_DATE) AS VOUCHER_DATE,VMT.NAME_ADDRESS,MP.PROJECT_CODE, " +
                             "VT.SEQUENCE_NO, " +
                             "ML.LEDGER_NAME, " +
                             "CASE WHEN VT.TRANS_MODE ='CR' THEN  VT.AMOUNT ELSE 0 END AS CREDIT, " +
                             "CASE WHEN VT.TRANS_MODE ='DR' THEN  VT.AMOUNT ELSE 0 END AS DEBIT, " +
                             "VMT.NARRATION " +
                             "FROM VOUCHER_MASTER_TRANS VMT " +
                             "LEFT JOIN VOUCHER_TRANS VT ON VT.VOUCHER_ID=VMT.VOUCHER_ID " +
                             "LEFT JOIN MASTER_LEDGER ML ON ML.LEDGER_ID=VT.LEDGER_ID " +
                             "LEFT JOIN MASTER_PROJECT MP ON MP.PROJECT_ID=VMT.PROJECT_ID " +
                              "WHERE VMT.VOUCHER_ID IN(?VOUCHER_ID) ORDER BY VMT.VOUCHER_DATE ASC";
                        break;
                    }
                #endregion
            }
            return query;
        }
    }

    public class ReportForeginContribution
    {
        public string GetReportSQL(ReportSQLCommand.ForeginContribution queryId)
        {
            string query = string.Empty;
            switch (queryId)
            {
                #region FC Country
                case ReportSQLCommand.ForeginContribution.FCCountry:
                    {
                        query = "SELECT MC.COUNTRY, T.AMOUNT,@a:=@a+1 SORT_ID,\n" +
                    "           MC.COUNTRY_ID\n" +
                    "           FROM (SELECT VOUCHER_ID,\n" +
                    "               VOUCHER_DATE,\n" +
                    "               CURRENCY_COUNTRY_ID,\n" +
                    "               SUM(ACTUAL_AMOUNT) AS AMOUNT\n" +
                    "           FROM VOUCHER_MASTER_TRANS VMT\n" +
                    "           INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID=VMT.PROJECT_ID\n" +
                    "           WHERE DONOR_ID > 0\n" +
                    "           AND STATUS = 1\n" +
                    "           AND VOUCHER_TYPE = 'RC'\n" +
                    "           { AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}{ AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                    "           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                    "           GROUP BY CURRENCY_COUNTRY_ID) AS T\n" +
                    "           JOIN MASTER_COUNTRY AS MC\n" +
                    "           ON T.CURRENCY_COUNTRY_ID = MC.COUNTRY_ID , (SELECT @a:= 0) AS a";
                        break;
                    }
                #endregion

                #region FC Purpose
                case ReportSQLCommand.ForeginContribution.FCPurpose:
                    {
                        //query = "SELECT VMT.VOUCHER_DATE AS RECEIPT_DATE,\n" +
                        //   " MCH.CONTRIBUTION_ID,MC.COUNTRY_ID,MD.DONAUD_ID,\n" +
                        //   "       MCH.FC_PURPOSE AS PURPOSE ,\n" +
                        //   "       MC.COUNTRY,\n" +
                        //   "       MD.NAME AS DONOR,\n" +
                        //   "       CASE WHEN MD.TYPE=1 THEN 'Institutional' ELSE \n" +
                        //   "       CASE WHEN MD.TYPE=2 THEN 'Individual' END END AS TYPE,\n" +
                        //   "       SUM(ACTUAL_AMOUNT) AS AMOUNT\n" +
                        //   "\n" +
                        //   "  FROM VOUCHER_MASTER_TRANS VMT\n" +
                        //   "\n" +
                        //   " INNER JOIN MASTER_CONTRIBUTION_HEAD MCH\n" +
                        //   "    ON MCH.CONTRIBUTION_ID = VMT.PURPOSE_ID\n" +
                        //   " INNER JOIN MASTER_DONAUD MD\n" +
                        //   "    ON MD.DONAUD_ID = VMT.DONOR_ID\n" +
                        //   "  LEFT JOIN MASTER_COUNTRY MC\n" +
                        //   "    ON MC.COUNTRY_ID = MD.COUNTRY_ID\n" +
                        //   "  LEFT JOIN MASTER_PROJECT MP\n" +
                        //   "    ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                        //   "  LEFT JOIN MASTER_DIVISION MDI\n" +
                        //   "    ON MDI.DIVISION_ID = MP.DIVISION_ID\n" +
                        //   "\n" +
                        //   " WHERE VMT.STATUS = 1\n" +
                        //    "   AND MDI.DIVISION_ID = 2\n" +
                        //   " { AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //   "{AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                        //   " AND VMT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //   "   AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //   " GROUP BY MCH.FC_PURPOSE,DONOR,VMT.VOUCHER_DATE";

                        query = "SELECT DATE(VMT.VOUCHER_DATE) AS RECEIPT_DATE,\n" +
                                "MCH.FC_PURPOSE AS PURPOSE ,\n" +
                                "MC.COUNTRY,\n" +
                                "MD.NAME AS DONOR,\n" +
                                "CASE WHEN MD.TYPE=1 THEN 'Institutional' ELSE\n" +
                                "CASE WHEN MD.TYPE=2 THEN 'Individual' END END AS TYPE,\n" +
                                "SUM(ACTUAL_AMOUNT) AS AMOUNT\n" +
                                "\n" +
                                "FROM VOUCHER_MASTER_TRANS VMT\n" +
                                "\n" +
                                "INNER JOIN MASTER_CONTRIBUTION_HEAD MCH\n" +
                                "ON MCH.CONTRIBUTION_ID = VMT.PURPOSE_ID\n" +
                                "INNER JOIN MASTER_DONAUD MD\n" +
                                "ON MD.DONAUD_ID = VMT.DONOR_ID\n" +
                                "LEFT JOIN MASTER_COUNTRY MC\n" +
                                "ON MC.COUNTRY_ID = MD.COUNTRY_ID\n" +
                                "LEFT JOIN MASTER_PROJECT MP\n" +
                                "ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                                "LEFT JOIN MASTER_DIVISION MDI\n" +
                                "ON MDI.DIVISION_ID = MP.DIVISION_ID\n" +
                                "\n" +
                                "WHERE VMT.STATUS = 1\n" +
                                "AND MDI.DIVISION_ID = 2 { AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                "{AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "GROUP BY MCH.FC_PURPOSE,DONOR,VMT.VOUCHER_DATE;";
                        break;
                    }
                #endregion

                #region FcDonorInstitutional
                case ReportSQLCommand.ForeginContribution.FCDonorInstitutional:
                    {
                        query = "SELECT DATE(VMT.VOUCHER_DATE) AS DATE_AND_MONTH_OF_RECEIPTS,\n" +
                         "       MCH.FC_PURPOSE  AS 'PURPOSE',\n" +
                         "       MCH.CONTRIBUTION_ID,MC.COUNTRY_ID,MD.DONAUD_ID,\n" +
                         "       MC.COUNTRY,\n" +
                         "       MD.NAME AS 'DONOR',\n" +
                         "CONCAT(IFNULL(MD.ADDRESS,''),' , ',MC.COUNTRY) AS DONOR_ADDRESS,\n" +
                         "       SUM(ACTUAL_AMOUNT) AS AMOUNT\n" +
                         "\n" +
                         "  FROM VOUCHER_MASTER_TRANS VMT\n" +
                         "\n" +
                         " INNER JOIN MASTER_CONTRIBUTION_HEAD MCH\n" +
                         "    ON MCH.CONTRIBUTION_ID = VMT.PURPOSE_ID\n" +
                         " INNER JOIN MASTER_DONAUD MD\n" +
                         "    ON MD.DONAUD_ID = VMT.DONOR_ID\n" +
                         "  LEFT JOIN MASTER_COUNTRY MC\n" +
                         "    ON MC.COUNTRY_ID = MD.COUNTRY_ID\n" +
                         "  LEFT JOIN MASTER_PROJECT MP\n" +
                         "    ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                         "  LEFT JOIN MASTER_DIVISION MDI\n" +
                         "    ON MDI.DIVISION_ID = MP.DIVISION_ID\n" +
                         "\n" +
                         " WHERE VMT.STATUS = 1\n" +
                         "{ AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}{ AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                         "   AND MDI.DIVISION_ID = 2 AND MD.TYPE=1 AND VMT.VOUCHER_TYPE='RC' \n" +
                         "   AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND\n" +
                         "       ?DATE_TO\n" +
                         " GROUP BY VMT.BRANCH_ID, MCH.FC_PURPOSE,MD.NAME;";


                        break;
                    }
                #endregion

                #region FcDonorIndividual
                case ReportSQLCommand.ForeginContribution.FCDonorIndividual:
                    {
                        query = "SELECT DATE(VMT.VOUCHER_DATE) AS DATE_AND_MONTH_OF_RECEIPTS,\n" +
                        "       MCH.FC_PURPOSE  AS 'PURPOSE',\n" +
                        "       MC.COUNTRY,\n" +
                        "       MCH.CONTRIBUTION_ID,MC.COUNTRY_ID,MD.DONAUD_ID,\n" +
                        "       MD.NAME AS 'DONOR',\n" +
                        "       CONCAT(IFNULL(MD.ADDRESS,''),' , ',MC.COUNTRY) AS DONOR_ADDRESS,\n" +
                        "       SUM(ACTUAL_AMOUNT) AS AMOUNT\n" +
                        "\n" +
                        "  FROM VOUCHER_MASTER_TRANS VMT\n" +
                        "\n" +
                        " INNER JOIN MASTER_CONTRIBUTION_HEAD MCH\n" +
                        "    ON MCH.CONTRIBUTION_ID = VMT.PURPOSE_ID\n" +
                        " INNER JOIN MASTER_DONAUD MD\n" +
                        "    ON MD.DONAUD_ID = VMT.DONOR_ID\n" +
                        "  LEFT JOIN MASTER_COUNTRY MC\n" +
                        "    ON MC.COUNTRY_ID = MD.COUNTRY_ID\n" +
                        "  LEFT JOIN MASTER_PROJECT MP\n" +
                        "    ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                        "  LEFT JOIN MASTER_DIVISION MDI\n" +
                        "    ON MDI.DIVISION_ID = MP.DIVISION_ID\n" +
                        "\n" +
                        " WHERE VMT.STATUS = 1\n" +
                        "{ AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}{ AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        "   AND MDI.DIVISION_ID = 2 AND MD.TYPE=2 AND VMT.VOUCHER_TYPE='RC' \n" +
                        "   AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND\n" +
                        "       ?DATE_TO\n" +
                        " GROUP BY VMT.BRANCH_ID,MCH.FC_PURPOSE, MD.NAME;";

                        break;
                    }
                #endregion

                #region ExecutiveMembers
                case ReportSQLCommand.ForeginContribution.ExecutiveMembers:
                    {
                        query = "SELECT EXECUTIVE,\n" +
                                "       NAME,\n" +
                                "       NATIONALITY,\n" +
                                "       OCCUPATION,\n" +
                                "       ASSOCIATION,\n" +
                                "       OFFICE_BEARER,\n" +
                                "       CONCAT(PLACE, ',', MC.COUNTRY, ',', PIN_CODE, ',', PHONE, ',', EMAIL) AS 'ADDRESS'\n" +
                                "  FROM MASTER_EXECUTIVE_COMMITTEE AS MEC\n" +
                                " INNER JOIN MASTER_COUNTRY MC\n" +
                                "    ON MEC.COUNTRY_ID = MC.COUNTRY_ID\n" +
                                " INNER JOIN VOUCHER_MASTER_TRANS VMT\n" +
                                "    ON VMT.CURRENCY_COUNTRY_ID = MC.COUNTRY_ID\n" +
                                " INNER JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                                " {  AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                                " {  AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)  }";



                        break;
                    }
                #endregion

                #region FC6
                case ReportSQLCommand.ForeginContribution.FC6Purpose:
                    {
                        query = "SELECT MCH.FC_PURPOSE AS PURPOSE,MCH.CONTRIBUTION_ID,T.DONOR_ID AS DONAUD_ID,T.VOUCHER_ID,\n" +
                        "       SUM(IFNULL(T.PRE_CASH, 0)) AS PRE_CASH,\n" +
                        "       0.0 AS PRE_KIND,\n" +
                        "       SUM(IFNULL(T.FIRST_AMOUNT, 0)) AS FIRST_CASH,\n" +
                        "       0.0 AS FIRST_KIND,\n" +
                        "       SUM(IFNULL(T.SUBSEQUENT_AMOUNT, 0)) AS SECOND_CASH,\n" +
                        "       0.0 AS SECOND_KIND,\n" +
                        "       SUM(IFNULL(T.FIRST_AMOUNT + T.SUBSEQUENT_AMOUNT, 0.0)) AS UTILISED_TOTAL,\n" +
                        "       SUM(IFNULL(T.UTILISED_CASH, 0)) AS UTILISED_CASH,\n" +
                        "       0.0 AS UTILISED_KIND,\n" +
                        "       SUM(IFNULL(T.FIRST_AMOUNT + T.SUBSEQUENT_AMOUNT + T.PRE_CASH, 0.0)) -\n" +
                        "       SUM(IFNULL(T.UTILISED_CASH, 0)) AS BALANCE_CASH,\n" +
                        "       0.0 AS BALANCE_KIND,\n" +
                        "       T.ADDRESS,\n" +
                        "       IF(SUM(IFNULL(T.PRE_CASH, 0)) > 0 or\n" +
                        "          SUM(IFNULL(T.FIRST_AMOUNT, 0)) > 0 or\n" +
                        "          SUM(IFNULL(T.SUBSEQUENT_AMOUNT, 0)) > 0,\n" +
                        "          1,\n" +
                        "          0) AS HAS_TRANS\n" +
                        "  FROM MASTER_CONTRIBUTION_HEAD MCH\n" +
                        "  LEFT JOIN (SELECT MCH.CONTRIBUTION_ID,VMT.DONOR_ID, VMT.VOUCHER_ID,\n" +
                        "                    VMT.CONTRIBUTION_TYPE,\n" +
                        "                    MCH.FC_PURPOSE AS PURPOSE,\n" +
                        "                    MP.NOTES AS ADDRESS,\n" +
                        "                    0.0 AS FIRST_AMOUNT,\n" +
                        "                    CASE\n" +
                        "                      WHEN VMT.CONTRIBUTION_TYPE = 'S' THEN\n" +
                        "                       VMT.ACTUAL_AMOUNT\n" +
                        "                      ELSE\n" +
                        "                       0.0\n" +
                        "                    END AS SUBSEQUENT_AMOUNT,\n" +
                        "                    0.0 AS PRE_CASH,\n" +
                        "                    0.00 AS UTILISED_CASH\n" +
                        "               FROM MASTER_CONTRIBUTION_HEAD MCH\n" +
                        "\n" +
                        "               LEFT JOIN VOUCHER_MASTER_TRANS VMT\n" +
                        "                 ON VMT.PURPOSE_ID = MCH.CONTRIBUTION_ID\n" +
                        "               LEFT JOIN MASTER_PROJECT MP\n" +
                        "                 ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                        "               LEFT JOIN MASTER_DIVISION MD\n" +
                        "                 ON MP.DIVISION_ID = MD.DIVISION_ID\n" +
                        "\n" +
                        "              WHERE MD.DIVISION_ID = 2 AND VMT.STATUS=1\n" +
                        "                AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        "                AND MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "           { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)} {AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        "             UNION ALL\n" +
                        "\n" +
                        "             SELECT MCH.CONTRIBUTION_ID,VMT.DONOR_ID,VMT.VOUCHER_ID,\n" +
                        "                    VMT.CONTRIBUTION_TYPE,\n" +
                        "                    MCH.FC_PURPOSE AS PURPOSE,\n" +
                        "                    MP.NOTES AS ADDRESS,\n" +
                        "                    CASE\n" +
                        "                      WHEN VMT.CONTRIBUTION_TYPE = 'F' THEN\n" +
                        "                       VMT.ACTUAL_AMOUNT\n" +
                        "                      ELSE\n" +
                        "                       0.0\n" +
                        "                    END AS FIRST_AMOUNT,\n" +
                        "                    0.0 AS SUBSEQUENT_AMOUNT,\n" +
                        "                    0.0 AS PRE_CASH,\n" +
                        "                    0.00 AS UTILISED_CASH\n" +
                        "\n" +
                        "               FROM MASTER_CONTRIBUTION_HEAD MCH\n" +
                        "\n" +
                        "               LEFT JOIN VOUCHER_MASTER_TRANS VMT\n" +
                        "                 ON VMT.PURPOSE_ID = MCH.CONTRIBUTION_ID\n" +
                        "               LEFT JOIN MASTER_PROJECT MP\n" +
                        "                 ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                        "               LEFT JOIN MASTER_DIVISION MD\n" +
                        "                 ON MP.DIVISION_ID = MD.DIVISION_ID\n" +
                        "              WHERE MD.DIVISION_ID = 2 AND VMT.STATUS=1 \n" +
                        "                AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        "                AND MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "           { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)} {AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        "             UNION ALL\n" +
                        "\n" +
                        "             SELECT MCH.CONTRIBUTION_ID,VMT.DONOR_ID,VMT.VOUCHER_ID,\n" +
                        "                    VMT.CONTRIBUTION_TYPE,\n" +
                        "                    MCH.FC_PURPOSE        AS PURPOSE,\n" +
                        "                    MP.NOTES              AS ADDRESS,\n" +
                        "                    0.0                   AS FIRST_AMOUNT,\n" +
                        "                    0.0                   AS SUBSEQUENT_AMOUNT,\n" +
                        "                    VMT.ACTUAL_AMOUNT     AS PRE_CASH,\n" +
                        "                    0.00                  AS UTILISED_CASH\n" +
                        "               FROM VOUCHER_MASTER_TRANS VMT\n" +
                        "               LEFT JOIN MASTER_CONTRIBUTION_HEAD MCH\n" +
                        "                 ON MCH.CONTRIBUTION_ID = VMT.PURPOSE_ID\n" +
                        "               LEFT JOIN MASTER_PROJECT MP\n" +
                        "                 ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                        "               LEFT JOIN MASTER_DIVISION MD\n" +
                        "                 ON MP.DIVISION_ID = MD.DIVISION_ID\n" +
                        "              WHERE MD.DIVISION_ID = 2\n" +
                        "                AND VMT.VOUCHER_DATE < ?DATE_FROM\n" +
                        "                AND MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                        "           { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)} {AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        "\n" +
                        "             UNION ALL\n" +
                        "             SELECT MCH.CONTRIBUTION_ID,VMT.DONOR_ID,VMT.VOUCHER_ID,\n" +
                        "                    VMT.CONTRIBUTION_TYPE,\n" +
                        "                    MCH.FC_PURPOSE AS PURPOSE,\n" +
                        "                    MP.NOTES AS ADDRESS,\n" +
                        "                    0.0 AS FIRST_AMOUNT,\n" +
                        "                    0.0 AS SUBSEQUENT_AMOUNT,\n" +
                        "                    0.0 AS PRE_CASH,\n" +
                        "                    SUM(VT.AMOUNT) AS UTILISED_CASH\n" +
                        "               FROM VOUCHER_MASTER_TRANS VMT\n" +
                        "\n" +
                        "              INNER JOIN VOUCHER_TRANS VT\n" +
                        "                 ON VT.VOUCHER_ID = VMT.VOUCHER_ID\n" +
                        "               AND VT.BRANCH_ID=VMT.BRANCH_ID\n" +
                        "               LEFT JOIN MASTER_PROJECT MP\n" +
                        "                 ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                        "               LEFT JOIN MASTER_CONTRIBUTION_HEAD MCH\n" +
                        "                 ON MCH.CONTRIBUTION_ID = MP.CONTRIBUTION_ID\n" +
                        "               LEFT JOIN MASTER_DIVISION MD\n" +
                        "                 ON MP.DIVISION_ID = MD.DIVISION_ID\n" +
                        "              WHERE MD.DIVISION_ID = 2\n" +
                        "                AND VMT.STATUS = 1\n" +
                        "                AND VMT.VOUCHER_TYPE = 'PY' AND VT.TRANS_MODE='CR'\n" +
                        "                AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        "           { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)} {AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                        "                AND MP.PROJECT_ID IN (?PROJECT_ID)) AS T\n" +
                        "\n" +
                        "    ON T.CONTRIBUTION_ID = MCH.CONTRIBUTION_ID\n" +
                        " GROUP BY MCH.CONTRIBUTION_ID";

                        break;
                    }
                #endregion

                #region FC Purpose

                //case ReportSQLCommand.ForeginContribution.FC6Purpose:
                //    {
                //        query = "SELECT CONTRIBUTION_ID,FC_PURPOSE FROM MASTER_CONTRIBUTION_HEAD ";
                //        break;
                //    }
                #endregion

                #region FC Bank

                #endregion

                #region FC6 Inst Perfrence
                case ReportSQLCommand.ForeginContribution.FCInstPreference:
                    {
                        query = "SELECT CONCAT(CONCAT(SOCIETYNAME, ','), ADDRESS) AS NAMEADDRESS,\n" +
                           "       CONCAT(CONCAT(REGNO, ' - ', REGDATE)) AS REGNODATE,\n" +
                           "       ASSOCIATIONNATURE AS NASS,DENOMINATION as DRASS,\n" +
                           "     OTHER_ASSOCIATION_NATURE, OTHER_DENOMINATION, \n" +
                           " CONCAT(CONCAT(PERMISSIONNO, ' - ', PERMISSIONDATE)) AS PERNODATE \n" +
                           "  FROM MASTER_INSTI_PERFERENCE AS MIP \n" +
                           " { WHERE MIP.CUSTOMERID=?CUSTOMERID }";

                        break;
                    }
                #endregion

                #region FC6 Designated Bank Amount
                case ReportSQLCommand.ForeginContribution.FC6DesignatedBankAmount:
                    {
                        query = "SELECT ML.LEDGER_ID, IFNULL(SUM(VMT.ACTUAL_AMOUNT), 0) AS AMOUNT\n" +
                                "  FROM VOUCHER_MASTER_TRANS VMT\n" +
                                " INNER JOIN VOUCHER_TRANS VT\n" +
                                "    ON VT.VOUCHER_ID = VMT.VOUCHER_ID\n" +
                                " INNER JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                                " INNER JOIN MASTER_LEDGER ML\n" +
                                "    ON ML.LEDGER_ID = VT.LEDGER_ID\n" +
                                " INNER JOIN MASTER_BANK_ACCOUNT MBA\n" +
                                "    ON MBA.LEDGER_ID = ML.LEDGER_ID\n" +
                                " WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "   AND VMT.PROJECT_ID IN(?PROJECT_ID)\n" +
                                "  { AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}{ AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "   AND MBA.IS_FCRA_ACCOUNT = 1\n" +
                                "   AND VMT.STATUS = 1\n" +
                                "   AND MP.DIVISION_ID = 2\n" +
                                "  AND VMT.STATUS = 1 \n" +
                                " --  AND VMT.PURPOSE_ID > 0 ";
                        break;
                    }
                #endregion

                #region FC Contribution
                case ReportSQLCommand.ForeginContribution.FCContribution:
                    {
                        query = "SELECT VMT.VOUCHER_ID,\n" +
                                "       PROJECT_ID,\n" +
                                "       VOUCHER_TYPE,\n" +
                                "       DONOR_ID,\n" +
                                "       SUM(IFNULL(AMOUNT, 0)) AS 'AMOUNT'\n" +
                                "  FROM VOUCHER_MASTER_TRANS AS VMT\n" +
                                " INNER JOIN VOUCHER_TRANS AS VT\n" +
                                "    ON VMT.VOUCHER_ID = VT.VOUCHER_ID\n" +
                                " WHERE VMT.DONOR_ID NOT IN (0)\n" +
                            //   "   AND PROJECT_ID IN(?PROJECT_ID)\n" +
                                "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO";
                        break;
                    }
                #endregion

                #region FC6 Donor
                case ReportSQLCommand.ForeginContribution.FC6Donor:
                    {
                        query = "SELECT CASE\n" +
                                "         WHEN MD.TYPE = 1 THEN\n" +
                                "          'Institutional'\n" +
                                "         WHEN MD.TYPE = 2 THEN\n" +
                                "          'Individual'\n" +
                                "       END AS DONOR_TYPE,\n" +
                                "       TRIM(CONCAT(CAST(IF(NAME = '', '', CONCAT(NAME, ',')) as CHAR),\n" +
                                "                   CAST(IF(PLACE = '', '', CONCAT(PLACE, ',')) as CHAR),\n" +
                                "                   CAST(IF(STATE = '', '', CONCAT(STATE, ',')) as CHAR),\n" +
                                "                   CAST(IF(ADDRESS = '', '', CONCAT(ADDRESS, ',')) as CHAR))) AS DONOR_ADDRESS,\n" +
                                "\n" +
                                "       MCH.FC_PURPOSE AS 'PURPOSE',\n" +
                                "       DATE(VMT.VOUCHER_DATE) AS DOF_RECEIPTS,\n" +
                                "       SUM(ACTUAL_AMOUNT) AS AMOUNT\n" +
                                "  FROM VOUCHER_MASTER_TRANS VMT\n" +
                                "\n" +
                                " INNER JOIN MASTER_CONTRIBUTION_HEAD MCH\n" +
                                "    ON MCH.CONTRIBUTION_ID = VMT.PURPOSE_ID\n" +
                                " INNER JOIN MASTER_DONAUD MD\n" +
                                "    ON MD.DONAUD_ID = VMT.DONOR_ID\n" +
                                "  LEFT JOIN MASTER_COUNTRY MC\n" +
                                "    ON MC.COUNTRY_ID = MD.COUNTRY_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                                "LEFT JOIN PROJECT_BRANCH PB ON PB.BRANCH_ID=MP.PROJECT_ID AND PB.BRANCH_ID=VMT.BRANCH_ID\n" +
                                "  LEFT JOIN MASTER_DIVISION MDI\n" +
                                "    ON MDI.DIVISION_ID = MP.DIVISION_ID\n" +
                                "\n" +
                                " WHERE VMT.STATUS = 1\n" +
                                "   AND MDI.DIVISION_ID = 2\n" +
                                "   AND VMT.VOUCHER_TYPE = 'RC' AND VMT.PURPOSE_ID > 0\n" +
                                "   AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM  AND ?DATE_TO\n" +
                                "   AND MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "  { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}{ AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                " GROUP BY MD.NAME,MCH.FC_PURPOSE;";

                        break;
                    }
                #endregion

                #region FC6 Donor Amount
                case ReportSQLCommand.ForeginContribution.FC6DonorAmount:
                    {
                        query = "SELECT IFNULL(SUM(T.INS), 0)AS INSTITUTE,\n" +
                                "       IFNULL(SUM(T.IND_ABV), 0)AS INDIV_ABOVE,\n" +
                                "       IFNULL(SUM(T.IND_BLW), 0)AS INDIV_BELOW\n" +
                                "  FROM (SELECT CASE\n" +
                                "                 WHEN MD.TYPE = 1 THEN\n" +
                                "                  SUM(ACTUAL_AMOUNT)\n" +
                                "               END AS INS,\n" +
                                "               0 AS IND_ABV,\n" +
                                "               0 AS IND_BLW\n" +
                                "          FROM VOUCHER_MASTER_TRANS VMT\n" +
                                "\n" +
                                "         INNER JOIN MASTER_CONTRIBUTION_HEAD MCH\n" +
                                "            ON MCH.CONTRIBUTION_ID = VMT.PURPOSE_ID\n" +
                                "         INNER JOIN MASTER_DONAUD MD\n" +
                                "            ON MD.DONAUD_ID = VMT.DONOR_ID\n" +
                                "          LEFT JOIN MASTER_PROJECT MP\n" +
                                "            ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                                "          LEFT JOIN MASTER_DIVISION MDI\n" +
                                "            ON MDI.DIVISION_ID = MP.DIVISION_ID\n" +
                                "\n" +
                                "         WHERE VMT.STATUS = 1\n" +
                                "           AND MDI.DIVISION_ID = 2\n" +
                                "           AND VMT.VOUCHER_TYPE = 'RC'\n" +
                                "           AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                                "   AND MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "{ AND VMT.BRACNH_ID IN (?BRANCH_OFFICE_ID)}{ AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "         GROUP BY MD.TYPE\n" +
                                "\n" +
                                "        UNION ALL\n" +
                                "\n" +
                                "        SELECT 0 AS INS,\n" +
                                "               CASE\n" +
                                "                 WHEN MD.TYPE = 2 AND SUM(ACTUAL_AMOUNT) >= 100000 THEN\n" +
                                "                  SUM(ACTUAL_AMOUNT)\n" +
                                "               END AS IND_ABV,\n" +
                                "               0 IND_BLW\n" +
                                "          FROM VOUCHER_MASTER_TRANS VMT\n" +
                                "\n" +
                                "         INNER JOIN MASTER_CONTRIBUTION_HEAD MCH\n" +
                                "            ON MCH.CONTRIBUTION_ID = VMT.PURPOSE_ID\n" +
                                "         INNER JOIN MASTER_DONAUD MD\n" +
                                "            ON MD.DONAUD_ID = VMT.DONOR_ID\n" +
                                "          LEFT JOIN MASTER_PROJECT MP\n" +
                                "            ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                                "          LEFT JOIN MASTER_DIVISION MDI\n" +
                                "            ON MDI.DIVISION_ID = MP.DIVISION_ID\n" +
                                "\n" +
                                "         WHERE VMT.STATUS = 1\n" +
                                "           AND MDI.DIVISION_ID = 2\n" +
                                "           AND VMT.VOUCHER_TYPE = 'RC'\n" +
                                "           AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                                "   AND MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "{ AND VMT.BRACNH_ID IN (?BRANCH_OFFICE_ID)}{ AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "         GROUP BY MD.TYPE\n" +
                                "\n" +
                                "        UNION ALL\n" +
                                "\n" +
                                "        SELECT 0 AS INS,\n" +
                                "               0 IND_ABV,\n" +
                                "               CASE\n" +
                                "                 WHEN MD.TYPE = 2 AND SUM(ACTUAL_AMOUNT) < 100000 THEN\n" +
                                "                  SUM(ACTUAL_AMOUNT)\n" +
                                "               END AS IND_BLW\n" +
                                "\n" +
                                "          FROM VOUCHER_MASTER_TRANS VMT\n" +
                                "\n" +
                                "         INNER JOIN MASTER_CONTRIBUTION_HEAD MCH\n" +
                                "            ON MCH.CONTRIBUTION_ID = VMT.PURPOSE_ID\n" +
                                "         INNER JOIN MASTER_DONAUD MD\n" +
                                "            ON MD.DONAUD_ID = VMT.DONOR_ID\n" +
                                "          LEFT JOIN MASTER_PROJECT MP\n" +
                                "            ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                                "          LEFT JOIN MASTER_DIVISION MDI\n" +
                                "            ON MDI.DIVISION_ID = MP.DIVISION_ID\n" +
                                "\n" +
                                "         WHERE VMT.STATUS = 1\n" +
                                "           AND MDI.DIVISION_ID = 2\n" +
                                "           AND VMT.VOUCHER_TYPE = 'RC'\n" +
                                "           AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                                "   AND MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "{ AND VMT.BRACNH_ID IN (?BRANCH_OFFICE_ID)}{ AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "         GROUP BY MD.TYPE) AS T";

                        break;
                    }
                #endregion

                #region FC6 Fixed Deposit
                case ReportSQLCommand.ForeginContribution.FC6FixedDeposit:
                    {
                        query = " SELECT FDA.INVESTMENT_DATE,\n" +
                               "  FDA.PROJECT_ID,IFNULL(FDR.MATURITY_DATE, FDA.MATURED_ON) AS MATURITY_DATE,\n" +
                               "  -- FDA.FD_ACCOUNT_NUMBER,\n" +
                               " -- CONCAT(MBK.BANK, ' (', MBK.BRANCH, ')') AS BANK,\n" +
                               "  -- MLG.LEDGER_NAME,\n" +
                               " --  MPR.PROJECT,\n" +
                               "--  IFNULL(FDR.INTEREST_RATE, FDA.INTEREST_RATE) AS INTEREST_RATE,\n" +
                               "-- FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                               "-- IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) AS PRINCIPLE_AMOUNT,\n" +
                               "-- IFNULL(FDR.INTEREST_AMOUNT, 0) AS INTEREST_AMOUNT,\n" +
                               "-- IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                               "-- FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                               "-- IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                               "-- IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) AS TOTAL_AMOUNT,\n" +
                               "-- IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) AS WITHDRAWAL_AMOUNT,\n" +
                               " SUM(FDA.AMOUNT) + IFNULL(SUM(FDRO.ACCUMULATED_INTEREST_AMOUNT), 0) -\n" +
                               " IFNULL(SUM(FDRO.WITHDRAWAL_AMOUNT), 0) +\n" +
                               " IFNULL(SUM(FDR.ACCUMULATED_INTEREST_AMOUNT), 0) -\n" +
                               " IFNULL(SUM(FDR.WITHDRAWAL_AMOUNT), 0) AS BALANCE_AMOUNT\n" +
                               "-- IF(FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                               "-- IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) +\n" +
                               "-- IFNULL(FDR.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                               "-- IFNULL(FDR.WITHDRAWAL_AMOUNT, 0) = 0,\n" +
                               "-- 'Closed',\n" +
                               "-- 'Active') AS CLOSING_STATUS\n" +
                               " FROM FD_ACCOUNT AS FDA\n" +
                               " LEFT JOIN (SELECT FD_ACCOUNT_ID,\n" +
                               " MAX(MATURITY_DATE) AS MATURITY_DATE,\n" +
                               " MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                               " SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                               " SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                               " SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                               " FROM FD_RENEWAL\n" +
                               " WHERE STATUS = 1 AND IS_DELETED=1\n" +
                               " AND RENEWAL_DATE < ?DATE_FROM \n" +
                               " GROUP BY FD_ACCOUNT_ID) AS FDRO\n" +
                               " ON FDA.FD_ACCOUNT_ID = FDRO.FD_ACCOUNT_ID\n" +
                               " LEFT JOIN (SELECT FD_ACCOUNT_ID,\n" +
                               " MAX(MATURITY_DATE) AS MATURITY_DATE,\n" +
                               " MAX(RENEWAL_DATE) AS RENEWAL_DATE,\n" +
                               " INTEREST_RATE,\n" +
                               " SUM(IF(RENEWAL_TYPE = 'ACI', 0, INTEREST_AMOUNT)) AS INTEREST_AMOUNT,\n" +
                               " SUM(IF(RENEWAL_TYPE = 'ACI', INTEREST_AMOUNT, 0)) AS ACCUMULATED_INTEREST_AMOUNT,\n" +
                               " SUM(WITHDRAWAL_AMOUNT) AS WITHDRAWAL_AMOUNT\n" +
                               " FROM FD_RENEWAL\n" +
                               " WHERE STATUS = 1 AND IS_DELETED=1\n" +
                               " AND RENEWAL_DATE BETWEEN ?DATE_FROM AND ?DATE_TO \n" +
                               " GROUP BY FD_ACCOUNT_ID) AS FDR\n" +
                               " ON FDA.FD_ACCOUNT_ID = FDR.FD_ACCOUNT_ID\n" +
                               " LEFT JOIN MASTER_BANK AS MBK\n" +
                               " ON FDA.BANK_ID = MBK.BANK_ID\n" +
                               " LEFT JOIN MASTER_PROJECT MPR\n" +
                               " ON FDA.PROJECT_ID = MPR.PROJECT_ID\n" +
                               "LEFT JOIN PROJECT_BRANCH PB ON PB.PROJECT_ID=MPR.PROJECT_ID\n" +
                               " LEFT JOIN MASTER_LEDGER MLG\n" +
                               " ON FDA.LEDGER_ID = MLG.LEDGER_ID\n" +
                               " WHERE FDA.STATUS = 1 \n" +
                               " AND FDA.INVESTMENT_DATE <= ?DATE_TO \n" +
                               " {AND MPR.PROJECT_ID IN (?PROJECT_ID)}\n" +
                               " {   AND MPR.CUSTOMERID IN (?LEGAL_ENTITY_ID) }{AND PB.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                               " AND FDA.AMOUNT + IFNULL(FDRO.ACCUMULATED_INTEREST_AMOUNT, 0) -\n" +
                               " IFNULL(FDRO.WITHDRAWAL_AMOUNT, 0) <> 0  ORDER BY MATURITY_DATE ASC";
                        break;
                    }
                #endregion

                #region FC6 Bank Interest Amount
                case ReportSQLCommand.ForeginContribution.FC6BankInterestAmount:
                    {
                        query = "SELECT IFNULL(SUM(VT.AMOUNT),0) AS AMOUNT\n" +
                                "  FROM VOUCHER_MASTER_TRANS VMT\n" +
                                "\n" +
                                " INNER JOIN VOUCHER_TRANS VT\n" +
                                "    ON VT.VOUCHER_ID = VMT.VOUCHER_ID\n" +
                                " INNER JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                                " INNER JOIN MASTER_LEDGER ML\n" +
                                "    ON ML.LEDGER_ID = VT.LEDGER_ID\n" +
                                " WHERE VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "   AND VMT.PROJECT_ID IN(?PROJECT_ID)\n" +
                                " {  AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}{ AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID)}\n" +
                                "   AND ML.IS_BANK_INTEREST_LEDGER = 1\n" +
                                "   AND VMT.STATUS = 1\n" +
                                " --  AND VMT.PURPOSE_ID > 0\n" +
                                "  AND VMT.STATUS = 1 \n" +
                                "   AND MP.DIVISION_ID = 2";
                        break;
                    }
                #endregion

                #region FC6 Bank Details
                case ReportSQLCommand.ForeginContribution.FC6BankAccount:
                    {
                        query = "SELECT BA.BANK_ID, MBA.ACCOUNT_NUMBER, BA.BANK, BA.BRANCH, BA.ADDRESS\n" +
                                "  FROM MASTER_BANK_ACCOUNT MBA\n" +
                                " INNER JOIN MASTER_BANK BA\n" +
                                "    ON MBA.BANK_ID = BA.BANK_ID\n" +
                                " INNER JOIN PROJECT_LEDGER PL\n" +
                                "    ON PL.LEDGER_ID = MBA.LEDGER_ID\n" +
                                " INNER JOIN MASTER_PROJECT MP\n" +
                                "    ON PL.PROJECT_ID = MP.PROJECT_ID\n" +
                                " INNER JOIN PROJECT_BRANCH PB ON PB.PROJECT_ID=MP.PROJECT_ID\n" +
                                " INNER JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                " WHERE MBA.IS_FCRA_ACCOUNT > 0\n" +
                                "   AND MP.CUSTOMERID = ?CUSTOMERID\n" +
                                " AND PB.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                                " GROUP BY MBA.LEDGER_ID;";
                        break;
                    }
                #endregion
            }
            return query;
        }
    }

    public class ReportBudgetVariance
    {
        public string GetReportSQL(ReportSQLCommand.BudgetVariance queryId)
        {
            string query = string.Empty;
            switch (queryId)
            {
                #region Budget Variance
                case ReportSQLCommand.BudgetVariance.BudgetDetails:
                    {
                        query = @" SELECT ML.LEDGER_CODE,
                                       ML.LEDGER_ID,
                                       BM.BUDGET_NAME,
                                       SUM(BL.APPROVED_AMOUNT) AS GROUP_CODE,
                                       ML.LEDGER_NAME,
                                       MLG.LEDGER_GROUP,MLG.NATURE_ID,
                                       SUM(BL.APPROVED_AMOUNT) AS APPROVED_AMOUNT, 
                                       SUM(BL.PROPOSED_AMOUNT) AS PROPOSED_AMOUNT,
                                       BL.TRANS_MODE,
                                        CASE
                                              WHEN BL.TRANS_MODE = 'DR' THEN
                                               IF(ML.BUDGET_GROUP_ID = 1, 'Recurring Expenses', IF(ML.BUDGET_GROUP_ID = 2,'Non - Recurring Expenses',''))                                               
                                              ELSE
                                               ' '
                                            END AS BUDGET_GROUP,
                                       IF(BL.TRANS_MODE = 'DR',ML.BUDGET_GROUP_ID, 0) AS BUDGET_GROUP_ID,  
                                        CASE
                                          WHEN BL.TRANS_MODE = 'DR' THEN
                                            IF(ML.BUDGET_SUB_GROUP_ID = 1, 'Regular Expenses', IF(ML.BUDGET_SUB_GROUP_ID = 2,'Non - Regular Expenses',''))                                                
                                          ELSE
                                           ''
                                        END AS BUDGET_SUB_GROUP,
                                         IF(BL.TRANS_MODE='CR','Income','Expenditure')  AS BUDGET_NATURE,
                                       '' AS ACTUAL_AMOUNT,
                                       0 AS YEAR_TO,
                                      'IN %'
                                      FROM BUDGET_LEDGER BL
                                     LEFT JOIN BUDGET_MASTER BM
                                     ON BL.BUDGET_ID = BM.BUDGET_ID
                                     LEFT JOIN MASTER_LEDGER ML
                                     ON ML.LEDGER_ID = BL.LEDGER_ID
                                    INNER JOIN MASTER_LEDGER_GROUP MLG
                                     ON ML.GROUP_ID = MLG.GROUP_ID
                                    AND ML.LEDGER_ID = BL.LEDGER_ID
                                     WHERE BM.BUDGET_ID IN (?BUDGET_ID)
                                     AND BL.PROPOSED_AMOUNT <> 0
                                     { AND BM.BRANCH_ID IN (?BRANCH_OFFICE_ID) }
                                    GROUP BY ML.LEDGER_ID,TRANS_MODE ORDER BY LEDGER_CODE,BUDGET_SUB_GROUP;";
                        break;
                    }
                case ReportSQLCommand.BudgetVariance.BudgetVarianceReport:
                    {
                        query = @"SELECT ML.LEDGER_ID,
                                       ML.LEDGER_CODE,
                                       BM.BUDGET_NAME,
                                       SUM(BL.APPROVED_AMOUNT) AS GROUP_CODE,
                                       CASE
                                              WHEN BL.TRANS_MODE = 'DR' THEN
                                               IF(ML.BUDGET_GROUP_ID = 1, 'Recurring Expenses', IF(ML.BUDGET_GROUP_ID = 2,'Non - Recurring Expenses',''))                                               
                                              ELSE
                                               ' '
                                            END AS BUDGET_GROUP,
                                       IF(BL.TRANS_MODE = 'DR',ML.BUDGET_GROUP_ID, 0) AS BUDGET_GROUP_ID,  
                                        CASE
                                          WHEN BL.TRANS_MODE = 'DR' THEN
                                            IF(ML.BUDGET_SUB_GROUP_ID = 1, 'Regular Expenses', IF(ML.BUDGET_SUB_GROUP_ID = 2,'Non - Regular Expenses',''))                                                
                                          ELSE
                                           ''
                                        END AS BUDGET_SUB_GROUP,
                                        IF(BL.TRANS_MODE='CR','Income','Expenditure')  AS BUDGET_NATURE,
                                       ML.LEDGER_NAME,
                                       MLG.LEDGER_GROUP,
                                       MLG.NATURE_ID,
                                       BL.TRANS_MODE,
                                       IFNULL(T.AMOUNT, 0) AS YEAR_TO,
                                       SUM(BL.APPROVED_AMOUNT) AS APPROVED_AMOUNT,
                                        -- CONCAT(T.AMOUNT,0) AS ACTUAL_AMOUNT,
                                         (IF(T.AMOUNT= 0,0 ,T.AMOUNT)) AS ACTUAL_AMOUNT,
                                       -- CONCAT(IFNULL(T.AMOUNT, 0),
                                             --  IF(MLG.NATURE_ID IN (2, 3) AND IFNULL((T.AMOUNT), 0) <> 0,
                                              --    5,
                                             --     IF(IFNULL(T.AMOUNT, 0) <> 0, 1, 2))) AS ACTUAL_AMOUNT,
                                       SUM(IFNULL(T.AMOUNT, 0)) - SUM(IFNULL(BL.APPROVED_AMOUNT, 0)) AS BUDGET_VARIANCE,
                                      CONCAT(ROUND(((SUM(IFNULL(T.AMOUNT, 0)) - SUM(IFNULL(BL.APPROVED_AMOUNT, 0)))/ SUM(BL.APPROVED_AMOUNT))* 100), ' %') AS Percentage
                                  FROM BUDGET_LEDGER BL
                                  LEFT JOIN BUDGET_MASTER BM
                                    ON BL.BUDGET_ID = BM.BUDGET_ID
                                  LEFT JOIN MASTER_LEDGER ML
                                    ON ML.LEDGER_ID = BL.LEDGER_ID
                                 INNER JOIN MASTER_LEDGER_GROUP MLG
                                    ON ML.GROUP_ID = MLG.GROUP_ID
                                   AND ML.LEDGER_ID = BL.LEDGER_ID
                                  LEFT JOIN (SELECT VMT.PROJECT_ID,
                                                    VT.TRANS_MODE,
                                                    VT.LEDGER_ID,
                                                    IFNULL(SUM(VT.AMOUNT), 0) AS AMOUNT
                                                    --  SUM(VT.AMOUNT) AS AMOUNT
                                               FROM VOUCHER_MASTER_TRANS VMT
                                              INNER JOIN VOUCHER_TRANS VT
                                                 ON VMT.VOUCHER_ID = VT.VOUCHER_ID
                                              WHERE VMT.STATUS = 1 AND VMT.PROJECT_ID IN (?PROJECT_ID) { AND VMT.VOUCHER_TYPE NOT IN (?VOUCHER_TYPE) }
                                                AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                                              GROUP BY VT.LEDGER_ID, VT.TRANS_MODE) T
                                   ON T.LEDGER_ID = BL.LEDGER_ID
                                   AND T.TRANS_MODE = BL.TRANS_MODE
                                 WHERE BM.BUDGET_ID IN (?BUDGET_ID)  
                                   AND BL.APPROVED_AMOUNT > 0  { AND BM.BRANCH_ID IN (?BRANCH_OFFICE_ID) } GROUP BY ML.LEDGER_ID;";
                        break;
                    }
                case ReportSQLCommand.BudgetVariance.BudgetExpenditure:
                    {
                        query = @"SELECT GROUP_ID,
                                   DATE_FORMAT(CUR_BL.DATE_FROM, '%b-%Y') as MONTH_NAME,
                                   CUR_BL.DATE_FROM,
                                   CUR_BL.DATE_TO,
                                   NATURE_ID,
                                   NATURE,
                                   PL.LEDGER_ID,
                                   PL.ACCESS_FLAG,
                                   PL.LEDGER_CODE,
                                   PL.LEDGER_NAME,
                                   PL.LEDGER_GROUP,
                                   'DR' AS BUDGET_TRANS_MODE,
                                   CUR_BL.APPROVED_AMOUNT AS AMOUNT
                              FROM (SELECT PL.PROJECT_ID,
                                           ML.GROUP_ID,
                                           MLG.NATURE_ID,
                                           MNN.NATURE,
                                           ML.LEDGER_ID,
                                           ML.ACCESS_FLAG,
                                           ML.LEDGER_CODE,
                                           ML.LEDGER_NAME,
                                           IF(MLG.NATURE_ID = 1,
                                              'Incomes',
                                              IF(MLG.NATURE_ID = 2,
                                                 'Expenses',
                                                 IF(MLG.NATURE_ID = 3, 'Assets', 'Liabilities'))) AS LEDGER_GROUP
                                      FROM MASTER_LEDGER ML
                                     INNER JOIN MASTER_LEDGER_GROUP MLG
                                        ON ML.GROUP_ID = MLG.GROUP_ID
                                     INNER JOIN MASTER_NATURE MNN
                                        ON MNN.NATURE_ID = MLG.NATURE_ID
                                     INNER JOIN PROJECT_LEDGER PL
                                        ON PL.LEDGER_ID = ML.LEDGER_ID
                                     WHERE PL.PROJECT_ID IN (?PROJECT_ID)
                                     GROUP BY ML.LEDGER_ID) AS PL
                              LEFT JOIN (SELECT T.BUDGET_ID,
                                                LEDGER_ID,
                                                T.DATE_FROM,
                                                T.DATE_TO,
                                                APPROVED_AMOUNT,
                                                TRANS_MODE
                                           FROM (SELECT BM.BUDGET_ID, DATE_FROM, DATE_TO
                                                   FROM BUDGET_MASTER BM
                                                  WHERE BM.BUDGET_ID IN (?BUDGET_ID) { AND BM.BRANCH_ID IN (?BRANCH_OFFICE_ID) }) AS T
                                           LEFT JOIN BUDGET_LEDGER BL
                                             ON T.BUDGET_ID = BL.BUDGET_ID
                                          WHERE BL.TRANS_MODE = 'DR') AS CUR_BL
                                ON CUR_BL.LEDGER_ID = PL.LEDGER_ID
                             WHERE PL.PROJECT_ID IN (?PROJECT_ID)
                               AND IF('CR' = 'DR', NATURE_ID IN (1, 3, 4), NATURE_ID IN (2, 3, 4))
                               -- AND PL.ACCESS_FLAG NOT IN (2)
                               -- AND GROUP_ID NOT IN (12, 13, 14)
                               AND CUR_BL.APPROVED_AMOUNT != 0
                             ORDER BY PL.LEDGER_CODE, DATE_FROM";
                        break;
                    }
                case ReportSQLCommand.BudgetVariance.FetchMysoreBudget:
                    {
                        query = @" SELECT PL.PROJECT_ID,
                                       ML.GROUP_ID,
                                       MLG.NATURE_ID,
                                       MNN.NATURE,
                                       ML.SORT_ID,
                                       ML.LEDGER_ID,
                                       0 AS SUB_LEDGER_ID,
                                       ML.ACCESS_FLAG,
                                       ML.LEDGER_CODE,
                                       ML.LEDGER_NAME AS MAIN_LEDGER_NAME,
                                       ML.LEDGER_NAME,
                                       '' AS SUB_LEDGER_NAME,
                                       IF(MLG.NATURE_ID = 1,
                                          'Incomes',
                                          IF(MLG.NATURE_ID = 2,
                                             'Expenses',
                                             IF(MLG.NATURE_ID = 3, 'Assets', 'Liabilities'))) AS LEDGER_GROUP1,
                                       MLG.LEDGER_GROUP,
                                       IFNULL(M1.PROPOSED_AMOUNT, 0) AS M1_PROPOSED_AMOUNT,
                                       IFNULL(M1.APPROVED_AMOUNT, 0) AS M1_APPROVED_AMOUNT,
                                       IFNULL(PREV_BUDGET.PROPOSED_AMOUNT, 0) AS PREV_PROPOSED_AMOUNT,
                                       IFNULL(PREV_BUDGET.APPROVED_AMOUNT, 0) AS PREV_APPROVED_AMOUNT,
                                       IFNULL(PREV_ACTUAL.PREV_ACTUAL_SPENT, 0) - IFNULL(PREV_SUB_LEDGER_ACTUAL.AMOUNT,0) AS PREV_ACTUAL_SPENT,
                                       IFNULL(M2.PROPOSED_AMOUNT, 0) AS M2_PROPOSED_AMOUNT,
                                       IFNULL(M2.APPROVED_AMOUNT, 0) AS M2_APPROVED_AMOUNT,
                                       CONCAT(IFNULL(M1.NARRATION, ''),
                                              CONCAT(IF(M2.NARRATION IS NULL OR M2.NARRATION = '', '', '/'),
                                                     IFNULL(M2.NARRATION, ''))) AS NARRATION,
                                       PREV_BUDGET.NARRATION AS NARRATION1,
                                       CASE
                                         WHEN ML.BUDGET_GROUP_ID = 1 THEN
                                          'Recurring Expenses'
                                         WHEN ML.BUDGET_GROUP_ID = 2 THEN
                                          'Non - Recurring Expenses'
                                         ELSE
                                          ''
                                       END AS BUDGET_GROUP,
                                       ML.BUDGET_GROUP_ID,
                                       CASE
                                         WHEN ML.BUDGET_SUB_GROUP_ID = 1 THEN
                                          'Regular Expenses'
                                         WHEN ML.BUDGET_SUB_GROUP_ID = 2 THEN
                                          'Non - Regular Expenses'
                                         ELSE
                                          ''
                                       END AS BUDGET_SUB_GROUP,
                                       ML.BUDGET_SUB_GROUP_ID
                                  FROM MASTER_LEDGER ML
                                 INNER JOIN MASTER_LEDGER_GROUP MLG
                                    ON ML.GROUP_ID = MLG.GROUP_ID
                                 INNER JOIN MASTER_NATURE MNN
                                    ON MNN.NATURE_ID = MLG.NATURE_ID
                                 INNER JOIN PROJECT_LEDGER PL
                                    ON PL.LEDGER_ID = ML.LEDGER_ID
                                 INNER JOIN PROJECT_BUDGET_LEDGER PBL
                                    ON PBL.LEDGER_ID = PL.LEDGER_ID
                                   AND PBL.PROJECT_ID = PL.PROJECT_ID
                                  LEFT JOIN (SELECT BM.BUDGET_ID,
                                                    BL.LEDGER_ID,
                                                    BM.DATE_FROM,
                                                    BM.DATE_TO,
                                                    BL.PROPOSED_AMOUNT,
                                                    BL.APPROVED_AMOUNT,
                                                    BL.NARRATION,
                                                    0 AS SUB_LEDGER_ALONE
                                               FROM BUDGET_MASTER BM
                                               LEFT JOIN BUDGET_LEDGER BL
                                                 ON BM.BUDGET_ID = BL.BUDGET_ID
                                              WHERE BM.BUDGET_ID IN (?MONTH1_BUDGET_ID)
                                                AND BL.TRANS_MODE = 'DR'
                                             -- Un Budgetd Legers (Sub Ledgers alone)
                                             UNION ALL
                                             SELECT BM.BUDGET_ID,
                                                    BSL.LEDGER_ID,
                                                    BM.DATE_FROM,
                                                    BM.DATE_TO,
                                                    0 AS PROPOSED_AMOUNT,
                                                    0 AS APPROVED_AMOUNT,
                                                    '' AS NARRATION,
                                                    1 AS SUB_LEDGER_ALONE
                                               FROM BUDGET_MASTER BM
                                              INNER JOIN BUDGET_SUB_LEDGER BSL
                                                 ON BM.BUDGET_ID = BSL.BUDGET_ID
                                               LEFT JOIN BUDGET_LEDGER BL
                                                 ON BL.BUDGET_ID = BM.BUDGET_ID
                                                AND BL.LEDGER_ID = BSL.LEDGER_ID
                                              WHERE BM.BUDGET_ID IN (?MONTH1_BUDGET_ID)
                                                AND BSL.TRANS_MODE = 'DR'
                                                AND BL.LEDGER_ID IS NULL
                                              GROUP BY LEDGER_ID) AS M1
                                    ON M1.LEDGER_ID = ML.LEDGER_ID
                                  LEFT JOIN (SELECT BM.BUDGET_ID,
                                                    BL.LEDGER_ID,
                                                    BM.DATE_FROM,
                                                    BM.DATE_TO,
                                                    BL.PROPOSED_AMOUNT,
                                                    BL.APPROVED_AMOUNT,
                                                    NARRATION,
                                                    0 AS SUB_LEDGER_ALONE
                                               FROM BUDGET_MASTER BM
                                               LEFT JOIN BUDGET_LEDGER BL
                                                 ON BM.BUDGET_ID = BL.BUDGET_ID
                                              WHERE BM.BUDGET_ID IN (?MONTH2_BUDGET_ID)
                                                AND BL.TRANS_MODE = 'DR'
                                             -- Un Budgetd Legers (Sub Ledgers alone)
                                             UNION ALL
                                             SELECT BM.BUDGET_ID,
                                                    BSL.LEDGER_ID,
                                                    BM.DATE_FROM,
                                                    BM.DATE_TO,
                                                    0 AS PROPOSED_AMOUNT,
                                                    0 AS APPROVED_AMOUNT,
                                                    '' AS NARRATION,
                                                    1 AS SUB_LEDGER_ALONE
                                               FROM BUDGET_MASTER BM
                                              INNER JOIN BUDGET_SUB_LEDGER BSL
                                                 ON BM.BUDGET_ID = BSL.BUDGET_ID
                                               LEFT JOIN BUDGET_LEDGER BL
                                                 ON BL.BUDGET_ID = BM.BUDGET_ID
                                                AND BL.LEDGER_ID = BSL.LEDGER_ID
                                              WHERE BM.BUDGET_ID IN (?MONTH2_BUDGET_ID)
                                                AND BSL.TRANS_MODE = 'DR'
                                                AND BL.LEDGER_ID IS NULL
                                              GROUP BY LEDGER_ID) AS M2
                                    ON M2.LEDGER_ID = ML.LEDGER_ID
                                  LEFT JOIN (SELECT BM.BUDGET_ID,
                                                    BL.LEDGER_ID,
                                                    BM.DATE_FROM,
                                                    BM.DATE_TO,
                                                    BL.PROPOSED_AMOUNT,
                                                    BL.APPROVED_AMOUNT,
                                                    BL.NARRATION
                                               FROM BUDGET_MASTER BM
                                               LEFT JOIN BUDGET_LEDGER BL
                                                 ON BM.BUDGET_ID = BL.BUDGET_ID
                                              WHERE BM.BUDGET_ID IN (?PREVIOUS_BUDGET_ID)
                                                AND BL.TRANS_MODE = 'DR') AS PREV_BUDGET
                                    ON PREV_BUDGET.LEDGER_ID = ML.LEDGER_ID
                                  LEFT JOIN (SELECT VT.LEDGER_ID, SUM(VT.AMOUNT) AS PREV_ACTUAL_SPENT
                                               FROM VOUCHER_TRANS VT
                                              INNER JOIN VOUCHER_MASTER_TRANS VMT
                                                 ON VT.VOUCHER_ID = VMT.VOUCHER_ID
                                              WHERE VMT.PROJECT_ID IN (?PROJECT_ID)
                                                AND (VT.TRANS_MODE = 'DR' AND
                                                    VMT.VOUCHER_TYPE IN ('RC', 'PY'))
                                                AND VMT.STATUS = 1 AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)
                                                AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                                              GROUP BY VT.LEDGER_ID) AS PREV_ACTUAL
                                    ON PREV_ACTUAL.LEDGER_ID = ML.LEDGER_ID
                                    LEFT JOIN (SELECT VT.LEDGER_ID, SUM(VSL.AMOUNT) AS AMOUNT
                                               FROM VOUCHER_TRANS VT
                                              INNER JOIN VOUCHER_MASTER_TRANS VMT
                                                 ON VT.VOUCHER_ID = VMT.VOUCHER_ID
                                              INNER JOIN VOUCHER_SUB_LEDGER_TRANS VSL
                                                 ON VSL.LEDGER_ID = VT.LEDGER_ID AND VSL.VOUCHER_ID=VT.VOUCHER_ID
                                              WHERE VMT.PROJECT_ID IN (?PROJECT_ID)
                                                AND (VT.TRANS_MODE = 'DR' AND
                                                    VMT.VOUCHER_TYPE IN ('RC', 'PY'))
                                                AND VMT.STATUS = 1 AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)
                                                AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                                              GROUP BY VT.LEDGER_ID) AS PREV_SUB_LEDGER_ACTUAL   
                                        ON PREV_SUB_LEDGER_ACTUAL.LEDGER_ID = ML.LEDGER_ID
                                 WHERE PL.PROJECT_ID IN (?PROJECT_ID)
                                   AND ((M1.PROPOSED_AMOUNT>0 OR M1.APPROVED_AMOUNT>0) OR (M2.PROPOSED_AMOUNT>0 OR M2.APPROVED_AMOUNT>0) OR
                                       M1.SUB_LEDGER_ALONE = 1 OR M2.SUB_LEDGER_ALONE = 1 OR
                                       BUDGET_GROUP_ID = 1)
                                 GROUP BY ML.LEDGER_ID
                                UNION ALL
                                SELECT PL.PROJECT_ID,
                                       ML.GROUP_ID,
                                       MLG.NATURE_ID,
                                       MNN.NATURE,
                                       ML.SORT_ID,
                                       ML.LEDGER_ID,
                                       MSL.SUB_LEDGER_ID,
                                       ML.ACCESS_FLAG,
                                       ML.LEDGER_CODE,
                                       ML.LEDGER_NAME AS MAIN_LEDGER_NAME,
                                       CONCAT('  ', MSL.SUB_LEDGER_NAME) AS LEDGER_NAME,
                                       MSL.SUB_LEDGER_NAME AS SUB_LEDGER_NAME,
                                       IF(MLG.NATURE_ID = 1,
                                          'Incomes',
                                          IF(MLG.NATURE_ID = 2,
                                             'Expenses',
                                             IF(MLG.NATURE_ID = 3, 'Assets', 'Liabilities'))) AS LEDGER_GROUP1,
                                       MLG.LEDGER_GROUP,
                                       IFNULL(M1.PROPOSED_AMOUNT, 0) AS M1_PROPOSED_AMOUNT,
                                       IFNULL(M1.APPROVED_AMOUNT, 0) AS M1_APPROVED_AMOUNT,
                                       IFNULL(PREV_BUDGET.PROPOSED_AMOUNT, 0) AS PREV_PROPOSED_AMOUNT,
                                       IFNULL(PREV_BUDGET.APPROVED_AMOUNT, 0) AS PREV_APPROVED_AMOUNT,
                                       IFNULL(PREV_ACTUAL.PREV_ACTUAL_SPENT, 0) AS PREV_ACTUAL_SPENT,
                                       IFNULL(M2.PROPOSED_AMOUNT, 0) AS M2_PROPOSED_AMOUNT,
                                       IFNULL(M2.APPROVED_AMOUNT, 0) AS M2_APPROVED_AMOUNT,
                                       CONCAT(IFNULL(M1.NARRATION, ''),
                                              CONCAT(IF(M2.NARRATION IS NULL OR M2.NARRATION = '', '', '/'),
                                                     IFNULL(M2.NARRATION, ''))) AS NARRATION,
                                       PREV_BUDGET.NARRATION AS NARRATION1,
                                       CASE
                                         WHEN ML.BUDGET_GROUP_ID = 1 THEN
                                          'Recurring Expenses'
                                         WHEN ML.BUDGET_GROUP_ID = 2 THEN
                                          'Non - Recurring Expenses'
                                         ELSE
                                          ''
                                       END AS BUDGET_GROUP,
                                       ML.BUDGET_GROUP_ID,
                                       CASE
                                         WHEN ML.BUDGET_SUB_GROUP_ID = 1 THEN
                                          'Regular Expenses'
                                         WHEN ML.BUDGET_SUB_GROUP_ID = 2 THEN
                                          'Non - Regular Expenses'
                                         ELSE
                                          ''
                                       END AS BUDGET_SUB_GROUP,
                                       ML.BUDGET_SUB_GROUP_ID
                                  FROM MASTER_LEDGER ML
                                 INNER JOIN MASTER_LEDGER_GROUP MLG
                                    ON ML.GROUP_ID = MLG.GROUP_ID
                                 INNER JOIN MASTER_NATURE MNN
                                    ON MNN.NATURE_ID = MLG.NATURE_ID
                                 INNER JOIN PROJECT_LEDGER PL
                                    ON PL.LEDGER_ID = ML.LEDGER_ID
                                 INNER JOIN PROJECT_BUDGET_LEDGER PBL
                                    ON PBL.LEDGER_ID = PL.LEDGER_ID
                                   AND PBL.PROJECT_ID = PL.PROJECT_ID
                                 INNER JOIN LEDGER_SUB_LEDGER LSL
                                    ON LSL.LEDGER_ID = ML.LEDGER_ID
                                 INNER JOIN MASTER_SUB_LEDGER MSL
                                    ON MSL.SUB_LEDGER_ID = LSL.SUB_LEDGER_ID
                                  LEFT JOIN (SELECT BM.BUDGET_ID,
                                                    BSL.LEDGER_ID,
                                                    BSL.SUB_LEDGER_ID,
                                                    BM.DATE_FROM,
                                                    BM.DATE_TO,
                                                    BSL.PROPOSED_AMOUNT,
                                                    BSL.APPROVED_AMOUNT,
                                                    NARRATION
                                               FROM BUDGET_MASTER BM
                                               LEFT JOIN BUDGET_SUB_LEDGER BSL
                                                 ON BSL.BUDGET_ID = BM.BUDGET_ID
                                             -- LEFT JOIN BUDGET_LEDGER BL ON BM.BUDGET_ID = BL.BUDGET_ID
                                              WHERE BM.BUDGET_ID IN (?MONTH1_BUDGET_ID)
                                                AND BSL.TRANS_MODE = 'DR') AS M1
                                    ON M1.LEDGER_ID = ML.LEDGER_ID
                                   AND M1.SUB_LEDGER_ID = MSL.SUB_LEDGER_ID
                                  LEFT JOIN (SELECT BM.BUDGET_ID,
                                                    BSL.LEDGER_ID,
                                                    BSL.SUB_LEDGER_ID,
                                                    BM.DATE_FROM,
                                                    BM.DATE_TO,
                                                    BSL.PROPOSED_AMOUNT,
                                                    BSL.APPROVED_AMOUNT,
                                                    NARRATION
                                               FROM BUDGET_MASTER BM
                                             -- LEFT JOIN BUDGET_LEDGER BL ON BM.BUDGET_ID = BL.BUDGET_ID
                                               LEFT JOIN BUDGET_SUB_LEDGER BSL
                                                 ON BSL.BUDGET_ID = BM.BUDGET_ID
                                              WHERE BM.BUDGET_ID IN (?MONTH2_BUDGET_ID)
                                                AND BSL.TRANS_MODE = 'DR') AS M2
                                    ON M2.LEDGER_ID = ML.LEDGER_ID
                                   AND M2.SUB_LEDGER_ID = MSL.SUB_LEDGER_ID
                                  LEFT JOIN (SELECT BM.BUDGET_ID,
                                                    BSL.LEDGER_ID,
                                                    BSL.SUB_LEDGER_ID,
                                                    BM.DATE_FROM,
                                                    BM.DATE_TO,
                                                    BSL.PROPOSED_AMOUNT,
                                                    BSL.APPROVED_AMOUNT,
                                                    NARRATION
                                               FROM BUDGET_MASTER BM
                                             -- LEFT JOIN BUDGET_LEDGER BL ON BM.BUDGET_ID = BL.BUDGET_ID
                                               LEFT JOIN BUDGET_SUB_LEDGER BSL
                                                 ON BSL.BUDGET_ID = BSL.BUDGET_ID
                                              WHERE BM.BUDGET_ID IN (?PREVIOUS_BUDGET_ID)
                                                AND BSL.TRANS_MODE = 'DR') AS PREV_BUDGET
                                    ON PREV_BUDGET.LEDGER_ID = ML.LEDGER_ID
                                   AND PREV_BUDGET.SUB_LEDGER_ID = MSL.SUB_LEDGER_ID
                                  LEFT JOIN (SELECT VT.LEDGER_ID,
                                                    VSL.SUB_LEDGER_ID,
                                                    SUM(VSL.AMOUNT) AS PREV_ACTUAL_SPENT
                                               FROM VOUCHER_TRANS VT
                                              INNER JOIN VOUCHER_MASTER_TRANS VMT
                                                 ON VT.VOUCHER_ID = VMT.VOUCHER_ID
                                              INNER JOIN VOUCHER_SUB_LEDGER_TRANS VSL
                                                 ON VSL.LEDGER_ID = VT.LEDGER_ID
                                                AND VSL.VOUCHER_ID = VT.VOUCHER_ID
                                              WHERE VMT.PROJECT_ID IN (?PROJECT_ID)
                                                AND (VT.TRANS_MODE = 'DR' AND
                                                    VMT.VOUCHER_TYPE IN ('RC', 'PY'))
                                                AND VMT.STATUS = 1 AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)
                                                AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                                              GROUP BY VT.LEDGER_ID, VSL.SUB_LEDGER_ID) AS PREV_ACTUAL
                                    ON PREV_ACTUAL.LEDGER_ID = ML.LEDGER_ID
                                   AND PREV_ACTUAL.SUB_LEDGER_ID = MSL.SUB_LEDGER_ID
                                 WHERE PL.PROJECT_ID IN (?PROJECT_ID)
                                   AND ((M1.PROPOSED_AMOUNT > 0 OR M1.APPROVED_AMOUNT>0) OR (M2.PROPOSED_AMOUNT > 0 OR M2.APPROVED_AMOUNT> 0))
                                 GROUP BY ML.LEDGER_ID, MSL.SUB_LEDGER_ID";
                        break;
                    }
                case ReportSQLCommand.BudgetVariance.BudgetInfo:
                    {
                        query = "SELECT BM.BUDGET_ID, GROUP_CONCAT(BP.PROJECT_ID) PROJECT, BM.DATE_FROM, BM.DATE_TO,\n" +
                                "GROUP_CONCAT(MP.PROJECT) AS PROJECT_NAME, BM.BUDGET_TYPE_ID,\n" +
                                "BM.HO_HELP_PROPOSED_AMOUNT, BM.HO_HELP_APPROVED_AMOUNT, BM.BUDGET_ACTION\n" +
                                "FROM BUDGET_MASTER BM\n" +
                                "INNER JOIN BUDGET_PROJECT BP ON BP.BUDGET_ID = BM.BUDGET_ID\n" +
                                "INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = BP.PROJECT_ID\n" +
                                "WHERE BM.BUDGET_ID IN (?BUDGET_ID) AND BM.BRANCH_ID IN (?BRANCH_ID) GROUP BY BM.BUDGET_ID;";
                        break;
                    }
                case ReportSQLCommand.BudgetVariance.PreviousBudgetInfo:
                    {
                        query = "SELECT BM.BUDGET_ID\n" +
                                "FROM BUDGET_MASTER BM\n" +
                                "INNER JOIN BUDGET_PROJECT BP ON BP.BUDGET_ID = BM.BUDGET_ID\n" +
                                "WHERE BM.BRANCH_ID IN (?BRANCH_ID) AND BP.PROJECT_ID IN (?PROJECT_ID) AND DATE_FROM <= ?YEAR_FROM AND DATE_TO >= ?YEAR_TO\n" +
                                "AND BM.IS_ACTIVE=1 AND BM.BUDGET_ACTION IN (2)\n" +
                                "ORDER BY DATE_FROM, DATE_TO DESC LIMIT 1";
                        break;
                    }
                case ReportSQLCommand.BudgetVariance.BudgetLedgers:
                    {
                        query = "SELECT GROUP_ID, IFNULL(PBL.LEDGER_ID,0) AS MAP_BUDGET_LEDGER_ID,\n" +
                           "       NATURE_ID,\n" +
                           "       NATURE,\n" +
                           "       PL.LEDGER_ID,\n" +
                           "       PL.ACCESS_FLAG,\n" +
                           "       PL.LEDGER_CODE,\n" +
                           "       PL.LEDGER_NAME,\n" +
                           "       PL.BUDGET_GROUP_ID, PL.BUDGET_SUB_GROUP_ID, PL.BUDGET_GROUP, PL.BUDGET_SUB_GROUP,\n" +
                            //"        IF(?BUDGET_TRANS_MODE ='CR', '', BUDGET_GROUP) BUDGET_GROUP,\n" +
                            //"        IF(?BUDGET_TRANS_MODE ='CR', '', BUDGET_SUB_GROUP) BUDGET_SUB_GROUP,\n" +
                            //"       IF(?BUDGET_TRANS_MODE ='CR', 1, PL.BUDGET_GROUP_ID) BUDGET_GROUP_ID,\n" +
                            //"       IF(?BUDGET_TRANS_MODE ='CR', 2, PL.BUDGET_SUB_GROUP_ID) BUDGET_SUB_GROUP_ID,\n" +
                           "       PL.BUDGET_GROUP,\n" +
                           "       PL.BUDGET_SUB_GROUP,\n" +
                           "       PL.LEDGER_GROUP,\n" +
                           "       ?BUDGET_TRANS_MODE AS BUDGET_TRANS_MODE,\n" +
                             " --       CASE\n" +
                            " --        WHEN NATURE_ID IN (1, 3, 4) AND 'CR' = ?BUDGET_TRANS_MODE THEN\n" +
                            " --        SUM(IF(CUR_BL.TRANS_MODE = 'CR', CUR_BL.PROPOSED_AMOUNT, 0))\n" +
                            " --        WHEN NATURE_ID IN (2, 3, 4) AND 'DR' = ?BUDGET_TRANS_MODE THEN\n" +
                            " --         SUM(IF(CUR_BL.TRANS_MODE = 'DR', CUR_BL.PROPOSED_AMOUNT, 0))\n" +
                            " --      END AS PROPOSED_CURRENT_YR,\n" +
                            "     SUM(IFNULL(CUR_BL.PROPOSED_AMOUNT,0)) AS PROPOSED_CURRENT_YR,\n" +
                            "\n" +
                            " --       CASE\n" +
                            " --        WHEN NATURE_ID IN (1, 3, 4) AND 'CR' = ?BUDGET_TRANS_MODE THEN\n" +
                            " --         SUM(IF(CUR_BL.TRANS_MODE = 'CR', CUR_BL.APPROVED_AMOUNT, 0))\n" +
                            " --        WHEN NATURE_ID IN (2, 3, 4) AND 'DR' = ?BUDGET_TRANS_MODE THEN\n" +
                            " --         SUM(IF(CUR_BL.TRANS_MODE = 'DR', CUR_BL.APPROVED_AMOUNT, 0))\n" +
                            " --      END AS APPROVED_CURRENT_YR,\n" +
                            "      SUM(IFNULL(CUR_BL.APPROVED_AMOUNT, 0)) AS APPROVED_CURRENT_YR,\n" +
                            "\n" +
                            " --      CASE\n" +
                            " --        WHEN NATURE_ID IN (1, 3, 4) AND 'CR' = ?BUDGET_TRANS_MODE THEN\n" +
                            " --         SUM(IF(PRE_BL.TRANS_MODE = 'CR', PRE_BL.APPROVED_AMOUNT, 0))\n" +
                            " --        WHEN NATURE_ID IN (2, 3, 4) AND 'DR' = ?BUDGET_TRANS_MODE THEN\n" +
                            " --         SUM(IF(PRE_BL.TRANS_MODE = 'DR', PRE_BL.APPROVED_AMOUNT, 0))\n" +
                            " --      END AS APPROVED_PREVIOUS_YR,\n" +
                            "     SUM(IFNULL(PRE_BL.APPROVED_AMOUNT, 0)) AS APPROVED_PREVIOUS_YR,\n" +
                            "IF(?SHOWBUDGETLEDGERSEPARATERECEIPTPAYMENTACTUALBALANCE <> '2',\n" +
                            "       CASE\n" +
                            "         WHEN NATURE_ID IN (1, 2) THEN\n" +
                            "          IF(NATURE_ID = 1, IFNULL(AMOUNT_CR, 0) - IFNULL(AMOUNT_DR, 0), IFNULL(AMOUNT_DR, 0) - IFNULL(AMOUNT_CR, 0))\n" +
                            "         ELSE\n" +
                            "             IF('CR' = ?BUDGET_TRANS_MODE, IFNULL(ACTUAL.AMOUNT_CR, 0),IFNULL(ACTUAL.AMOUNT_DR, 0))\n" +
                            "       END , IF('CR' = ?BUDGET_TRANS_MODE, IFNULL(ACTUAL.AMOUNT_CR, 0),IFNULL(ACTUAL.AMOUNT_DR, 0))) AS ACTUAL, \n" +
                           "CUR_NAR.NARRATION\n" +
                           "-- SUM(IF(CUR_BL.TRANS_MODE = 'CR', CUR_BL.PROPOSED_AMOUNT, 0)) AS PROPOSED_INCOME_CURRENT_YR_CR,\n" +
                           "-- SUM(IF(CUR_BL.TRANS_MODE = 'DR', CUR_BL.PROPOSED_AMOUNT, 0)) AS PROPOSED_INCOME_CURRENT_YR_DR,\n" +
                           "-- SUM(IF(CUR_BL.TRANS_MODE = 'CR', CUR_BL.APPROVED_AMOUNT, 0)) AS APPROVED_INCOME_CURRENT_YR_CR,\n" +
                           "-- SUM(IF(CUR_BL.TRANS_MODE = 'DR', CUR_BL.APPROVED_AMOUNT, 0)) AS APPROVED_INCOME_CURRENT_YR_DR,\n" +
                           "\n" +
                           "-- SUM(IF(PRE_BL.TRANS_MODE = 'CR', PRE_BL.APPROVED_AMOUNT, 0)) AS APPROVED_INCOME_PREVIOUS_YR_CR,\n" +
                           "-- SUM(IF(PRE_BL.TRANS_MODE = 'DR', PRE_BL.APPROVED_AMOUNT, 0)) AS APPROVED_INCOME_PREVIOUS_YR_DR,\n" +
                           "-- IFNULL(ACTUAL.AMOUNT_CR, 0) AS ACTUAL_CR,\n" +
                           "-- IFNULL(ACTUAL.AMOUNT_DR, 0) AS ACTUAL_DR,\n" +
                           "-- CASE\n" +
                           "--  WHEN NATURE_ID IN (1, 2) THEN\n" +
                           "--   IF(NATURE_ID = 1, IFNULL(AMOUNT_CR,0) - IFNULL(AMOUNT_DR, 0), IFNULL(AMOUNT_DR,0) - IFNULL(AMOUNT_CR,0))\n" +
                           "--  ELSE\n" +
                           "--   IF('CR'='CR', IFNULL(ACTUAL.AMOUNT_CR,0), IFNULL(ACTUAL.AMOUNT_DR,0))\n" +
                           "-- END AS ACTUAL_PRE\n" +
                           "  FROM (SELECT PL.PROJECT_ID,\n" +
                           "               ML.GROUP_ID,\n" +
                           "               MLG.NATURE_ID,\n" +
                           "               MNN.NATURE,\n" +
                           "               ML.LEDGER_ID,\n" +
                           "               ML.ACCESS_FLAG,\n" +
                           "               ML.LEDGER_CODE,\n" +
                           "               ML.LEDGER_NAME,\n" +
                           "               ML.BUDGET_GROUP_ID,\n" +
                           "               ML.BUDGET_SUB_GROUP_ID,\n" +
                           "               IFNULL(BG.BUDGET_GROUP, '') AS BUDGET_GROUP, IFNULL(BSG.BUDGET_SUB_GROUP, '') AS BUDGET_SUB_GROUP,\n" +
                            //"               IF(MLG.NATURE_ID = 1,\n" +
                            //"                  'Incomes',\n" +
                            //"                  IF(MLG.NATURE_ID = 2,\n" +
                            //"                     'Expenses',\n" +
                            //"                     IF(MLG.NATURE_ID = 3, 'Assets', 'Liabilities'))) AS LEDGER_GROUP\n" +
                           "              MLG.LEDGER_GROUP\n" +
                           "          FROM MASTER_LEDGER ML\n" +
                           "         INNER JOIN MASTER_LEDGER_GROUP MLG\n" +
                           "            ON ML.GROUP_ID = MLG.GROUP_ID\n" +
                           "         INNER JOIN MASTER_NATURE MNN\n" +
                           "            ON MNN.NATURE_ID = MLG.NATURE_ID\n" +
                           "         INNER JOIN PROJECT_LEDGER PL\n" +
                           "            ON PL.LEDGER_ID = ML.LEDGER_ID\n" +
                           "         LEFT JOIN BUDGET_GROUP BG ON BG.BUDGET_GROUP_ID = ML.BUDGET_GROUP_ID\n" +
                           "         LEFT JOIN BUDGET_SUB_GROUP BSG ON BSG.BUDGET_SUB_GROUP_ID = ML.BUDGET_SUB_GROUP_ID\n" +
                           "         WHERE PL.PROJECT_ID IN (?PROJECT_ID)\n" +
                           "         GROUP BY ML.LEDGER_ID) AS PL\n" +
                           "  LEFT JOIN (SELECT BL.LEDGER_ID,\n" +
                           "                    BL.NARRATION,\n" +
                           "                    BL.TRANS_MODE,\n" +
                           "                    BL.PROPOSED_AMOUNT,\n" +
                           "                    BL.APPROVED_AMOUNT\n" +
                           "               FROM BUDGET_LEDGER BL\n" +
                           "              WHERE BL.BUDGET_ID IN (?BUDGET_ID) AND BL.TRANS_MODE= ?BUDGET_TRANS_MODE ) AS CUR_BL\n" +
                           "    ON CUR_BL.LEDGER_ID = PL.LEDGER_ID\n" +
                           "  LEFT JOIN (SELECT BL.LEDGER_ID, BL.NARRATION, BL.TRANS_MODE\n" +
                           "               FROM BUDGET_LEDGER BL\n" +
                           "              WHERE BL.BUDGET_ID IN (?BUDGET_ID)\n" +
                           "                AND BL.TRANS_MODE = ?BUDGET_TRANS_MODE) AS CUR_NAR\n" +
                           "    ON CUR_NAR.LEDGER_ID = PL.LEDGER_ID\n" +
                           "  LEFT JOIN (SELECT LEDGER_ID,\n" +
                           "                    PROPOSED_AMOUNT,\n" +
                           "                    APPROVED_AMOUNT,\n" +
                           "                    T.BUDGET_ID,\n" +
                           "                    TRANS_MODE\n" +
                           "               FROM (SELECT MP.BUDGET_ID\n" +
                           "                       FROM BUDGET_MASTER BM\n" +
                           "                      INNER JOIN BUDGET_PROJECT MP ON MP.BUDGET_ID = BM.BUDGET_ID AND MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                           "                      WHERE DATE_FROM <= ?YEAR_FROM\n" +
                           "                        AND DATE_TO >= ?YEAR_TO AND BM.IS_ACTIVE=1 AND BM.BUDGET_ACTION IN (2)\n" +
                           "                      ORDER BY DATE_FROM, DATE_TO DESC LIMIT 1) AS T\n" +
                           "            LEFT JOIN BUDGET_LEDGER BL\n" +
                            "               ON T.BUDGET_ID = BL.BUDGET_ID\n" +
                           "             INNER JOIN BUDGET_PROJECT MP ON MP.BUDGET_ID = BL.BUDGET_ID WHERE MP.PROJECT_ID IN (?PROJECT_ID) AND BL.TRANS_MODE= ?BUDGET_TRANS_MODE GROUP BY BL.LEDGER_ID) AS PRE_BL\n" +
                           "    ON PRE_BL.LEDGER_ID = PL.LEDGER_ID\n" +
                           "  LEFT JOIN (SELECT VT.LEDGER_ID,\n" +
                           "                    SUM(IF(VT.TRANS_MODE = 'DR', VT.AMOUNT, 0)) AS AMOUNT_DR,\n" +
                           "                    SUM(IF(VT.TRANS_MODE = 'CR', VT.AMOUNT, 0)) AS AMOUNT_CR\n" +
                           "             FROM VOUCHER_TRANS VT\n" +
                           "             INNER JOIN VOUCHER_MASTER_TRANS VMT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID\n" +
                           "             WHERE VMT.BRANCH_ID IN (?BRANCH_ID) AND VMT.PROJECT_ID IN (?PROJECT_ID) AND VMT.STATUS = 1 AND VOUCHER_DATE BETWEEN ?YEAR_FROM AND ?YEAR_TO AND \n" +
                            //"{ AND ( (VMT.VOUCHER_TYPE NOT IN (?VOUCHER_TYPE)) OR (VMT.VOUCHER_TYPE = 'JN' AND VMT.VOUCHER_SUB_TYPE ='FD' AND VT.TRANS_MODE =?BUDGET_TRANS_MODE) )}\n" +
                           "IF(?SHOWBUDGETLEDGERSEPARATERECEIPTPAYMENTACTUALBALANCE <> '0', \n" +
                           " ( (VMT.VOUCHER_TYPE NOT IN ('JN')) OR (VMT.VOUCHER_TYPE = 'JN' AND VMT.VOUCHER_SUB_TYPE ='FD' AND VT.TRANS_MODE =?BUDGET_TRANS_MODE) ), 1=1) \n" +
                           "     GROUP BY VT.LEDGER_ID) AS ACTUAL ON ACTUAL.LEDGER_ID = PL.LEDGER_ID\n" +
                           "LEFT JOIN PROJECT_BUDGET_LEDGER AS PBL ON PBL.PROJECT_ID = PL.PROJECT_ID AND PBL.LEDGER_ID = PL.LEDGER_ID\n" +
                           " WHERE PL.PROJECT_ID IN (?PROJECT_ID)\n" +
                           "   AND IF('CR' = ?BUDGET_TRANS_MODE, NATURE_ID IN (1, 3, 4), NATURE_ID IN (2, 3, 4))\n" +
                           "   AND PL.ACCESS_FLAG NOT IN (2) AND GROUP_ID NOT IN(12,13,14) \n" +
                           " GROUP BY PL.LEDGER_ID\n" +
                           " ORDER BY PROPOSED_CURRENT_YR DESC, APPROVED_CURRENT_YR DESC";


                        //Chinna on 02.02.2022
                        //query = "SELECT GROUP_ID, IFNULL(PBL.LEDGER_ID,0) AS MAP_BUDGET_LEDGER_ID,\n" +
                        //   "       NATURE_ID,\n" +
                        //   "       NATURE,\n" +
                        //   "       PL.LEDGER_ID,\n" +
                        //   "       PL.ACCESS_FLAG,\n" +
                        //   "       PL.LEDGER_CODE,\n" +
                        //   "       PL.LEDGER_NAME,\n" +
                        //  "        IF(?BUDGET_TRANS_MODE ='CR', '', BUDGET_GROUP) BUDGET_GROUP,\n" +
                        //  "        IF(?BUDGET_TRANS_MODE ='CR', '', BUDGET_SUB_GROUP) BUDGET_SUB_GROUP,\n" +
                        //   "       IF(?BUDGET_TRANS_MODE ='CR', 1, PL.BUDGET_GROUP_ID) BUDGET_GROUP_ID,\n" +
                        //   "       IF(?BUDGET_TRANS_MODE ='CR', 2, PL.BUDGET_SUB_GROUP_ID) BUDGET_SUB_GROUP_ID,\n" +
                        //   "       PL.BUDGET_GROUP,\n" +
                        //   "       PL.BUDGET_SUB_GROUP,\n" +
                        //   "       PL.LEDGER_GROUP,\n" +
                        //   "       ?BUDGET_TRANS_MODE AS BUDGET_TRANS_MODE,\n" +
                        //   " --       CASE\n" +
                        //   " --        WHEN NATURE_ID IN (1, 3, 4) AND 'CR' = ?BUDGET_TRANS_MODE THEN\n" +
                        //   " --        SUM(IF(CUR_BL.TRANS_MODE = 'CR', CUR_BL.PROPOSED_AMOUNT, 0))\n" +
                        //   " --        WHEN NATURE_ID IN (2, 3, 4) AND 'DR' = ?BUDGET_TRANS_MODE THEN\n" +
                        //   " --         SUM(IF(CUR_BL.TRANS_MODE = 'DR', CUR_BL.PROPOSED_AMOUNT, 0))\n" +
                        //   " --      END AS PROPOSED_CURRENT_YR,\n" +
                        //   "     SUM(IFNULL(CUR_BL.PROPOSED_AMOUNT,0)) AS PROPOSED_CURRENT_YR,\n" +
                        //   "\n" +
                        //   " --       CASE\n" +
                        //   " --        WHEN NATURE_ID IN (1, 3, 4) AND 'CR' = ?BUDGET_TRANS_MODE THEN\n" +
                        //   " --         SUM(IF(CUR_BL.TRANS_MODE = 'CR', CUR_BL.APPROVED_AMOUNT, 0))\n" +
                        //   " --        WHEN NATURE_ID IN (2, 3, 4) AND 'DR' = ?BUDGET_TRANS_MODE THEN\n" +
                        //   " --         SUM(IF(CUR_BL.TRANS_MODE = 'DR', CUR_BL.APPROVED_AMOUNT, 0))\n" +
                        //   " --      END AS APPROVED_CURRENT_YR,\n" +
                        //   "      SUM(IFNULL(CUR_BL.APPROVED_AMOUNT, 0)) AS APPROVED_CURRENT_YR,\n" +
                        //   "\n" +
                        //   " --      CASE\n" +
                        //   " --        WHEN NATURE_ID IN (1, 3, 4) AND 'CR' = ?BUDGET_TRANS_MODE THEN\n" +
                        //   " --         SUM(IF(PRE_BL.TRANS_MODE = 'CR', PRE_BL.APPROVED_AMOUNT, 0))\n" +
                        //   " --        WHEN NATURE_ID IN (2, 3, 4) AND 'DR' = ?BUDGET_TRANS_MODE THEN\n" +
                        //   " --         SUM(IF(PRE_BL.TRANS_MODE = 'DR', PRE_BL.APPROVED_AMOUNT, 0))\n" +
                        //   " --      END AS APPROVED_PREVIOUS_YR,\n" +
                        //   "     SUM(IFNULL(PRE_BL.APPROVED_AMOUNT, 0)) AS APPROVED_PREVIOUS_YR,\n" +
                        //   "IF(?SHOWBUDGETLEDGERSEPARATERECEIPTPAYMENTACTUALBALANCE = '0',\n" +
                        //   "       CASE\n" +
                        //   "         WHEN NATURE_ID IN (1, 2) THEN\n" +
                        //   "          IF(NATURE_ID = 1, IFNULL(AMOUNT_CR, 0) - IFNULL(AMOUNT_DR, 0), IFNULL(AMOUNT_DR, 0) - IFNULL(AMOUNT_CR, 0))\n" +
                        //   "         ELSE\n" +
                        //   "             IF('CR' = ?BUDGET_TRANS_MODE, IFNULL(ACTUAL.AMOUNT_CR, 0),IFNULL(ACTUAL.AMOUNT_DR, 0))\n" +
                        //   "       END , IF('CR' = ?BUDGET_TRANS_MODE, IFNULL(ACTUAL.AMOUNT_CR, 0),IFNULL(ACTUAL.AMOUNT_DR, 0))) AS ACTUAL, \n" +
                        //   "CUR_BL.NARRATION\n" +
                        //   "-- SUM(IF(CUR_BL.TRANS_MODE = 'CR', CUR_BL.PROPOSED_AMOUNT, 0)) AS PROPOSED_INCOME_CURRENT_YR_CR,\n" +
                        //   "-- SUM(IF(CUR_BL.TRANS_MODE = 'DR', CUR_BL.PROPOSED_AMOUNT, 0)) AS PROPOSED_INCOME_CURRENT_YR_DR,\n" +
                        //   "-- SUM(IF(CUR_BL.TRANS_MODE = 'CR', CUR_BL.APPROVED_AMOUNT, 0)) AS APPROVED_INCOME_CURRENT_YR_CR,\n" +
                        //   "-- SUM(IF(CUR_BL.TRANS_MODE = 'DR', CUR_BL.APPROVED_AMOUNT, 0)) AS APPROVED_INCOME_CURRENT_YR_DR,\n" +
                        //   "\n" +
                        //   "-- SUM(IF(PRE_BL.TRANS_MODE = 'CR', PRE_BL.APPROVED_AMOUNT, 0)) AS APPROVED_INCOME_PREVIOUS_YR_CR,\n" +
                        //   "-- SUM(IF(PRE_BL.TRANS_MODE = 'DR', PRE_BL.APPROVED_AMOUNT, 0)) AS APPROVED_INCOME_PREVIOUS_YR_DR,\n" +
                        //   "-- IFNULL(ACTUAL.AMOUNT_CR, 0) AS ACTUAL_CR,\n" +
                        //   "-- IFNULL(ACTUAL.AMOUNT_DR, 0) AS ACTUAL_DR,\n" +
                        //   "-- CASE\n" +
                        //   "--  WHEN NATURE_ID IN (1, 2) THEN\n" +
                        //   "--   IF(NATURE_ID = 1, IFNULL(AMOUNT_CR,0) - IFNULL(AMOUNT_DR, 0), IFNULL(AMOUNT_DR,0) - IFNULL(AMOUNT_CR,0))\n" +
                        //   "--  ELSE\n" +
                        //   "--   IF('CR'='CR', IFNULL(ACTUAL.AMOUNT_CR,0), IFNULL(ACTUAL.AMOUNT_DR,0))\n" +
                        //   "-- END AS ACTUAL_PRE\n" +
                        //   "  FROM (SELECT PL.PROJECT_ID, ML.GROUP_ID, MLG.NATURE_ID, MNN.NATURE, ML.LEDGER_ID, ML.ACCESS_FLAG, ML.LEDGER_CODE, ML.LEDGER_NAME,\n" +
                        //   "         ML.BUDGET_GROUP_ID,ML.BUDGET_SUB_GROUP_ID,\n" +
                        //   "         CASE WHEN ML.BUDGET_GROUP_ID = 1 THEN 'Recurring Expenses'\n" +
                        //   "              WHEN ML.BUDGET_GROUP_ID = 2 THEN 'Non - Recurring Expenses'\n" +
                        //   "         ELSE'' END AS BUDGET_GROUP,\n" +
                        //   "         CASE WHEN ML.BUDGET_SUB_GROUP_ID = 1 THEN 'Regular Expenses'\n" +
                        //   "              WHEN ML.BUDGET_SUB_GROUP_ID = 2 THEN 'Non - Regular Expenses'\n" +
                        //   "         ELSE ''\n END AS BUDGET_SUB_GROUP,MLG.LEDGER_GROUP\n" +
                        //   " FROM MASTER_LEDGER ML\n" +
                        //   " INNER JOIN MASTER_LEDGER_GROUP MLG ON ML.GROUP_ID = MLG.GROUP_ID\n" +
                        //   " INNER JOIN MASTER_NATURE MNN ON MNN.NATURE_ID = MLG.NATURE_ID\n" +
                        //   " INNER JOIN PROJECT_LEDGER PL ON PL.LEDGER_ID = ML.LEDGER_ID\n" +
                        //   " WHERE PL.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //   " GROUP BY ML.LEDGER_ID) AS PL\n" +
                        //   " LEFT JOIN (SELECT BL.LEDGER_ID, BL.TRANS_MODE, BL.PROPOSED_AMOUNT, BL.APPROVED_AMOUNT, BL.NARRATION\n" +
                        //   "            FROM BUDGET_LEDGER BL\n" +
                        //   "            WHERE BL.BUDGET_ID IN (?BUDGET_ID) AND BL.TRANS_MODE= ?BUDGET_TRANS_MODE ) AS CUR_BL\n" +
                        //   "   ON CUR_BL.LEDGER_ID = PL.LEDGER_ID\n" +
                        //   "LEFT JOIN (SELECT BL.LEDGER_ID, BL.TRANS_MODE, BL.PROPOSED_AMOUNT, BL.APPROVED_AMOUNT, BL.NARRATION\n" +
                        //   "            FROM BUDGET_LEDGER BL \n" +
                        //   "            WHERE BL.BUDGET_Id =?PREVIOUS_BUDGET_ID AND BL.TRANS_MODE= ?BUDGET_TRANS_MODE) AS PRE_BL\n" +
                        //   "  ON PRE_BL.LEDGER_ID = PL.LEDGER_ID\n" +
                        //   "LEFT JOIN (SELECT VT.LEDGER_ID, SUM(IF(VT.TRANS_MODE = 'DR', VT.AMOUNT, 0)) AS AMOUNT_DR,\n" +
                        //   "            SUM(IF(VT.TRANS_MODE = 'CR', VT.AMOUNT, 0)) AS AMOUNT_CR\n" +
                        //   "            FROM VOUCHER_MASTER_TRANS VMT\n" +
                        //   "            INNER JOIN VOUCHER_TRANS VT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID\n" +
                        //   "            WHERE VMT.BRANCH_ID IN (?BRANCH_ID) AND VMT.PROJECT_ID IN (?PROJECT_ID) { AND VMT.VOUCHER_TYPE NOT IN (?VOUCHER_TYPE) } \n" +
                        //   "            AND VMT.STATUS = 1 AND VOUCHER_DATE BETWEEN ?YEAR_FROM AND ?YEAR_TO GROUP BY VT.LEDGER_ID) AS ACTUAL\n" +
                        //   "  ON ACTUAL.LEDGER_ID = PL.LEDGER_ID\n" +
                        //   "LEFT JOIN PROJECT_BUDGET_LEDGER AS PBL ON PBL.PROJECT_ID = PL.PROJECT_ID AND PBL.LEDGER_ID = PL.LEDGER_ID\n" +
                        //   "         WHERE PL.PROJECT_ID IN (?PROJECT_ID) AND IF('CR' = ?BUDGET_TRANS_MODE, NATURE_ID IN (1, 3, 4), NATURE_ID IN (2, 3, 4))\n" +
                        //   "         AND PL.ACCESS_FLAG NOT IN (2) AND GROUP_ID NOT IN(12,13,14)  GROUP BY PL.LEDGER_ID\n" +
                        //   " ORDER BY PROPOSED_CURRENT_YR DESC, APPROVED_CURRENT_YR DESC";
                        break;
                    }
                case ReportSQLCommand.BudgetVariance.BudgetLedgersINM:
                    {
                        query = "SELECT GROUP_ID, IFNULL(PBL.LEDGER_ID,0) AS MAP_BUDGET_LEDGER_ID,\n" +
                           "       NATURE_ID,\n" +
                           "       NATURE,\n" +
                           "       PL.LEDGER_ID,\n" +
                           "       PL.ACCESS_FLAG,\n" +
                           "       PL.LEDGER_CODE,\n" +
                           "       PL.LEDGER_NAME,\n" +
                           "       IF(PL.BUDGET_GROUP_ID=0,7,PL.BUDGET_GROUP_ID) AS BUDGET_GROUP_ID, PL.BUDGET_SUB_GROUP_ID, IF(PL.BUDGET_GROUP='', 'Others', PL.BUDGET_GROUP) AS BUDGET_GROUP, PL.BUDGET_SUB_GROUP,\n" +
                           "       IF(PL.BUDGET_GROUP='','Others',PL.BUDGET_GROUP) AS BUDGET_GROUP,\n" +
                           "       PL.BUDGET_SUB_GROUP,\n" +
                           "       PL.LEDGER_GROUP,\n" +
                           "       ?BUDGET_TRANS_MODE AS BUDGET_TRANS_MODE,\n" +
                           "     SUM(IFNULL(CUR_BL.PROPOSED_AMOUNT,0)) AS PROPOSED_CURRENT_YR,\n" +
                            "\n" +
                            "      SUM(IFNULL(CUR_BL.APPROVED_AMOUNT, 0)) AS APPROVED_CURRENT_YR,\n" +
                            "\n" +
                            "     SUM(IFNULL(PRE_BL.APPROVED_AMOUNT, 0)) AS APPROVED_PREVIOUS_YR,\n" +
                            "IF(?SHOWBUDGETLEDGERSEPARATERECEIPTPAYMENTACTUALBALANCE <> '2',\n" +
                            "       CASE\n" +
                            "         WHEN NATURE_ID IN (1, 2) THEN\n" +
                            "          IF(NATURE_ID = 1, IFNULL(AMOUNT_CR, 0) - IFNULL(AMOUNT_DR, 0), IFNULL(AMOUNT_DR, 0) - IFNULL(AMOUNT_CR, 0))\n" +
                            "         ELSE\n" +
                            "     IF('CR' = ?BUDGET_TRANS_MODE, IFNULL(ACTUAL.AMOUNT_CR, 0),IFNULL(ACTUAL.AMOUNT_DR, 0))\n" +
                            "     END , IF('CR' = ?BUDGET_TRANS_MODE, IFNULL(ACTUAL.AMOUNT_CR, 0),IFNULL(ACTUAL.AMOUNT_DR, 0))) AS ACTUAL, \n" +

                           "CUR_NAR.NARRATION\n" +
                           "\n" +
                           "  FROM (SELECT MP.PROJECT_ID,\n" +
                           "               ML.GROUP_ID,\n" +
                           "               MLG.NATURE_ID,\n" +
                           "               MNN.NATURE,\n" +
                           "               ML.LEDGER_ID,\n" +
                           "               ML.ACCESS_FLAG,\n" +
                           "               ML.LEDGER_CODE,\n" +
                           "               ML.LEDGER_NAME,\n" +
                           "               ML.BUDGET_GROUP_ID,\n" +
                           "               ML.BUDGET_SUB_GROUP_ID,\n" +
                           "               IFNULL(BG.BUDGET_GROUP, '') AS BUDGET_GROUP, IFNULL(BSG.BUDGET_SUB_GROUP, '') AS BUDGET_SUB_GROUP,\n" +
                           "              MLG.LEDGER_GROUP\n" +
                           "          FROM MASTER_LEDGER ML\n" +
                           "         INNER JOIN MASTER_LEDGER_GROUP MLG\n" +
                           "            ON ML.GROUP_ID = MLG.GROUP_ID\n" +
                           "         INNER JOIN MASTER_NATURE MNN\n" +
                           "            ON MNN.NATURE_ID = MLG.NATURE_ID\n" +
                           "      INNER JOIN PROJECT_CATEGORY_LEDGER PCL\n" +
                           "        ON PCL.LEDGER_ID = ML.LEDGER_ID\n" +
                           "        INNER JOIN MASTER_PROJECT MP\n" +
                           "        ON MP.PROJECT_CATEGORY_ID = PCL.PROJECT_CATEGORY_ID\n" +
                           "         LEFT JOIN BUDGET_GROUP BG ON BG.BUDGET_GROUP_ID = ML.BUDGET_GROUP_ID\n" +
                           "         LEFT JOIN BUDGET_SUB_GROUP BSG ON BSG.BUDGET_SUB_GROUP_ID = ML.BUDGET_SUB_GROUP_ID\n" +
                            // "         WHERE MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                           "         GROUP BY ML.LEDGER_ID) AS PL\n" +
                           "  INNER JOIN (SELECT BL.LEDGER_ID,\n" +  // LEFT JOIN
                           "                    BL.NARRATION,\n" +
                           "                    BL.TRANS_MODE,\n" +
                           "                    BL.PROPOSED_AMOUNT,\n" +
                           "                    BL.APPROVED_AMOUNT\n" +
                           "               FROM BUDGET_LEDGER BL\n" +
                           "              WHERE BL.BUDGET_ID IN (?BUDGET_ID) AND BL.TRANS_MODE= ?BUDGET_TRANS_MODE ) AS CUR_BL\n" +
                           "    ON CUR_BL.LEDGER_ID = PL.LEDGER_ID\n" +
                           "  LEFT JOIN (SELECT BL.LEDGER_ID, BL.NARRATION, BL.TRANS_MODE\n" +
                           "               FROM BUDGET_LEDGER BL\n" +
                           "              WHERE BL.BUDGET_ID IN (?BUDGET_ID)\n" +
                           "                AND BL.TRANS_MODE = ?BUDGET_TRANS_MODE) AS CUR_NAR\n" +
                           "    ON CUR_NAR.LEDGER_ID = PL.LEDGER_ID\n" +
                           "  LEFT JOIN (SELECT LEDGER_ID,\n" +
                           "                    PROPOSED_AMOUNT,\n" +
                           "                    APPROVED_AMOUNT,\n" +
                           "                    T.BUDGET_ID,\n" +
                           "                    TRANS_MODE\n" +
                           "               FROM (SELECT MP.BUDGET_ID\n" +
                           "                       FROM BUDGET_MASTER BM\n" +
                           "                      INNER JOIN BUDGET_PROJECT MP ON MP.BUDGET_ID = BM.BUDGET_ID AND MP.PROJECT_ID IN (?PROJECT_ID)\n" +
                           "                      WHERE DATE_FROM <= ?YEAR_FROM\n" +
                           "                        AND DATE_TO >= ?YEAR_TO AND BM.IS_ACTIVE=1 AND BM.BUDGET_ACTION IN (2)\n" +
                           "                      ORDER BY DATE_FROM, DATE_TO DESC LIMIT 1) AS T\n" +
                           "            LEFT JOIN BUDGET_LEDGER BL\n" +
                           "               ON T.BUDGET_ID = BL.BUDGET_ID\n" +
                           "             INNER JOIN BUDGET_PROJECT MP ON MP.BUDGET_ID = BL.BUDGET_ID WHERE MP.PROJECT_ID IN (?PROJECT_ID) AND BL.TRANS_MODE= ?BUDGET_TRANS_MODE GROUP BY BL.LEDGER_ID) AS PRE_BL\n" +
                           "    ON PRE_BL.LEDGER_ID = PL.LEDGER_ID\n" +
                           "  LEFT JOIN (SELECT VT.LEDGER_ID,\n" +
                           "                    SUM(IF(VT.TRANS_MODE = 'DR', VT.AMOUNT, 0)) AS AMOUNT_DR,\n" +
                           "                    SUM(IF(VT.TRANS_MODE = 'CR', VT.AMOUNT, 0)) AS AMOUNT_CR\n" +
                           "             FROM VOUCHER_TRANS VT\n" +
                           "             INNER JOIN VOUCHER_MASTER_TRANS VMT ON VT.BRANCH_ID = VMT.BRANCH_ID AND VT.VOUCHER_ID = VMT.VOUCHER_ID AND VT.LOCATION_ID = VMT.LOCATION_ID\n" +
                           "             WHERE VMT.BRANCH_ID IN (?BRANCH_ID) AND VMT.PROJECT_ID IN (?PROJECT_ID) AND VMT.STATUS = 1 AND VOUCHER_DATE BETWEEN ?YEAR_FROM AND ?YEAR_TO AND \n" +
                           "IF(?SHOWBUDGETLEDGERSEPARATERECEIPTPAYMENTACTUALBALANCE <> '0', \n" +
                           " ( (VMT.VOUCHER_TYPE NOT IN ('JN')) OR (VMT.VOUCHER_TYPE = 'JN' AND VMT.VOUCHER_SUB_TYPE ='FD' AND VT.TRANS_MODE =?BUDGET_TRANS_MODE) ), 1=1) \n" +
                           "     GROUP BY VT.LEDGER_ID) AS ACTUAL ON ACTUAL.LEDGER_ID = PL.LEDGER_ID\n" +
                           "LEFT JOIN PROJECT_BUDGET_LEDGER AS PBL ON PBL.PROJECT_ID = PL.PROJECT_ID AND PBL.LEDGER_ID = PL.LEDGER_ID\n" +
                            //"  PL.PROJECT_ID IN (?PROJECT_ID) AND\n" +
                           " WHERE IF('CR' = ?BUDGET_TRANS_MODE, NATURE_ID IN (1, 3, 4), NATURE_ID IN (2, 3, 4))\n" +
                           "   AND PL.ACCESS_FLAG NOT IN (2) AND GROUP_ID NOT IN(12,13,14) \n" +
                           " GROUP BY PL.LEDGER_ID\n" +
                           " ORDER BY PROPOSED_CURRENT_YR DESC, APPROVED_CURRENT_YR DESC";
                        break;
                    }
                #endregion
            }
            return query;
        }
    }

    public class ReportMasters
    {
        public string GetReportSQL(ReportSQLCommand.Masters queryId)
        {
            string query = string.Empty;
            switch (queryId)
            {
                #region Head Office Masters
                case ReportSQLCommand.Masters.FetchHeadOfficeLedgers:
                    {
                        query = "SELECT ML.LEDGER_ID,\n" +
                                    "       MG.GROUP_ID,\n" +
                                    "       ML.LEDGER_CODE AS LEDGER_CODE,\n" +
                                    "       ML.LEDGER_NAME AS LEDGER_NAME,\n" +
                                    "       CASE\n" +
                                    "         WHEN ML.LEDGER_SUB_TYPE = 'BK' THEN\n" +
                                    "          'Bank Accounts'\n" +
                                    "         ELSE\n" +
                                    "          CASE\n" +
                                    "            WHEN ML.LEDGER_SUB_TYPE = 'FD' THEN\n" +
                                    "             'Fixed Deposit'\n" +
                                    "            ELSE\n" +
                                    "             MG.LEDGER_GROUP\n" +
                                    "          END\n" +
                                    "       END AS LEDGER_GROUP,\n" +
                                    "       MN.NATURE,\n" +
                                    "       ML.LEDGER_TYPE,\n" +
                                    "       ML.LEDGER_SUB_TYPE,\n" +
                                    "       ML.BANK_ACCOUNT_ID\n" +
                                    "  FROM MASTER_LEDGER ML\n" +
                                    " INNER JOIN MASTER_LEDGER_GROUP MG\n" +
                                    "    ON ML.GROUP_ID = MG.GROUP_ID\n" +
                                    "  AND ML.IS_BRANCH_LEDGER = 0 AND ML.STATUS = 0 AND ML.GROUP_ID NOT IN (12,13,14)\n" +
                                    "      INNER JOIN MASTER_NATURE MN \n" +
                                    " ON MN.NATURE_ID=MG.NATURE_ID\n" +
                                    " ORDER BY MN.NATURE_ID,MG.LEDGER_GROUP, ML.LEDGER_NAME ASC"; // SORT_ID ASC
                        break;
                    }
                case ReportSQLCommand.Masters.FetchHeadOfficeProject:
                    {
                        query = "SELECT IFNULL(BRANCH_OFFICE_NAME,'') AS BRANCH_OFFICE_NAME, PROJECT, IF(DIVISION_ID=1,'Local','Foreign') AS DIVISION," +
                       " PROJECT_CATOGORY_NAME FROM MASTER_PROJECT MP" +
                       " LEFT JOIN PROJECT_BRANCH PB ON MP.PROJECT_ID = PB.PROJECT_ID" +
                       " LEFT JOIN branch_office BO ON BO.BRANCH_OFFICE_ID = PB.BRANCH_ID" +
                       " LEFT JOIN master_project_catogory MPC ON MPC.PROJECT_CATOGORY_ID = MP.PROJECT_CATEGORY_ID" +
                       " ORDER BY BRANCH_OFFICE_NAME,PROJECT, PROJECT_CATOGORY_NAME";
                        break;
                    }
                case ReportSQLCommand.Masters.FetchBranchProjectLedger:
                    {
                        query = "SELECT BO.BRANCH_OFFICE_ID AS BRANCH_ID,\n" +
                         "       BO.BRANCH_OFFICE_NAME,\n" +
                         "       MP.PROJECT_ID,\n" +
                         "       MP.PROJECT,\n" +
                         "       MT.VOUCHER_NO,\n" +
                         "       MT.NARRATION,\n" +
                         "       MT.VOUCHER_TYPE,\n" +
                         "       MT.VOUCHER_DATE,\n" +
                         "       ML.LEDGER_CODE,\n" +
                         "       ML.LEDGER_NAME,\n" +
                         "       MT.VOUCHER_ID,\n" +
                         "       VT.AMOUNT\n" +
                         "  FROM VOUCHER_TRANS VT\n" +
                         " INNER JOIN VOUCHER_MASTER_TRANS MT\n" +
                         "    ON MT.BRANCH_ID = VT.BRANCH_ID\n" +
                         "   AND MT.VOUCHER_ID = VT.VOUCHER_ID\n" +
                         "   AND MT.LOCATION_ID = VT.LOCATION_ID\n" +
                         " INNER JOIN MASTER_PROJECT MP\n" +
                         "    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                         " INNER JOIN MASTER_LEDGER ML\n" +
                         "    ON ML.LEDGER_ID = VT.LEDGER_ID\n" +
                         " INNER JOIN BRANCH_OFFICE BO\n" +
                         "    ON BO.BRANCH_OFFICE_ID = MT.BRANCH_ID\n" +
                         " INNER JOIN (SELECT VMT.BRANCH_ID,\n" +
                         "                    VMT.PROJECT_ID,\n" +
                         "                    VMT.LOCATION_ID,\n" +
                         "                    VMT.VOUCHER_ID,\n" +
                         "                    ML.GROUP_ID\n" +
                         "               FROM VOUCHER_MASTER_TRANS VMT\n" +
                         "              INNER JOIN VOUCHER_TRANS VT\n" +
                         "                 ON VMT.BRANCH_ID = VT.BRANCH_ID\n" +
                         "                AND VMT.VOUCHER_ID = VT.VOUCHER_ID\n" +
                         "                AND VMT.LOCATION_ID = VT.LOCATION_ID\n" +
                         "              INNER JOIN MASTER_PROJECT MP\n" +
                         "              ON MP.PROJECT_ID = VMT.PROJECT_ID\n" +
                         "              INNER JOIN MASTER_LEDGER ML\n" +
                         "                 ON ML.LEDGER_ID = VT.LEDGER_ID\n" +
                         "              WHERE ML.GROUP_ID IN (13)\n" +
                         "                AND VMT.STATUS = 1\n" +
                         "                AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                         "                AND VMT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                         "                AND VMT.VOUCHER_SUB_TYPE NOT IN ('FD')\n" +
                         "                AND VMT.VOUCHER_DATE BETWEEN ?DATE_FROM AND\n" +
                         "                    ?DATE_TO AND MP.PROJECT_ID IN (?PROJECT_ID) AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) \n" +
                         "              GROUP BY VMT.BRANCH_ID,\n" +
                         "                       VMT.LOCATION_ID,\n" +
                         "                       VMT.PROJECT_ID,\n" +
                         "                       VMT.VOUCHER_ID) AS CB\n" +
                         "    ON CB.BRANCH_ID = MT.BRANCH_ID\n" +
                         "   AND CB.PROJECT_ID = MT.PROJECT_ID\n" +
                         "   AND CB.LOCATION_ID = MT.LOCATION_ID\n" +
                         "   AND CB.VOUCHER_ID = MT.VOUCHER_ID\n" +
                         " WHERE MT.STATUS = 1\n" +
                         "   AND ML.GROUP_ID NOT IN (12, 13)\n" +
                         "   AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                         "   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO AND MT.PROJECT_ID IN (?PROJECT_ID) { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }\n" +
                         "   AND MT.VOUCHER_TYPE IN ('RC', 'PY')\n" +
                         "   AND MT.VOUCHER_SUB_TYPE NOT IN ('FD')\n" +
                         "   AND VT.TRANS_MODE = 'DR'\n" +
                         "   AND VT.AMOUNT > ?AMOUNT";
                        break;
                    }
                case ReportSQLCommand.Masters.FetchGeneralateMapUnmapLedger:
                    {
                        query = "SELECT ML.LEDGER_NAME,CONCAT(CL.CON_LEDGER_NAME,'  ', CL.CON_LEDGER_CODE) AS CON_LEDGER_NAME,\n" +
                        "CONCAT(CLL.CON_LEDGER_NAME,'  ', CLL.CON_LEDGER_CODE) AS MASTER_NAME, IF(IFNULL(CL.CON_LEDGER_NAME,'') ='', 'UNMAPPED LEDGERS','MAPPED LEDGERS') AS MAP\n" +
                        "FROM MASTER_LEDGER ML LEFT JOIN CONGREGATION_LEDGER_MAP CLM ON CLM.LEDGER_ID = ML.LEDGER_ID\n" +
                        "LEFT JOIN CONGREGATION_LEDGER CL ON CLM.CON_LEDGER_ID =CL.CON_LEDGER_ID\n" +
                        "LEFT JOIN CONGREGATION_LEDGER CLL ON CLL.CON_LEDGER_ID = CL.CON_MAIN_PARENT_ID\n" +
                        "WHERE ML.IS_BRANCH_LEDGER =0  ORDER BY CL.CON_LEDGER_NAME,ML.LEDGER_NAME;";

                        break;
                    }
                case ReportSQLCommand.Masters.DetailsOfAllInstitution:
                    {
                        #region Old Query

                        //query = "SELECT BRANCH_ID,\n" +
                        //        "       BRANCH_OFFICE_NAME,\n" +
                        //        "       SOCIETYNAME,\n" +
                        //        "       TR.PROJECT_ID,\n" +
                        //        "       PROJECT_CODE,\n" +
                        //        "       PROJECT,\n" +
                        //        "       IF(OPBALANCE IS NULL, 0.00, OPBALANCE) AS OPBALANCE,\n" +
                        //        "      FORMAT(IF(INCOME IS NULL, 0.00, INCOME),2) AS INCOME,\n" +
                        //        "      FORMAT(IF(EXPENDITURE IS NULL, 0.00, EXPENDITURE),2) AS EXPENDITURE,\n" +
                        //        "       IF(INCOME IS NULL, 0.00, INCOME) -\n" +
                        //        "       IF(EXPENDITURE IS NULL, 0.00, EXPENDITURE) AS FINANCIAL_POSITION_BAL,\n" +
                        //        "       IF(FROM_THE_PROVINCE IS NULL, 0.00, FROM_THE_PROVINCE) AS FROM_THE_PROVINCE,\n" +
                        //        "       IF(TO_THE_PROVINCE IS NULL, 0.00, TO_THE_PROVINCE) AS TO_THE_PROVINCE,\n" +
                        //        "       FORMAT((IF(INCOME IS NULL, 0.00, INCOME) -\n" +
                        //        "              IF(EXPENDITURE IS NULL, 0.00, EXPENDITURE) +\n" +
                        //        "              IF(OPBALANCE IS NULL, 0.00, OPBALANCE) +\n" +
                        //        "              IF(FROM_THE_PROVINCE IS NULL, 0.00, FROM_THE_PROVINCE)) -\n" +
                        //        "              IF(TO_THE_PROVINCE IS NULL, 0.00, TO_THE_PROVINCE),2) AS CLOSING_BALANCE\n" +
                        //        "  FROM (SELECT LEDGER_ID,\n" +
                        //        "               SOCIETYNAME,\n" +
                        //        "               BRANCH_OFFICE_NAME,\n" +
                        //        "               PROJECT_ID,\n" +
                        //        "               PROJECT_CODE,\n" +
                        //        "               PROJECT,\n" +
                        //        "               TRANS_MODE,\n" +
                        //        "               BRANCH_ID,\n" +
                        //        "               GROUP_CONCAT(INCOME ORDER BY PROJECT_ID) AS INCOME,\n" +
                        //        "               GROUP_CONCAT(EXPENDITURE ORDER BY PROJECT_ID) AS EXPENDITURE,\n" +
                        //        "               SUM(FROM_THE_PROVINCE) AS FROM_THE_PROVINCE,\n" +
                        //        "               SUM(TO_THE_PROVINCE) AS TO_THE_PROVINCE\n" +
                        //        "          FROM (SELECT LEDGER_ID,\n" +
                        //        "                       SOCIETYNAME,\n" +
                        //        "                       BRANCH_OFFICE_NAME,\n" +
                        //        "                       GROUP_ID,\n" +
                        //        "                       PROJECT_CODE,\n" +
                        //        "                       PROJECT,\n" +
                        //        "                       GROUP_CODE,\n" +
                        //        "                       LEDGER_GROUP,\n" +
                        //        "                       LEDGER_CODE,\n" +
                        //        "                       LEDGER_NAME,\n" +
                        //        "                       BRANCH_ID,\n" +
                        //        "                       PROJECT_ID,\n" +
                        //        "                       TRANS_MODE,\n" +
                        //        "                       SUM(FROM_THE_PROVINCE) AS FROM_THE_PROVINCE,\n" +
                        //        "                       SUM(INCOME) AS INCOME,\n" +
                        //        "                       SUM(EXPENDITURE) AS EXPENDITURE,\n" +
                        //        "                       SUM(TO_THE_PROVINCE) AS TO_THE_PROVINCE\n" +
                        //        "                  FROM (SELECT ML.LEDGER_ID,\n" +
                        //        "                               SOCIETYNAME,\n" +
                        //        "                               BRANCH_OFFICE_NAME,\n" +
                        //        "                               ML.GROUP_ID,\n" +
                        //        "                               MP.PROJECT_CODE,\n" +
                        //        "                               MP.PROJECT,\n" +
                        //        "                               LG.GROUP_CODE,\n" +
                        //        "                               LG.LEDGER_GROUP,\n" +
                        //        "                               ML.LEDGER_CODE,\n" +
                        //        "                               ML.LEDGER_NAME,\n" +
                        //        "                               VT.BRANCH_ID,\n" +
                        //        "                               MT.PROJECT_ID,\n" +
                        //        "                               VT.TRANS_MODE,\n" +
                        //        "                               CASE\n" +
                        //        "                                 WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                        //        "                                  SUM(VT.AMOUNT)\n" +
                        //        "                               END AS INCOME,\n" +
                        //        "                               CASE\n" +
                        //        "                                 WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                        //        "                                  SUM(VT.AMOUNT)\n" +
                        //        "                               END as EXPENDITURE,\n" +
                        //        "                               CASE\n" +
                        //        "                                 WHEN ML.LEDGER_ID IN\n" +
                        //        "                                      (?SUBSIDY_LEDGER_ID) THEN\n" +
                        //        "                                  SUM(VT.AMOUNT)\n" +
                        //        "                               END FROM_THE_PROVINCE,\n" +
                        //        "                               CASE\n" +
                        //        "                                 WHEN ML.LEDGER_ID IN\n" +
                        //        "                                      (?CONTRIBUTION_LEDGER_ID) THEN\n" +
                        //        "                                  SUM(VT.AMOUNT)\n" +
                        //        "                               END TO_THE_PROVINCE\n" +
                        //        "                          FROM MASTER_LEDGER_GROUP LG\n" +
                        //        "                          LEFT JOIN MASTER_LEDGER ML\n" +
                        //        "                            ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                          LEFT JOIN VOUCHER_TRANS VT\n" +
                        //        "                            ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                        //        "                          LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                        //        "                            ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                        //        "                           AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                        //        "                           AND MT.BRANCH_ID = VT.BRANCH_ID\n" +
                        //        "                          LEFT JOIN MASTER_PROJECT MP\n" +
                        //        "                            ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                        //        "                          LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                        //        "                            ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                        //        "                          LEFT JOIN BRANCH_OFFICE BO\n" +
                        //        "                            ON BO.BRANCH_OFFICE_ID = VT.BRANCH_ID\n" +
                        //        "                         WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                         {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID) }\n" +
                        //        "                           AND MT.STATUS = 1\n" +
                        //        "                           AND MP.DIVISION_ID IN (?DIVISION_ID)\n" +
                        //        "                           AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                        //        "                           AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                        //        "                         GROUP BY MT.PROJECT_ID, VT.TRANS_MODE, LEDGER_ID\n" +
                        //        "                         ORDER BY LEDGER_ID) AS T\n" +
                        //        "                 GROUP BY PROJECT_ID, TRANS_MODE\n" +
                        //        "                 ORDER BY PROJECT) AS TT\n" +
                        //        "         GROUP BY PROJECT_ID\n" +
                        //        "         ORDER BY PROJECT_ID) as TR\n" +
                        //        "  LEFT JOIN (SELECT OP.PROJECT_ID,\n" +
                        //        "                    IF(SUM(AMOUNT_DR) > SUM(AMOUNT_CR),\n" +
                        //        "                       SUM(AMOUNT_DR) - SUM(AMOUNT_CR),\n" +
                        //        "                       - (SUM(AMOUNT_CR) - SUM(AMOUNT_DR))) AS OPBALANCE,\n" +
                        //        "                    TRANS_MODE\n" +
                        //        "               FROM (SELECT LG.GROUP_ID,\n" +
                        //        "                            LG.GROUP_CODE,\n" +
                        //        "                            LG.LEDGER_GROUP,\n" +
                        //        "                            PROJECT_ID,\n" +
                        //        "                            ABS(SUM(CASE\n" +
                        //        "                                      WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //        "                                       LB2.AMOUNT\n" +
                        //        "                                      ELSE\n" +
                        //        "                                       -LB2.AMOUNT\n" +
                        //        "                                    END)) AS AMOUNT,\n" +
                        //        "                            SUM(CASE\n" +
                        //        "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //        "                                   LB2.AMOUNT\n" +
                        //        "                                  ELSE\n" +
                        //        "                                   0\n" +
                        //        "                                END) AS AMOUNT_DR,\n" +
                        //        "                            SUM(CASE\n" +
                        //        "                                  WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                        //        "                                   LB2.AMOUNT\n" +
                        //        "                                  ELSE\n" +
                        //        "                                   0\n" +
                        //        "                                END) AS AMOUNT_CR,\n" +
                        //        "                            CASE\n" +
                        //        "                              WHEN (SUM(CASE\n" +
                        //        "                                          WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                        //        "                                           LB2.AMOUNT\n" +
                        //        "                                          ELSE\n" +
                        //        "                                           -LB2.AMOUNT\n" +
                        //        "                                        END) >= 0) THEN\n" +
                        //        "                               'DR'\n" +
                        //        "                              ELSE\n" +
                        //        "                               'CR'\n" +
                        //        "                            END AS TRANS_MODE\n" +
                        //        "                       FROM MASTER_LEDGER AS ML\n" +
                        //        "                      INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                        //        "                         ON ML.GROUP_ID = LG.GROUP_ID\n" +
                        //        "                      INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                        //        "                                        LB.BRANCH_ID,\n" +
                        //        "                                        LB.PROJECT_ID,\n" +
                        //        "                                        LB.LEDGER_ID,\n" +
                        //        "                                        LB.AMOUNT,\n" +
                        //        "                                        LB.TRANS_MODE\n" +
                        //        "                                   FROM LEDGER_BALANCE AS LB\n" +
                        //        "                                   LEFT JOIN (SELECT LBA.BRANCH_ID,\n" +
                        //        "                                                    LBA.PROJECT_ID,\n" +
                        //        "                                                    LBA.LEDGER_ID,\n" +
                        //        "                                                    MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                        //        "                                               FROM LEDGER_BALANCE LBA\n" +
                        //        "                                              WHERE 1 = 1\n" +
                        //        "                                                AND LBA.BALANCE_DATE <=?DATE_AS_ON\n" +
                        //        "                                              GROUP BY LBA.BRANCH_ID,\n" +
                        //        "                                                       LBA.PROJECT_ID,\n" +
                        //        "                                                       LBA.LEDGER_ID) AS LB1\n" +
                        //        "                                     ON LB.BRANCH_ID = LB1.BRANCH_ID\n" +
                        //        "                                    AND LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                        //        "                                    AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                        //        "                                  WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                        //        "                                 {   AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)  }\n" +
                        //        "                                    AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                        //        "                         ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                        //        "                      WHERE LG.GROUP_ID IN (13, 12)\n" +
                        //        "                        AND ML.STATUS = 0\n" +
                        //        "                      GROUP BY PROJECT_ID,LG.GROUP_ID, LG.GROUP_CODE, LG.LEDGER_GROUP) OP\n" +
                        //        "              GROUP BY PROJECT_ID) AS OP\n" +
                        //        "    ON TR.PROJECT_ID = OP.PROJECT_ID;";

                        #endregion

                        query = "SELECT BRANCH_ID,\n" +
                                "       BRANCH_OFFICE_NAME,\n" +
                                "       SOCIETYNAME,\n" +
                                "       TR.PROJECT_ID,\n" +
                                "       PROJECT_CODE,\n" +
                                "       PROJECT,\n" +
                                "       IF(OPBALANCE IS NULL, 0.00, OPBALANCE) AS OPBALANCE,\n" +
                            //  "       FORMAT(IF(INCOME IS NULL, 0.00, INCOME), 2) AS INCOME,\n" +
                                "       IF(INCOME IS NULL, 0.00, INCOME) AS INCOME,\n" +
                                "       IF(EXPENDITURE IS NULL, 0.00, EXPENDITURE) AS EXPENDITURE,\n" +
                                "       IF(INCOME IS NULL, 0.00, INCOME) -\n" +
                                "       IF(EXPENDITURE IS NULL, 0.00, EXPENDITURE) AS FINANCIAL_POSITION_BAL,\n" +
                                "       IF(FROM_THE_PROVINCE IS NULL, 0.00, FROM_THE_PROVINCE) AS FROM_THE_PROVINCE,\n" +
                                "       IF(TO_THE_PROVINCE IS NULL, 0.00, TO_THE_PROVINCE) AS TO_THE_PROVINCE,\n" +
                                "       (IF(INCOME IS NULL, 0.00, INCOME) -\n" +
                                "              IF(EXPENDITURE IS NULL, 0.00, EXPENDITURE) +\n" +
                                "              IF(OPBALANCE IS NULL, 0.00, OPBALANCE) +\n" +
                                "              IF(FROM_THE_PROVINCE IS NULL, 0.00, FROM_THE_PROVINCE)) -\n" +
                                "              IF(TO_THE_PROVINCE IS NULL, 0.00, TO_THE_PROVINCE) AS CLOSING_BALANCE\n" +
                                "  FROM (SELECT LEDGER_ID,\n" +
                                "               SOCIETYNAME,\n" +
                                "               BRANCH_OFFICE_NAME,\n" +
                                "               PROJECT_ID,\n" +
                                "               PROJECT_CODE,\n" +
                                "               PROJECT,\n" +
                                "               TRANS_MODE,\n" +
                                "               BRANCH_ID,\n" +
                            //   "               GROUP_CONCAT(INCOME ORDER BY PROJECT_ID) AS INCOME,\n" + 
                            //   "               GROUP_CONCAT(EXPENDITURE ORDER BY PROJECT_ID) AS EXPENDITURE,\n" + 
                                "               SUM(INCOME) AS INCOME,\n" +
                                "               SUM(EXPENDITURE) AS EXPENDITURE,\n" +
                                "               SUM(FROM_THE_PROVINCE) AS FROM_THE_PROVINCE,\n" +
                                "               SUM(TO_THE_PROVINCE) AS TO_THE_PROVINCE\n" +
                                "          FROM (SELECT LEDGER_ID,\n" +
                                "                       SOCIETYNAME,\n" +
                                "                       BRANCH_OFFICE_NAME,\n" +
                                "                       GROUP_ID,\n" +
                                "                       PROJECT_CODE,\n" +
                                "                       PROJECT,\n" +
                                "                       GROUP_CODE,\n" +
                                "                       LEDGER_GROUP,\n" +
                                "                       LEDGER_CODE,\n" +
                                "                       LEDGER_NAME,\n" +
                                "                       BRANCH_ID,\n" +
                                "                       PROJECT_ID,\n" +
                                "                       TRANS_MODE,\n" +
                                "                       SUM(FROM_THE_PROVINCE) AS FROM_THE_PROVINCE,\n" +
                                "                       SUM(INCOME) AS INCOME,\n" +
                                "                       SUM(EXPENDITURE) AS EXPENDITURE,\n" +
                                "                       SUM(TO_THE_PROVINCE) AS TO_THE_PROVINCE\n" +
                                "                  FROM (SELECT T.LEDGER_ID,\n" +
                                "                               MIP.SOCIETYNAME,\n" +
                                "                               BO.BRANCH_OFFICE_NAME,\n" +
                                "                               T.GROUP_ID,\n" +
                                "                               T.PROJECT_CODE,\n" +
                                "                               MP.PROJECT,\n" +
                                "                               T.GROUP_CODE,\n" +
                                "                               T.LEDGER_GROUP,\n" +
                                "                               T.LEDGER_CODE,\n" +
                                "                               T.LEDGER_NAME,\n" +
                                "                               T.BRANCH_ID,\n" +
                                "                               MP.PROJECT_ID,\n" +
                                "                               T.TRANS_MODE,\n" +
                                "                               IFNULL(T.INCOME, 0.00) AS INCOME,\n" +
                                "                               IFNULL(T.EXPENDITURE, 0.00) AS EXPENDITURE,\n" +
                                "                               IFNULL(T.FROM_THE_PROVINCE, 0.00) AS FROM_THE_PROVINCE,\n" +
                                "                               IFNULL(T.TO_THE_PROVINCE, 0.00) AS TO_THE_PROVINCE\n" +
                                "                          FROM (SELECT ML.LEDGER_ID,\n" +
                                "                                       SOCIETYNAME,\n" +
                                "                                       BRANCH_OFFICE_NAME,\n" +
                                "                                       ML.GROUP_ID,\n" +
                                "                                       MP.PROJECT_CODE,\n" +
                                "                                       MP.PROJECT,\n" +
                                "                                       LG.GROUP_CODE,\n" +
                                "                                       LG.LEDGER_GROUP,\n" +
                                "                                       ML.LEDGER_CODE,\n" +
                                "                                       ML.LEDGER_NAME,\n" +
                                "                                       VT.BRANCH_ID,\n" +
                                "                                       MT.PROJECT_ID,\n" +
                                "                                       VT.TRANS_MODE,\n" +
                                "                                       CASE\n" +
                                "                                         WHEN VT.TRANS_MODE = 'CR' THEN\n" +
                                "                                          SUM(VT.AMOUNT)\n" +
                                "                                       END AS INCOME,\n" +
                                "                                       CASE\n" +
                                "                                         WHEN VT.TRANS_MODE = 'DR' THEN\n" +
                                "                                          SUM(VT.AMOUNT)\n" +
                                "                                       END as EXPENDITURE,\n" +
                                "                                       CASE\n" +
                                "                                         WHEN ML.LEDGER_ID IN (?SUBSIDY_LEDGER_ID) THEN\n" +
                                "                                          SUM(VT.AMOUNT)\n" +
                                "                                       END FROM_THE_PROVINCE,\n" +
                                "                                       CASE\n" +
                                "                                         WHEN ML.LEDGER_ID IN (?CONTRIBUTION_LEDGER_ID) THEN\n" +
                                "                                          SUM(VT.AMOUNT)\n" +
                                "                                       END TO_THE_PROVINCE\n" +
                                "                                  FROM MASTER_LEDGER_GROUP LG\n" +
                                "                                  LEFT JOIN MASTER_LEDGER ML\n" +
                                "                                    ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                                  LEFT JOIN VOUCHER_TRANS VT\n" +
                                "                                    ON VT.LEDGER_ID = ML.LEDGER_ID\n" +
                                "                                  LEFT JOIN VOUCHER_MASTER_TRANS MT\n" +
                                "                                    ON VT.VOUCHER_ID = MT.VOUCHER_ID\n" +
                                "                                   AND VT.LOCATION_ID = MT.LOCATION_ID\n" +
                                "                                   AND MT.BRANCH_ID = VT.BRANCH_ID\n" +
                                "                                  LEFT JOIN MASTER_PROJECT MP\n" +
                                "                                    ON MP.PROJECT_ID = MT.PROJECT_ID\n" +
                                "                                  LEFT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                                    ON MIP.CUSTOMERID = MP.CUSTOMERID\n" +
                                "                                  LEFT JOIN BRANCH_OFFICE BO\n" +
                                "                                    ON BO.BRANCH_OFFICE_ID = VT.BRANCH_ID\n" +
                                "                                 WHERE MT.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                                 {  AND VT.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                                   AND MT.STATUS = 1\n" +
                                "                                   AND MP.DIVISION_ID IN (?DIVISION_ID)\n" +
                                "                                   AND VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                                "                                   AND LG.GROUP_ID NOT IN (12, 13, 14)\n" +
                                "                                 GROUP BY MT.PROJECT_ID,\n" +
                                "                                          VT.TRANS_MODE,\n" +
                                "                                          LEDGER_ID) AS T\n" +
                                "                         RIGHT JOIN MASTER_PROJECT MP\n" +
                                "                            ON T.PROJECT_ID = MP.PROJECT_ID\n" +
                                "                         RIGHT JOIN MASTER_INSTI_PERFERENCE MIP\n" +
                                "                            ON MP.CUSTOMERID = MIP.CUSTOMERID\n" +
                                "                         RIGHT JOIN PROJECT_BRANCH PB\n" +
                                "                            ON MP.PROJECT_ID = PB.PROJECT_ID\n" +
                                "                         INNER JOIN BRANCH_OFFICE BO\n" +
                                "                            ON PB.BRANCH_ID = BO.BRANCH_OFFICE_ID\n" +
                                "                         WHERE MP.PROJECT_ID IN (?PROJECT_ID)) AS T\n" +
                                "                 GROUP BY PROJECT_ID, TRANS_MODE\n" +
                                "                 ORDER BY PROJECT) AS TT\n" +
                                "         GROUP BY PROJECT_ID\n" +
                                "         ORDER BY PROJECT_ID) as TR\n" +
                                "  LEFT JOIN (SELECT OP.PROJECT_ID,\n" +
                                "                    IF(SUM(AMOUNT_DR) > SUM(AMOUNT_CR),\n" +
                                "                       SUM(AMOUNT_DR) - SUM(AMOUNT_CR),\n" +
                                "                       - (SUM(AMOUNT_CR) - SUM(AMOUNT_DR))) AS OPBALANCE,\n" +
                                "                    TRANS_MODE\n" +
                                "               FROM (SELECT LG.GROUP_ID,\n" +
                                "                            LG.GROUP_CODE,\n" +
                                "                            LG.LEDGER_GROUP,\n" +
                                "                            PROJECT_ID,\n" +
                                "                            ABS(SUM(CASE\n" +
                                "                                      WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                                "                                       LB2.AMOUNT\n" +
                                "                                      ELSE\n" +
                                "                                       -LB2.AMOUNT\n" +
                                "                                    END)) AS AMOUNT,\n" +
                                "                            SUM(CASE\n" +
                                "                                  WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                                "                                   LB2.AMOUNT\n" +
                                "                                  ELSE\n" +
                                "                                   0\n" +
                                "                                END) AS AMOUNT_DR,\n" +
                                "                            SUM(CASE\n" +
                                "                                  WHEN LB2.TRANS_MODE = 'CR' THEN\n" +
                                "                                   LB2.AMOUNT\n" +
                                "                                  ELSE\n" +
                                "                                   0\n" +
                                "                                END) AS AMOUNT_CR,\n" +
                                "                            CASE\n" +
                                "                              WHEN (SUM(CASE\n" +
                                "                                          WHEN LB2.TRANS_MODE = 'DR' THEN\n" +
                                "                                           LB2.AMOUNT\n" +
                                "                                          ELSE\n" +
                                "                                           -LB2.AMOUNT\n" +
                                "                                        END) >= 0) THEN\n" +
                                "                               'DR'\n" +
                                "                              ELSE\n" +
                                "                               'CR'\n" +
                                "                            END AS TRANS_MODE\n" +
                                "                       FROM MASTER_LEDGER AS ML\n" +
                                "                      INNER JOIN MASTER_LEDGER_GROUP AS LG\n" +
                                "                         ON ML.GROUP_ID = LG.GROUP_ID\n" +
                                "                      INNER JOIN (SELECT LB.BALANCE_DATE,\n" +
                                "                                        LB.BRANCH_ID,\n" +
                                "                                        LB.PROJECT_ID,\n" +
                                "                                        LB.LEDGER_ID,\n" +
                                "                                        LB.AMOUNT,\n" +
                                "                                        LB.TRANS_MODE\n" +
                                "                                   FROM LEDGER_BALANCE AS LB\n" +
                                "                                   LEFT JOIN (SELECT LBA.BRANCH_ID,\n" +
                                "                                                    LBA.PROJECT_ID,\n" +
                                "                                                    LBA.LEDGER_ID,\n" +
                                "                                                    MAX(LBA.BALANCE_DATE) AS BAL_DATE\n" +
                                "                                               FROM LEDGER_BALANCE LBA\n" +
                                "                                              WHERE 1 = 1\n" +
                                "                                                AND LBA.BALANCE_DATE <=?DATE_AS_ON\n" +
                                "                                              GROUP BY LBA.BRANCH_ID,\n" +
                                "                                                       LBA.PROJECT_ID,\n" +
                                "                                                       LBA.LEDGER_ID) AS LB1\n" +
                                "                                     ON LB.BRANCH_ID = LB1.BRANCH_ID\n" +
                                "                                    AND LB.PROJECT_ID = LB1.PROJECT_ID\n" +
                                "                                    AND LB.LEDGER_ID = LB1.LEDGER_ID\n" +
                                "                                  WHERE LB.PROJECT_ID IN (?PROJECT_ID)\n" +
                                "                                   { AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                "                                    AND LB.BALANCE_DATE = LB1.BAL_DATE) LB2\n" +
                                "                         ON ML.LEDGER_ID = LB2.LEDGER_ID\n" +
                                "                      WHERE LG.GROUP_ID IN (13, 12, 14)\n" +
                                "                        AND ML.STATUS = 0\n" +
                                "                      GROUP BY PROJECT_ID,\n" +
                                "                               LG.GROUP_ID,\n" +
                                "                               LG.GROUP_CODE,\n" +
                                "                               LG.LEDGER_GROUP) OP\n" +
                                "              GROUP BY PROJECT_ID) AS OP\n" +
                                "    ON TR.PROJECT_ID = OP.PROJECT_ID;";


                        break;
                    }

                case ReportSQLCommand.Masters.BranchBankList:
                    {
                        query = "SELECT BO.BRANCH_OFFICE_NAME AS BRANCH_OFFICE_NAME,\n" +
                                "       MP.PROJECT AS PROJECT,\n" +
                                "       CONCAT(MB.BANK, ' - ', MB.BRANCH, ' - ', ML.LEDGER_NAME) AS BANK_ACCOUNT\n" +
                                "  FROM MASTER_LEDGER ML\n" +
                                "\n" +
                                " INNER JOIN PROJECT_LEDGER PL\n" +
                                "    ON ML.LEDGER_ID = PL.LEDGER_ID\n" +
                                "  LEFT JOIN MASTER_PROJECT MP\n" +
                                "    ON MP.PROJECT_ID = PL.PROJECT_ID\n" +
                                "  LEFT JOIN PROJECT_BRANCH PB\n" +
                                "    ON MP.PROJECT_ID = PB.PROJECT_ID\n" +
                                "  LEFT JOIN BRANCH_OFFICE BO\n" +
                                "    ON PB.BRANCH_ID = BO.BRANCH_OFFICE_ID\n" +
                                "  LEFT JOIN MASTER_BANK_ACCOUNT MBA\n" +
                                "    ON ML.LEDGER_ID = MBA.LEDGER_ID\n" +
                                "  LEFT JOIN MASTER_BANK MB\n" +
                                "    ON MBA.BANK_ID = MB.BANK_ID\n" +
                                " WHERE ML.GROUP_ID IN (12)\n" +
                                " {  AND PB.BRANCH_ID IN (?BRANCH_OFFICE_ID)}\n" +
                                " GROUP BY LEDGER_NAME\n" +
                                " ORDER BY BRANCH_OFFICE_NAME, PROJECT;";
                        break;
                    }
                case ReportSQLCommand.Masters.FetchBranchBalance:
                    {
                        query = @"SELECT BO.BRANCH_OFFICE_ID, BO.BRANCH_OFFICE_NAME, MP.PROJECT, PL.LEDGER_NAME, PL.SORT_ORDER,
                                    IFNULL(OP.OP_CASH_AMOUNT,0) AS OP_CASH_AMOUNT, IFNULL(OP.OP_BANK_AMOUNT,0) AS OP_BANK_AMOUNT, IFNULL(OP.OP_FD_AMOUNT,0) AS OP_FD_AMOUNT,
                                    IFNULL(RP.RECEIPT,0) AS RC_AMOUNT, IFNULL(RP.PAYMENT,0) AS PY_AMOUNT, 
                                    IFNULL(CL.CL_CASH_AMOUNT,0) AS CL_CASH_AMOUNT, IFNULL(CL.CL_BANK_AMOUNT,0) AS CL_BANK_AMOUNT, IFNULL(CL.CL_FD_AMOUNT,0) AS CL_FD_AMOUNT,
                                    MP.DATE_CLOSED
                                    FROM PROJECT_BRANCH PB
                                    INNER JOIN BRANCH_OFFICE BO ON BO.BRANCH_OFFICE_ID = PB.BRANCH_ID
                                    INNER JOIN MASTER_PROJECT MP ON MP.PROJECT_ID = PB.PROJECT_ID {AND MP.PROJECT_ID IN (?PROJECT_ID)} { AND MP.CUSTOMERID IN (?LEGAL_ENTITY_ID) }
                                    INNER JOIN (SELECT PL.PROJECT_ID, IF(ML.GROUP_ID=13, 1, IF(ML.GROUP_ID = 12, 2, 3)) AS SORT_ORDER, PL.LEDGER_ID, 
                                            IF(ML.GROUP_ID = 12, CONCAT(ML.LEDGER_NAME, ' (', MB.BANK, ' - ', MB.BRANCH, ')'), ML.LEDGER_NAME ) AS LEDGER_NAME
                                            FROM PROJECT_LEDGER PL
                                            INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = PL.LEDGER_ID AND ML.GROUP_ID IN (12, 13, 14)
                                            LEFT JOIN MASTER_BANK_ACCOUNT MBA ON MBA.LEDGER_ID = ML.LEDGER_ID    
                                            LEFT JOIN MASTER_BANK MB ON MB.BANK_ID = MBA.BANK_ID 
                                            WHERE 1 = 1 {AND PL.PROJECT_ID IN (?PROJECT_ID)} 
                                            GROUP BY PL.PROJECT_ID, PL.LEDGER_ID) AS PL ON PL.PROJECT_ID = PB.PROJECT_ID 
                                    LEFT JOIN (SELECT VM.BRANCH_ID, VM.PROJECT_ID, CB.LEDGER_ID,
                                              SUM(IF(VT.TRANS_MODE ='CR', VT.AMOUNT, 0)) AS RECEIPT, SUM(IF(VT.TRANS_MODE ='DR', VT.AMOUNT, 0)) AS PAYMENT
                                              FROM VOUCHER_MASTER_TRANS VM
                                              INNER JOIN VOUCHER_TRANS VT ON VT.BRANCH_ID = VM.BRANCH_ID
                                                AND VT.VOUCHER_ID = VM.VOUCHER_ID AND  VT.LOCATION_ID = VM.LOCATION_ID
                                              INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID =  VT.LEDGER_ID AND ML.GROUP_ID NOT IN (12, 13, 14)
                                              
                                              INNER JOIN (SELECT VM.VOUCHER_ID, VM.BRANCH_ID, VM.PROJECT_ID, VM.LOCATION_ID, VT.LEDGER_ID
                                                FROM VOUCHER_MASTER_TRANS VM
                                                INNER JOIN VOUCHER_TRANS VT ON VT.BRANCH_ID = VM.BRANCH_ID
                                                    AND VT.VOUCHER_ID = VM.VOUCHER_ID AND  VT.LOCATION_ID = VM.LOCATION_ID
                                                INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID =  VT.LEDGER_ID AND ML.GROUP_ID IN (12, 13, 14)
                                                WHERE VM.STATUS=1 AND VM.BRANCH_ID IN (?BRANCH_OFFICE_ID) {AND VM.PROJECT_ID IN (?PROJECT_ID)} AND VM.VOUCHER_TYPE IN ('RC', 'PY')
                                                    AND VM.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                                                    GROUP BY VM.VOUCHER_ID, VM.BRANCH_ID, VM.PROJECT_ID, VM.LOCATION_ID, VT.LEDGER_ID) AS CB ON CB.BRANCH_ID = VM.BRANCH_ID
                                                AND CB.VOUCHER_ID = VM.VOUCHER_ID AND CB.PROJECT_ID = VM.PROJECT_ID AND  CB.LOCATION_ID = VM.LOCATION_ID
                                              WHERE VM.STATUS=1 AND VM.BRANCH_ID IN (?BRANCH_OFFICE_ID) {AND VM.PROJECT_ID IN (?PROJECT_ID)} AND VM.VOUCHER_TYPE IN ('RC', 'PY') 
                                              AND VM.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO
                                              GROUP BY VM.BRANCH_ID, VM.PROJECT_ID, CB.LEDGER_ID) AS RP ON RP.BRANCH_ID = BO.BRANCH_OFFICE_ID 
                                                    AND MP.PROJECT_ID = RP.PROJECT_ID AND RP.LEDGER_ID = PL.LEDGER_ID
                                    LEFT JOIN (SELECT LB.BRANCH_ID, LB.PROJECT_ID, ML.LEDGER_ID,
                                                SUM( IF(ML.GROUP_ID IN (13), IF(LB.TRANS_MODE ='DR', LB.AMOUNT, -LB.AMOUNT) , 0)) AS OP_CASH_AMOUNT,
                                                SUM( IF(ML.GROUP_ID IN (12), IF(LB.TRANS_MODE ='DR', LB.AMOUNT, -LB.AMOUNT) , 0)) AS OP_BANK_AMOUNT,
                                                SUM( IF(ML.GROUP_ID IN (14), IF(LB.TRANS_MODE ='DR', LB.AMOUNT, -LB.AMOUNT) , 0)) AS OP_FD_AMOUNT
                                                FROM LEDGER_BALANCE LB
                                                INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = LB.LEDGER_ID AND ML.GROUP_ID IN (12, 13, 14)
                                                INNER JOIN (SELECT LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                                                FROM LEDGER_BALANCE LBA
                                                INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = LBA.LEDGER_ID
                                                WHERE 1 = 1 AND LBA.BALANCE_DATE < ?DATE_FROM AND LBA.BRANCH_ID IN (?BRANCH_OFFICE_ID) {AND LBA.PROJECT_ID IN (?PROJECT_ID)} AND ML.GROUP_ID IN (12, 13, 14)
                                                GROUP BY LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB_BAL ON
                                                     LB_BAL.BRANCH_ID = LB.BRANCH_ID AND LB_BAL.PROJECT_ID = LB.PROJECT_ID AND LB_BAL.LEDGER_ID = LB.LEDGER_ID AND LB_BAL.BAL_DATE = LB.BALANCE_DATE
                                                WHERE 1 = 1 {AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)} {AND LB.PROJECT_ID IN (?PROJECT_ID)} 
                                                GROUP BY LB.BRANCH_ID, LB.PROJECT_ID, ML.LEDGER_ID) AS OP ON OP.BRANCH_ID = BO.BRANCH_OFFICE_ID 
                                                    AND OP.PROJECT_ID = MP.PROJECT_ID AND OP.LEDGER_ID = PL.LEDGER_ID
                                    LEFT JOIN (SELECT LB.BRANCH_ID, LB.PROJECT_ID, ML.LEDGER_ID, 
                                                SUM( IF(ML.GROUP_ID IN (13), IF(LB.TRANS_MODE ='DR', LB.AMOUNT, -LB.AMOUNT) , 0)) AS CL_CASH_AMOUNT,
                                                SUM( IF(ML.GROUP_ID IN (12), IF(LB.TRANS_MODE ='DR', LB.AMOUNT, -LB.AMOUNT) , 0)) AS CL_BANK_AMOUNT,
                                                SUM( IF(ML.GROUP_ID IN (14), IF(LB.TRANS_MODE ='DR', LB.AMOUNT, -LB.AMOUNT) , 0)) AS CL_FD_AMOUNT
                                                FROM LEDGER_BALANCE LB
                                                INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = LB.LEDGER_ID AND ML.GROUP_ID IN (12, 13, 14)
                                                INNER JOIN (SELECT LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID, MAX(LBA.BALANCE_DATE) AS BAL_DATE
                                                FROM LEDGER_BALANCE LBA
                                                INNER JOIN MASTER_LEDGER ML ON ML.LEDGER_ID = LBA.LEDGER_ID
                                                WHERE 1 = 1 AND LBA.BALANCE_DATE <= ?DATE_TO AND LBA.BRANCH_ID IN (?BRANCH_OFFICE_ID) {AND LBA.PROJECT_ID IN (?PROJECT_ID)} AND ML.GROUP_ID IN (12, 13, 14)
                                                GROUP BY LBA.BRANCH_ID, LBA.PROJECT_ID, LBA.LEDGER_ID) AS LB_BAL ON
                                                     LB_BAL.BRANCH_ID = LB.BRANCH_ID AND LB_BAL.PROJECT_ID = LB.PROJECT_ID AND LB_BAL.LEDGER_ID = LB.LEDGER_ID AND LB_BAL.BAL_DATE = LB.BALANCE_DATE
                                                WHERE 1 = 1 {AND LB.BRANCH_ID IN (?BRANCH_OFFICE_ID)} {AND LB.PROJECT_ID IN (?PROJECT_ID)} 
                                                GROUP BY LB.BRANCH_ID, LB.PROJECT_ID, ML.LEDGER_ID) AS CL ON CL.BRANCH_ID = BO.BRANCH_OFFICE_ID 
                                                        AND CL.PROJECT_ID = MP.PROJECT_ID AND CL.LEDGER_ID = PL.LEDGER_ID
                                                WHERE BO.BRANCH_OFFICE_ID IN (?BRANCH_OFFICE_ID) AND BO.STATUS = 2 {AND PB.PROJECT_ID IN (?PROJECT_ID)}
                                                AND ( (MP.DATE_CLOSED IS NULL OR MP.DATE_CLOSED >= ?DATE_TO) AND MP.DATE_STARTED <= ?DATE_FROM)";
                        break;
                    }
                case ReportSQLCommand.Masters.FetchBranchDatastatus:
                    {
                        //query = "SELECT CAST(CONCAT(LEFT(MONTHNAME(MONTH_YEAR), 3), '-', YEAR(MONTH_YEAR)) AS CHAR) AS MONTH_NAME, T.BRANCH_OFFICE_CODE,\n" +
                        //"       T.BRANCH_OFFICE_NAME,\n" +
                        //"       T.PROJECT,\n" +
                        //"       T.MONTH_YEAR,\n" +
                        //"       IF(MT.PROJECT_ID IS NULL, 0, MT.RESULT) RESULT\n" +
                        //"  FROM (SELECT BRANCH_ID,\n" +
                        //"               PROJECT_ID,\n" +
                        //"               BRANCH_OFFICE_CODE,\n" +
                        //"               BRANCH_OFFICE_NAME,\n" +
                        //"               PROJECT,\n" +
                        //"               MONTH_YEAR,\n" +
                        //"               0 RESULT\n" +
                        //"          FROM (SELECT BO.BRANCH_OFFICE_CODE,\n" +
                        //"                       BO.BRANCH_OFFICE_NAME,\n" +
                        //"                       VMT.BRANCH_ID,\n" +
                        //"                       VMT.PROJECT_ID,\n" +
                        //"                       COUNT(VMT.VOUCHER_ID) AS RESULT,\n" +
                        //"                       DATE_FORMAT(VMT.VOUCHER_DATE, '%Y-%m-01') AS VOUCHER_DATE,\n" +
                        //"                       MP.PROJECT\n" +
                        //"                  FROM VOUCHER_MASTER_TRANS VMT\n" +
                        //"                  LEFT JOIN BRANCH_OFFICE BO\n" +
                        //"                    ON BO.BRANCH_OFFICE_ID = VMT.BRANCH_ID\n" +
                        //"                  LEFT JOIN MASTER_PROJECT MP\n" +
                        //"                    ON VMT.PROJECT_ID = MP.PROJECT_ID\n" +
                        //"                 WHERE VOUCHER_DATE BETWEEN ?DATE_FROM AND\n" +
                        //"                       ?DATE_TO\n" +
                        //"                   AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //"                 GROUP BY BRANCH_ID,\n" +
                        //"                          PROJECT,\n" +
                        //"                          DATE_FORMAT(VMT.VOUCHER_DATE, '%Y-%m-01')) AS MT\n" +
                        //"          JOIN (SELECT MONTH_YEAR, NO_OF_MONTH\n" +
                        //"                 FROM (SELECT (?DATE_FROM - INTERVAL\n" +
                        //"                               DAYOFMONTH(?DATE_FROM) - 1 DAY) +\n" +
                        //"                              INTERVAL NO_OF_MONTH MONTH AS MONTH_YEAR,\n" +
                        //"                              NO_OF_MONTH\n" +
                        //"                         FROM (SELECT @ROWNUM1 := @ROWNUM1 + 1 AS NO_OF_MONTH\n" +
                        //"                                 FROM (SELECT 1 UNION\n" +
                        //"                                               SELECT 2 UNION\n" +
                        //"                                                       SELECT 3 UNION\n" +
                        //"                                                               SELECT 4\n" +
                        //"\n" +
                        //"\n" +
                        //"                                       ) AS T1,\n" +
                        //"                                      (SELECT 1 UNION\n" +
                        //"                                               SELECT 2 UNION\n" +
                        //"                                                       SELECT 3 UNION\n" +
                        //"                                                               SELECT 4\n" +
                        //"\n" +
                        //"\n" +
                        //"                                       ) AS T2,\n" +
                        //"                                      (SELECT 1 UNION\n" +
                        //"                                               SELECT 2 UNION\n" +
                        //"                                                       SELECT 3 UNION\n" +
                        //"                                                               SELECT 4\n" +
                        //"\n" +
                        //"\n" +
                        //"                                       ) AS T3,\n" +
                        //"                                      (SELECT @ROWNUM1 := -1) AS T0) D1) AS T\n" +
                        //"                WHERE MONTH_YEAR BETWEEN ?DATE_FROM AND\n" +
                        //"                      ?DATE_TO) AS T\n" +
                        //"         GROUP BY BRANCH_ID, PROJECT, NO_OF_MONTH) AS T\n" +
                        //"  LEFT JOIN (SELECT BO.BRANCH_OFFICE_CODE,\n" +
                        //"                    BO.BRANCH_OFFICE_NAME,\n" +
                        //"                    VMT.BRANCH_ID,\n" +
                        //"                    VMT.PROJECT_ID,\n" +
                        //"                    COUNT(VMT.VOUCHER_ID) AS RESULT,\n" +
                        //"                    DATE_FORMAT(VMT.VOUCHER_DATE, '%Y-%m-01') AS VOUCHER_DATE,\n" +
                        //"                    MP.PROJECT\n" +
                        //"               FROM VOUCHER_MASTER_TRANS VMT\n" +
                        //"               LEFT JOIN BRANCH_OFFICE BO\n" +
                        //"                 ON BO.BRANCH_OFFICE_ID = VMT.BRANCH_ID\n" +
                        //"               LEFT JOIN MASTER_PROJECT MP\n" +
                        //"                 ON VMT.PROJECT_ID = MP.PROJECT_ID\n" +
                        //"              WHERE VOUCHER_DATE BETWEEN ?DATE_FROM AND\n" +
                        //"                    ?DATE_TO\n" +
                        //"                AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID)\n" +
                        //"              GROUP BY BRANCH_ID,\n" +
                        //"                       PROJECT,\n" +
                        //"                       DATE_FORMAT(VMT.VOUCHER_DATE, '%Y-%m-01')) AS MT\n" +
                        //"    ON MT.BRANCH_ID = T.BRANCH_ID\n" +
                        //"   AND MT.PROJECT_ID = T.PROJECT_ID\n" +
                        //"   AND YEAR(MT.VOUCHER_DATE) = YEAR(T.MONTH_YEAR)\n" +
                        //"   AND MONTH(MT.VOUCHER_DATE) = MONTH(T.MONTH_YEAR);";

                        // done by chinna a night 9 PM
                        query = "SELECT CAST(CONCAT(LEFT(MONTHNAME(MONTH_YEAR), 3), '-', YEAR(MONTH_YEAR)) AS CHAR) AS MONTH_NAME,\n" +
                           "       FNL.BRANCH_OFFICE_CODE,\n" +
                           "       FNL.BRANCH_OFFICE_NAME,\n" +
                           "       CASE\n" +
                           "         WHEN MONTH(FNL.MONTH_YEAR) = MONTH(FNL.VOUCHER_DATE) THEN\n" +
                           "          FNL.RESULT\n" +
                           "         ELSE\n" +
                           "          0\n" +
                           "       END AS RESULT,\n" +
                           "       MONTH_YEAR,\n" +
                           "       PROJECT\n" +
                           "  FROM (SELECT *\n" +
                           "          FROM (SELECT *\n" +
                           "                  FROM (SELECT (?DATE_FROM - INTERVAL\n" +
                           "                                DAYOFMONTH(?DATE_FROM) - 1 DAY) + INTERVAL NO_OF_MONTH MONTH AS MONTH_YEAR,\n" +
                           "                               NO_OF_MONTH\n" +
                           "                          FROM (SELECT @ROWNUM1 := @ROWNUM1 + 1 AS NO_OF_MONTH\n" +
                           "                                  FROM (SELECT 1 UNION\n" +
                           "                                                SELECT 2 UNION\n" +
                           "                                                        SELECT 3 UNION\n" +
                           "                                                                SELECT 4\n" +
                           "\n" +
                           "\n" +
                           "\n" +
                           "\n" +
                           "                                        ) AS T1,\n" +
                           "                                       (SELECT 1 UNION\n" +
                           "                                                SELECT 2 UNION\n" +
                           "                                                        SELECT 3 UNION\n" +
                           "                                                                SELECT 4\n" +
                           "\n" +
                           "\n" +
                           "\n" +
                           "\n" +
                           "                                        ) AS T2,\n" +
                           "                                       (SELECT 1 UNION\n" +
                           "                                                SELECT 2 UNION\n" +
                           "                                                        SELECT 3 UNION\n" +
                           "                                                                SELECT 4\n" +
                           "\n" +
                           "\n" +
                           "\n" +
                           "\n" +
                           "                                        ) AS T3,\n" +
                           "                                       (SELECT @ROWNUM1 := -1) AS T0) D1) AS T\n" +
                           "                 WHERE T.MONTH_YEAR BETWEEN ?DATE_FROM AND ?DATE_TO) AS T1\n" +
                           "          JOIN (SELECT BO.BRANCH_OFFICE_CODE,\n" +
                           "                      BO.BRANCH_OFFICE_NAME,\n" +
                           "                      MP.PROJECT,\n" +
                           "                      TTT.RESULT,\n" +
                           "                      TTT.INCHARGE_NAME,\n" +
                           "                      TTT.VOUCHER_DATE,\n" +
                           "                      TTT.BRANCH_ID\n" +
                           "                 FROM PROJECT_BRANCH PB\n" +
                           "                 LEFT JOIN MASTER_PROJECT MP\n" +
                           "                   ON PB.PROJECT_ID = MP.PROJECT_ID\n" +
                           "                 LEFT JOIN BRANCH_OFFICE BO\n" +
                           "                   ON BO.BRANCH_OFFICE_ID = PB.BRANCH_ID\n" +
                           "\n" +
                           "                 LEFT JOIN (SELECT BO.BRANCH_OFFICE_CODE,\n" +
                           "                                  BO.BRANCH_OFFICE_NAME,\n" +
                           "                                  VMT.BRANCH_ID,\n" +
                           "                                  COUNT(VMT.VOUCHER_ID) AS RESULT,\n" +
                           "                                  VMT.VOUCHER_DATE,\n" +
                           "                                  BO.INCHARGE_NAME,\n" +
                           "                                  PROJECT AS PRJ,\n" +
                           "                                  VMT.PROJECT_ID\n" +
                           "                             FROM VOUCHER_MASTER_TRANS VMT\n" +
                           "                             LEFT JOIN BRANCH_OFFICE BO\n" +
                           "                               ON BO.BRANCH_OFFICE_ID = VMT.BRANCH_ID\n" +
                           "                             LEFT JOIN MASTER_PROJECT MP\n" +
                           "                               ON VMT.PROJECT_ID = MP.PROJECT_ID\n" +
                           "                            WHERE VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO\n" +
                           "                             { AND VMT.BRANCH_ID IN (?BRANCH_OFFICE_ID) } \n" +
                           "                            GROUP BY BRANCH_ID,\n" +
                           "                                     PROJECT,\n" +
                           "                                     YEAR(VOUCHER_DATE),\n" +
                           "                                     MONTH(VOUCHER_DATE)) AS TTT\n" +
                           "                   on MP.PROJECT_ID = TTT.PROJECT_ID\n" +
                           "                  WHERE BO.BRANCH_OFFICE_ID IN (?BRANCH_OFFICE_ID) AND (DATE_CLOSED >= ?DATE_FROM OR DATE_CLOSED IS NULL) GROUP BY PROJECT,YEAR(VOUCHER_DATE),MONTH(VOUCHER_DATE)) AS T2) AS FNL\n" +
                           "\n" +
                           " ORDER BY BRANCH_OFFICE_CODE, PROJECT DESC";
                        break;
                        // AND DATE_CLOSED IS NULL
                    }
                case ReportSQLCommand.Masters.BranchExportVoucher:
                    {
                        query = "SELECT HO.HEAD_OFFICE_ID, BO.BRANCH_OFFICE_ID, HO.HEAD_OFFICE_CODE, HO.HEAD_OFFICE_NAME,\n" +
                                    "BO.BRANCH_OFFICE_CODE, BO.BRANCH_PART_CODE, BO.BRANCH_OFFICE_NAME, " +
                                    "IFNULL(DATE_FORMAT(DTS.UPLOADED_ON,'%d/%m/%Y %h:%i %p'),'') UPLOADED_ON,\n" +
                                    "IFNULL(DATE_FORMAT(DTS.VOUCHER_FROM,'%d/%m/%Y'),'') VOUCHER_FROM, \n" +
                                    "IFNULL(DATE_FORMAT(DTS.VOUCHER_TO,'%d/%m/%Y'),'') VOUCHER_TO, IFNULL(DTS.PROJECT,'') PROJECT, \n" +
                                    "IFNULL(DTS.LOCATION,'') LOCATION, IFNULL(DTS.UPLOADED_BY,'') UPLOADED_BY, IFNULL(DTS.`STATUS`,'') STATUS\n" +
                                    "FROM BRANCH_OFFICE BO\n" +
                                    "INNER JOIN HEAD_OFFICE HO ON HO.HEAD_OFFICE_CODE = BO.HEAD_OFFICE_CODE\n" +
                                    "LEFT JOIN\n" +
                                    "(SELECT DT.HEAD_OFFICE_ID, DT.BRANCH_OFFICE_ID, DT.UPLOADED_ON,\n" +
                                        "DT.TRANS_DATE_FROM VOUCHER_FROM, DT.TRANS_DATE_TO VOUCHER_TO, IFNULL(DT.PROJECT, '') PROJECT, \n" +
                                        "DT.LOCATION, DT.UPLOADED_BY, IFNULL(DS.`STATUS`,'') STATUS\n" +
                                        "FROM DATASYNC_TASK DT\n" +
                                         "INNER JOIN DATASYNC_STATUS DS ON DS.ID = DT.STATUS\n" +
                                         "INNER JOIN (SELECT RDT.HEAD_OFFICE_ID, RDT.BRANCH_OFFICE_ID, RDT.LOCATION, RDT.UPLOADED_BY, MAX(RDT.UPLOADED_ON) UPLOADED_ON\n" +
                                                   "FROM DATASYNC_TASK RDT\n" +
                                                   "GROUP BY RDT.HEAD_OFFICE_ID, RDT.BRANCH_OFFICE_ID, RDT.LOCATION, RDT.UPLOADED_BY HAVING MAX(RDT.UPLOADED_ON)) RDT\n" +
                                                   "ON RDT.HEAD_OFFICE_ID = DT.HEAD_OFFICE_ID AND RDT.BRANCH_OFFICE_ID = DT.BRANCH_OFFICE_ID AND \n" +
                                                   "RDT.LOCATION = DT.LOCATION AND RDT.UPLOADED_BY = DT.UPLOADED_BY AND RDT.UPLOADED_ON = DT.UPLOADED_ON\n" +
                                    ") DTS\n" +
                                      "ON DTS.HEAD_OFFICE_ID = HO.HEAD_OFFICE_ID AND DTS.BRANCH_OFFICE_ID = BO.BRANCH_OFFICE_ID\n" +
                                    "WHERE HO.HEAD_OFFICE_CODE = ?HEAD_OFFICE_CODE \n" +
                                    "ORDER BY BO.BRANCH_OFFICE_NAME";
                        break;
                    }

                #endregion
            }
            return query;
        }
    }
}

/*query = "SELECT "+
           "ML.LEDGER_CODE AS LEDGER_CODE, "+
           "ML.LEDGER_NAME AS LEDGER_NAME, "+
           "LG.LEDGER_GROUP AS LEDGER_GROUP, "+
           "SUM(VT.AMOUNT) AS TOTAL, "+
           "GT.AMOUNT AS PROGRESS, "+
           "MT.VOUCHER_DATE "+
           "FROM VOUCHER_TRANS VT "+
           "LEFT JOIN VOUCHER_MASTER_TRANS MT "+
           "ON VT.VOUCHER_ID = MT.VOUCHER_ID "+
           "LEFT JOIN MASTER_PROJECT MP "+
           "ON MP.PROJECT_ID = MT.PROJECT_ID "+
           "LEFT JOIN MASTER_LEDGER ML "+
           "ON ML.LEDGER_ID = VT.LEDGER_ID "+
           "LEFT JOIN MASTER_LEDGER_GROUP LG "+
           "ON LG.GROUP_ID = ML.GROUP_ID "+
           "LEFT JOIN MASTER_DIVISION MD "+
           "ON MD.DIVISION_ID = MP.DIVISION_ID "+
           "JOIN (SELECT ML.LEDGER_ID, SUM(VT.AMOUNT) AS AMOUNT "+
           "FROM VOUCHER_TRANS VT "+
           "LEFT JOIN VOUCHER_MASTER_TRANS MT "+
           "ON VT.VOUCHER_ID = MT.VOUCHER_ID "+
           "LEFT JOIN MASTER_PROJECT MP "+
           "ON MP.PROJECT_ID = MT.PROJECT_ID "+
           "LEFT JOIN MASTER_LEDGER ML "+
           "ON ML.LEDGER_ID = VT.LEDGER_ID "+
           "LEFT JOIN MASTER_LEDGER_GROUP LG "+
           "ON LG.GROUP_ID = ML.GROUP_ID "+
           "WHERE FIND_IN_SET(MT.PROJECT_ID, ?PROJECT) "+
           "AND MT.VOUCHER_TYPE =?VOUCHER_TYPE " +
           "AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO "+
           "GROUP BY VT.LEDGER_ID) AS GT "+
           "ON ML.LEDGER_ID = GT.LEDGER_ID "+
           "WHERE FIND_IN_SET(MT.PROJECT_ID,?PROJECT) "+
           "AND MT.VOUCHER_TYPE=?VOUCHER_TYPE "+
           "AND MT.VOUCHER_DATE BETWEEN ?BEGIN_FROM  AND ?DATE_TO "+
           "GROUP BY VT.LEDGER_ID";*/

/*case ReportSQLCommand.Report.MultiAbstract:
{
    query = "SELECT " +
            "MP.PROJECT AS PROJECT_NAME, " +
            "ML.LEDGER_CODE AS LEDGER_CODE," +
            "ML.LEDGER_NAME AS LEDGER_NAME, " +
            "MD.DIVISION, " +
            "LG.LEDGER_GROUP AS GROUP_NAME, " +
            "SUM(VT.AMOUNT) AS TOTAL, " +
            "GT.AMOUNT AS PROGRESS, " +
            "MT.VOUCHER_DATE " +
            "FROM VOUCHER_TRANS VT " +
            "LEFT JOIN VOUCHER_MASTER_TRANS MT " +
            "ON VT.VOUCHER_ID = MT.VOUCHER_ID " +
            "LEFT JOIN MASTER_PROJECT MP " +
            "ON MP.PROJECT_ID = MT.PROJECT_ID " +
            "LEFT JOIN MASTER_LEDGER ML " +
            "ON ML.LEDGER_ID = VT.LEDGER_ID " +
            "LEFT JOIN MASTER_LEDGER_GROUP LG " +
            "ON LG.GROUP_ID = ML.GROUP_ID " +
            "LEFT JOIN MASTER_DIVISION MD " +
            "ON MD.DIVISION_ID = MP.DIVISION_ID " +
            "JOIN (SELECT ML.LEDGER_ID, SUM(VT.AMOUNT) AS AMOUNT " +
            "FROM VOUCHER_TRANS VT " +
            "LEFT JOIN VOUCHER_MASTER_TRANS MT " +
            "ON VT.VOUCHER_ID = MT.VOUCHER_ID " +
            "LEFT JOIN MASTER_PROJECT MP " +
            "ON MP.PROJECT_ID = MT.PROJECT_ID " +
            "LEFT JOIN MASTER_LEDGER ML " +
            "ON ML.LEDGER_ID = VT.LEDGER_ID " +
            "LEFT JOIN MASTER_LEDGER_GROUP LG " +
            "ON LG.GROUP_ID = ML.GROUP_ID " +
            "WHERE FIND_IN_SET(MT.PROJECT_ID, ?PROJECT) " +
            "AND MT.VOUCHER_TYPE = ?VOUCHER_TYPE " +
            "AND MT.VOUCHER_DATE BETWEEN ?DATE_FROM AND ?DATE_TO " +
            "GROUP BY VT.LEDGER_ID) AS GT " +
            "ON ML.LEDGER_ID = GT.LEDGER_ID " +
            "WHERE FIND_IN_SET(MT.PROJECT_ID,?PROJECT) " +
           "AND MT.VOUCHER_TYPE = ?VOUCHER_TYPE " +
            "AND MT.VOUCHER_DATE BETWEEN ?BEGIN_FROM  AND ?DATE_TO " +
            "GROUP BY VT.LEDGER_ID";
    break;
}*/

